<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="837.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="837.00"> </text><svg id="frames" x="10" width="1180" total_samples="87007"><g><title>cpu_bench_v0-42868c868297afde`core::num::from_str_radix (35 samples, 0.04%)</title><rect x="0.0218%" y="533" width="0.0402%" height="15" fill="rgb(227,0,7)" fg:x="19" fg:w="35"/><text x="0.2718%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;binius_rust::binary_field16::BinaryFieldElement16 as serde::de::Deserialize&gt;::deserialize (61 samples, 0.07%)</title><rect x="0.0034%" y="549" width="0.0701%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="61"/><text x="0.2534%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.01%)</title><rect x="0.0931%" y="533" width="0.0138%" height="15" fill="rgb(221,193,54)" fg:x="81" fg:w="12"/><text x="0.3431%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.03%)</title><rect x="0.0770%" y="549" width="0.0322%" height="15" fill="rgb(248,212,6)" fg:x="67" fg:w="28"/><text x="0.3270%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (105 samples, 0.12%)</title><rect x="0.0000%" y="565" width="0.1207%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="105"/><text x="0.2500%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`serde_json::de::from_trait (118 samples, 0.14%)</title><rect x="0.0000%" y="645" width="0.1356%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="118"/><text x="0.2500%" y="655.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (118 samples, 0.14%)</title><rect x="0.0000%" y="629" width="0.1356%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="118"/><text x="0.2500%" y="639.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (118 samples, 0.14%)</title><rect x="0.0000%" y="613" width="0.1356%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="118"/><text x="0.2500%" y="623.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (118 samples, 0.14%)</title><rect x="0.0000%" y="597" width="0.1356%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="118"/><text x="0.2500%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (118 samples, 0.14%)</title><rect x="0.0000%" y="581" width="0.1356%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="118"/><text x="0.2500%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;binius_rust::binary_ntt_cache::WI_EVAL_CACHE as core::ops::deref::Deref&gt;::deref (121 samples, 0.14%)</title><rect x="0.0000%" y="693" width="0.1391%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="121"/><text x="0.2500%" y="703.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys_common::once::queue::Once::call (121 samples, 0.14%)</title><rect x="0.0000%" y="677" width="0.1391%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="121"/><text x="0.2500%" y="687.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`std::sync::once::Once::call_once::_{{closure}} (121 samples, 0.14%)</title><rect x="0.0000%" y="661" width="0.1391%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="121"/><text x="0.2500%" y="671.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;criterion::plot::plotters_backend::PlottersBackend as criterion::plot::Plotter&gt;::abs_distributions (11 samples, 0.01%)</title><rect x="0.1437%" y="645" width="0.0126%" height="15" fill="rgb(206,188,39)" fg:x="125" fg:w="11"/><text x="0.3937%" y="655.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::plot::plotters_backend::distributions::abs_distributions (11 samples, 0.01%)</title><rect x="0.1437%" y="629" width="0.0126%" height="15" fill="rgb(217,207,13)" fg:x="125" fg:w="11"/><text x="0.3937%" y="639.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::kde::sweep_and_estimate (10 samples, 0.01%)</title><rect x="0.1448%" y="613" width="0.0115%" height="15" fill="rgb(231,73,38)" fg:x="126" fg:w="10"/><text x="0.3948%" y="623.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;criterion::html::Html as criterion::report::Report&gt;::measurement_complete (19 samples, 0.02%)</title><rect x="0.1437%" y="661" width="0.0218%" height="15" fill="rgb(225,20,46)" fg:x="125" fg:w="19"/><text x="0.3937%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (11 samples, 0.01%)</title><rect x="4.1905%" y="517" width="0.0126%" height="15" fill="rgb(210,31,41)" fg:x="3646" fg:w="11"/><text x="4.4405%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.01%)</title><rect x="4.2387%" y="485" width="0.0115%" height="15" fill="rgb(221,200,47)" fg:x="3688" fg:w="10"/><text x="4.4887%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.02%)</title><rect x="4.2525%" y="469" width="0.0161%" height="15" fill="rgb(226,26,5)" fg:x="3700" fg:w="14"/><text x="4.5025%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (24 samples, 0.03%)</title><rect x="4.2502%" y="485" width="0.0276%" height="15" fill="rgb(249,33,26)" fg:x="3698" fg:w="24"/><text x="4.5002%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (15 samples, 0.02%)</title><rect x="4.2882%" y="469" width="0.0172%" height="15" fill="rgb(235,183,28)" fg:x="3731" fg:w="15"/><text x="4.5382%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (12 samples, 0.01%)</title><rect x="4.3169%" y="469" width="0.0138%" height="15" fill="rgb(221,5,38)" fg:x="3756" fg:w="12"/><text x="4.5669%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (58 samples, 0.07%)</title><rect x="4.3376%" y="421" width="0.0667%" height="15" fill="rgb(247,18,42)" fg:x="3774" fg:w="58"/><text x="4.5876%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (68 samples, 0.08%)</title><rect x="4.3307%" y="469" width="0.0782%" height="15" fill="rgb(241,131,45)" fg:x="3768" fg:w="68"/><text x="4.5807%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (66 samples, 0.08%)</title><rect x="4.3330%" y="453" width="0.0759%" height="15" fill="rgb(249,31,29)" fg:x="3770" fg:w="66"/><text x="4.5830%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (64 samples, 0.07%)</title><rect x="4.3353%" y="437" width="0.0736%" height="15" fill="rgb(225,111,53)" fg:x="3772" fg:w="64"/><text x="4.5853%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (114 samples, 0.13%)</title><rect x="4.2813%" y="485" width="0.1310%" height="15" fill="rgb(238,160,17)" fg:x="3725" fg:w="114"/><text x="4.5313%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (223 samples, 0.26%)</title><rect x="4.2181%" y="501" width="0.2563%" height="15" fill="rgb(214,148,48)" fg:x="3670" fg:w="223"/><text x="4.4681%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (54 samples, 0.06%)</title><rect x="4.4123%" y="485" width="0.0621%" height="15" fill="rgb(232,36,49)" fg:x="3839" fg:w="54"/><text x="4.6623%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (265 samples, 0.30%)</title><rect x="4.1847%" y="533" width="0.3046%" height="15" fill="rgb(209,103,24)" fg:x="3641" fg:w="265"/><text x="4.4347%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`realloc (249 samples, 0.29%)</title><rect x="4.2031%" y="517" width="0.2862%" height="15" fill="rgb(229,88,8)" fg:x="3657" fg:w="249"/><text x="4.4531%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (285 samples, 0.33%)</title><rect x="4.1744%" y="549" width="0.3276%" height="15" fill="rgb(213,181,19)" fg:x="3632" fg:w="285"/><text x="4.4244%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::_&lt;impl core::iter::traits::collect::FromIterator&lt;binius_rust::binary_field16::BinaryFieldElement16&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from_iter (3,764 samples, 4.33%)</title><rect x="0.1919%" y="565" width="4.3261%" height="15" fill="rgb(254,191,54)" fg:x="167" fg:w="3764"/><text x="0.4419%" y="575.50">cpu_b..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,768 samples, 4.33%)</title><rect x="0.1896%" y="581" width="4.3307%" height="15" fill="rgb(241,83,37)" fg:x="165" fg:w="3768"/><text x="0.4396%" y="591.50">cpu_b..</text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_lock (336 samples, 0.39%)</title><rect x="4.5364%" y="581" width="0.3862%" height="15" fill="rgb(233,36,39)" fg:x="3947" fg:w="336"/><text x="4.7864%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_unlock (490 samples, 0.56%)</title><rect x="4.9226%" y="581" width="0.5632%" height="15" fill="rgb(226,3,54)" fg:x="4283" fg:w="490"/><text x="5.1726%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (15 samples, 0.02%)</title><rect x="5.5168%" y="565" width="0.0172%" height="15" fill="rgb(245,192,40)" fg:x="4800" fg:w="15"/><text x="5.7668%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (15 samples, 0.02%)</title><rect x="5.5340%" y="565" width="0.0172%" height="15" fill="rgb(238,167,29)" fg:x="4815" fg:w="15"/><text x="5.7840%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (10 samples, 0.01%)</title><rect x="5.5812%" y="517" width="0.0115%" height="15" fill="rgb(232,182,51)" fg:x="4856" fg:w="10"/><text x="5.8312%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (14 samples, 0.02%)</title><rect x="5.5777%" y="549" width="0.0161%" height="15" fill="rgb(231,60,39)" fg:x="4853" fg:w="14"/><text x="5.8277%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`realloc (13 samples, 0.01%)</title><rect x="5.5789%" y="533" width="0.0149%" height="15" fill="rgb(208,69,12)" fg:x="4854" fg:w="13"/><text x="5.8289%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.03%)</title><rect x="5.5674%" y="565" width="0.0345%" height="15" fill="rgb(235,93,37)" fg:x="4844" fg:w="30"/><text x="5.8174%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (40 samples, 0.05%)</title><rect x="5.6501%" y="549" width="0.0460%" height="15" fill="rgb(213,116,39)" fg:x="4916" fg:w="40"/><text x="5.9001%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (30 samples, 0.03%)</title><rect x="5.6961%" y="549" width="0.0345%" height="15" fill="rgb(222,207,29)" fg:x="4956" fg:w="30"/><text x="5.9461%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (20 samples, 0.02%)</title><rect x="5.7306%" y="549" width="0.0230%" height="15" fill="rgb(206,96,30)" fg:x="4986" fg:w="20"/><text x="5.9806%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (26 samples, 0.03%)</title><rect x="5.7536%" y="549" width="0.0299%" height="15" fill="rgb(218,138,4)" fg:x="5006" fg:w="26"/><text x="6.0036%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.03%)</title><rect x="5.7869%" y="549" width="0.0264%" height="15" fill="rgb(250,191,14)" fg:x="5035" fg:w="23"/><text x="6.0369%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (11 samples, 0.01%)</title><rect x="5.9478%" y="533" width="0.0126%" height="15" fill="rgb(239,60,40)" fg:x="5175" fg:w="11"/><text x="6.1978%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (14 samples, 0.02%)</title><rect x="5.9604%" y="533" width="0.0161%" height="15" fill="rgb(206,27,48)" fg:x="5186" fg:w="14"/><text x="6.2104%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.02%)</title><rect x="6.0018%" y="517" width="0.0184%" height="15" fill="rgb(225,35,8)" fg:x="5222" fg:w="16"/><text x="6.2518%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (73 samples, 0.08%)</title><rect x="5.9765%" y="533" width="0.0839%" height="15" fill="rgb(250,213,24)" fg:x="5200" fg:w="73"/><text x="6.2265%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (35 samples, 0.04%)</title><rect x="6.0202%" y="517" width="0.0402%" height="15" fill="rgb(247,123,22)" fg:x="5238" fg:w="35"/><text x="6.2702%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (26 samples, 0.03%)</title><rect x="6.0604%" y="533" width="0.0299%" height="15" fill="rgb(231,138,38)" fg:x="5273" fg:w="26"/><text x="6.3104%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (68 samples, 0.08%)</title><rect x="6.1053%" y="533" width="0.0782%" height="15" fill="rgb(231,145,46)" fg:x="5312" fg:w="68"/><text x="6.3553%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (369 samples, 0.42%)</title><rect x="6.1834%" y="533" width="0.4241%" height="15" fill="rgb(251,118,11)" fg:x="5380" fg:w="369"/><text x="6.4334%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (780 samples, 0.90%)</title><rect x="5.8145%" y="549" width="0.8965%" height="15" fill="rgb(217,147,25)" fg:x="5059" fg:w="780"/><text x="6.0645%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (86 samples, 0.10%)</title><rect x="6.6121%" y="533" width="0.0988%" height="15" fill="rgb(247,81,37)" fg:x="5753" fg:w="86"/><text x="6.8621%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.01%)</title><rect x="6.7431%" y="517" width="0.0126%" height="15" fill="rgb(209,12,38)" fg:x="5867" fg:w="11"/><text x="6.9931%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (28 samples, 0.03%)</title><rect x="6.7374%" y="533" width="0.0322%" height="15" fill="rgb(227,1,9)" fg:x="5862" fg:w="28"/><text x="6.9874%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.01%)</title><rect x="6.7558%" y="517" width="0.0138%" height="15" fill="rgb(248,47,43)" fg:x="5878" fg:w="12"/><text x="7.0058%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (43 samples, 0.05%)</title><rect x="6.7811%" y="533" width="0.0494%" height="15" fill="rgb(221,10,30)" fg:x="5900" fg:w="43"/><text x="7.0311%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (109 samples, 0.13%)</title><rect x="6.7110%" y="549" width="0.1253%" height="15" fill="rgb(210,229,1)" fg:x="5839" fg:w="109"/><text x="6.9610%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (165 samples, 0.19%)</title><rect x="6.8362%" y="549" width="0.1896%" height="15" fill="rgb(222,148,37)" fg:x="5948" fg:w="165"/><text x="7.0862%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (181 samples, 0.21%)</title><rect x="7.0259%" y="549" width="0.2080%" height="15" fill="rgb(234,67,33)" fg:x="6113" fg:w="181"/><text x="7.2759%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (333 samples, 0.38%)</title><rect x="7.2339%" y="549" width="0.3827%" height="15" fill="rgb(247,98,35)" fg:x="6294" fg:w="333"/><text x="7.4839%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (227 samples, 0.26%)</title><rect x="7.6178%" y="549" width="0.2609%" height="15" fill="rgb(247,138,52)" fg:x="6628" fg:w="227"/><text x="7.8678%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (2,056 samples, 2.36%)</title><rect x="5.6018%" y="565" width="2.3630%" height="15" fill="rgb(213,79,30)" fg:x="4874" fg:w="2056"/><text x="5.8518%" y="575.50">cp..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (75 samples, 0.09%)</title><rect x="7.8787%" y="549" width="0.0862%" height="15" fill="rgb(246,177,23)" fg:x="6855" fg:w="75"/><text x="8.1287%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (34 samples, 0.04%)</title><rect x="7.9856%" y="549" width="0.0391%" height="15" fill="rgb(230,62,27)" fg:x="6948" fg:w="34"/><text x="8.2356%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.02%)</title><rect x="8.0051%" y="533" width="0.0195%" height="15" fill="rgb(216,154,8)" fg:x="6965" fg:w="17"/><text x="8.2551%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.01%)</title><rect x="8.0246%" y="549" width="0.0115%" height="15" fill="rgb(244,35,45)" fg:x="6982" fg:w="10"/><text x="8.2746%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.02%)</title><rect x="8.0361%" y="549" width="0.0161%" height="15" fill="rgb(251,115,12)" fg:x="6992" fg:w="14"/><text x="8.2861%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.01%)</title><rect x="8.0522%" y="549" width="0.0115%" height="15" fill="rgb(240,54,50)" fg:x="7006" fg:w="10"/><text x="8.3022%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (98 samples, 0.11%)</title><rect x="7.9649%" y="565" width="0.1126%" height="15" fill="rgb(233,84,52)" fg:x="6930" fg:w="98"/><text x="8.2149%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (58 samples, 0.07%)</title><rect x="8.0775%" y="565" width="0.0667%" height="15" fill="rgb(207,117,47)" fg:x="7028" fg:w="58"/><text x="8.3275%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (54 samples, 0.06%)</title><rect x="8.1442%" y="565" width="0.0621%" height="15" fill="rgb(249,43,39)" fg:x="7086" fg:w="54"/><text x="8.3942%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (83 samples, 0.10%)</title><rect x="8.2062%" y="565" width="0.0954%" height="15" fill="rgb(209,38,44)" fg:x="7140" fg:w="83"/><text x="8.4562%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (73 samples, 0.08%)</title><rect x="8.3016%" y="565" width="0.0839%" height="15" fill="rgb(236,212,23)" fg:x="7223" fg:w="73"/><text x="8.5516%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (2,562 samples, 2.94%)</title><rect x="5.4915%" y="581" width="2.9446%" height="15" fill="rgb(242,79,21)" fg:x="4778" fg:w="2562"/><text x="5.7415%" y="591.50">cp..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (44 samples, 0.05%)</title><rect x="8.3855%" y="565" width="0.0506%" height="15" fill="rgb(211,96,35)" fg:x="7296" fg:w="44"/><text x="8.6355%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (3,423 samples, 3.93%)</title><rect x="8.4361%" y="581" width="3.9342%" height="15" fill="rgb(253,215,40)" fg:x="7340" fg:w="3423"/><text x="8.6861%" y="591.50">cpu_..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (3,580 samples, 4.11%)</title><rect x="12.3703%" y="581" width="4.1146%" height="15" fill="rgb(211,81,21)" fg:x="10763" fg:w="3580"/><text x="12.6203%" y="591.50">cpu_..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (74 samples, 0.09%)</title><rect x="16.3998%" y="565" width="0.0851%" height="15" fill="rgb(208,190,38)" fg:x="14269" fg:w="74"/><text x="16.6498%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (74 samples, 0.09%)</title><rect x="16.3998%" y="549" width="0.0851%" height="15" fill="rgb(235,213,38)" fg:x="14269" fg:w="74"/><text x="16.6498%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (73 samples, 0.08%)</title><rect x="16.4010%" y="533" width="0.0839%" height="15" fill="rgb(237,122,38)" fg:x="14270" fg:w="73"/><text x="16.6510%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (73 samples, 0.08%)</title><rect x="16.4010%" y="517" width="0.0839%" height="15" fill="rgb(244,218,35)" fg:x="14270" fg:w="73"/><text x="16.6510%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (13 samples, 0.01%)</title><rect x="27.6242%" y="501" width="0.0149%" height="15" fill="rgb(240,68,47)" fg:x="24035" fg:w="13"/><text x="27.8742%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (19 samples, 0.02%)</title><rect x="27.6185%" y="517" width="0.0218%" height="15" fill="rgb(210,16,53)" fg:x="24030" fg:w="19"/><text x="27.8685%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.03%)</title><rect x="27.6139%" y="565" width="0.0299%" height="15" fill="rgb(235,124,12)" fg:x="24026" fg:w="26"/><text x="27.8639%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (26 samples, 0.03%)</title><rect x="27.6139%" y="549" width="0.0299%" height="15" fill="rgb(224,169,11)" fg:x="24026" fg:w="26"/><text x="27.8639%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`realloc (26 samples, 0.03%)</title><rect x="27.6139%" y="533" width="0.0299%" height="15" fill="rgb(250,166,2)" fg:x="24026" fg:w="26"/><text x="27.8639%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (936 samples, 1.08%)</title><rect x="27.6438%" y="565" width="1.0758%" height="15" fill="rgb(242,216,29)" fg:x="24052" fg:w="936"/><text x="27.8938%" y="575.50"></text></g><g><title>libsystem_m.dylib`log2 (42 samples, 0.05%)</title><rect x="28.7195%" y="565" width="0.0483%" height="15" fill="rgb(230,116,27)" fg:x="24988" fg:w="42"/><text x="28.9695%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_small (10 samples, 0.01%)</title><rect x="28.7735%" y="565" width="0.0115%" height="15" fill="rgb(228,99,48)" fg:x="25035" fg:w="10"/><text x="29.0235%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (55 samples, 0.06%)</title><rect x="28.8138%" y="517" width="0.0632%" height="15" fill="rgb(253,11,6)" fg:x="25070" fg:w="55"/><text x="29.0638%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (63 samples, 0.07%)</title><rect x="28.8069%" y="549" width="0.0724%" height="15" fill="rgb(247,143,39)" fg:x="25064" fg:w="63"/><text x="29.0569%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (62 samples, 0.07%)</title><rect x="28.8080%" y="533" width="0.0713%" height="15" fill="rgb(236,97,10)" fg:x="25065" fg:w="62"/><text x="29.0580%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (95 samples, 0.11%)</title><rect x="28.8000%" y="565" width="0.1092%" height="15" fill="rgb(233,208,19)" fg:x="25058" fg:w="95"/><text x="29.0500%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.03%)</title><rect x="28.8804%" y="549" width="0.0287%" height="15" fill="rgb(216,164,2)" fg:x="25128" fg:w="25"/><text x="29.1304%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.02%)</title><rect x="28.8908%" y="533" width="0.0184%" height="15" fill="rgb(220,129,5)" fg:x="25137" fg:w="16"/><text x="29.1408%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2,980 samples, 3.43%)</title><rect x="28.9115%" y="565" width="3.4250%" height="15" fill="rgb(242,17,10)" fg:x="25155" fg:w="2980"/><text x="29.1615%" y="575.50">lib..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (15,276 samples, 17.56%)</title><rect x="16.4849%" y="581" width="17.5572%" height="15" fill="rgb(242,107,0)" fg:x="14343" fg:w="15276"/><text x="16.7349%" y="591.50">cpu_bench_v0-42868c868297af..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1,484 samples, 1.71%)</title><rect x="32.3365%" y="565" width="1.7056%" height="15" fill="rgb(251,28,31)" fg:x="28135" fg:w="1484"/><text x="32.5865%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.02%)</title><rect x="34.0432%" y="581" width="0.0218%" height="15" fill="rgb(233,223,10)" fg:x="29620" fg:w="19"/><text x="34.2932%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.04%)</title><rect x="34.0720%" y="581" width="0.0368%" height="15" fill="rgb(215,21,27)" fg:x="29645" fg:w="32"/><text x="34.3220%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.03%)</title><rect x="34.1099%" y="581" width="0.0276%" height="15" fill="rgb(232,23,21)" fg:x="29678" fg:w="24"/><text x="34.3599%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (182 samples, 0.21%)</title><rect x="34.1398%" y="581" width="0.2092%" height="15" fill="rgb(244,5,23)" fg:x="29704" fg:w="182"/><text x="34.3898%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (20 samples, 0.02%)</title><rect x="34.3490%" y="581" width="0.0230%" height="15" fill="rgb(226,81,46)" fg:x="29886" fg:w="20"/><text x="34.5990%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29,744 samples, 34.19%)</title><rect x="0.1885%" y="597" width="34.1858%" height="15" fill="rgb(247,70,30)" fg:x="164" fg:w="29744"/><text x="0.4385%" y="607.50">cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as al..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (12 samples, 0.01%)</title><rect x="34.3823%" y="533" width="0.0138%" height="15" fill="rgb(212,68,19)" fg:x="29915" fg:w="12"/><text x="34.6323%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="34.3788%" y="581" width="0.0184%" height="15" fill="rgb(240,187,13)" fg:x="29912" fg:w="16"/><text x="34.6288%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (14 samples, 0.02%)</title><rect x="34.3811%" y="565" width="0.0161%" height="15" fill="rgb(223,113,26)" fg:x="29914" fg:w="14"/><text x="34.6311%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`realloc (14 samples, 0.02%)</title><rect x="34.3811%" y="549" width="0.0161%" height="15" fill="rgb(206,192,2)" fg:x="29914" fg:w="14"/><text x="34.6311%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`sha2::sha256::compress256 (5,230 samples, 6.01%)</title><rect x="34.4007%" y="581" width="6.0110%" height="15" fill="rgb(241,108,4)" fg:x="29931" fg:w="5230"/><text x="34.6507%" y="591.50">cpu_benc..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::merkle_tree::merkelize (5,265 samples, 6.05%)</title><rect x="34.3788%" y="597" width="6.0512%" height="15" fill="rgb(247,173,49)" fg:x="29912" fg:w="5265"/><text x="34.6288%" y="607.50">cpu_benc..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,945 samples, 18.33%)</title><rect x="41.0530%" y="549" width="18.3261%" height="15" fill="rgb(224,114,35)" fg:x="35719" fg:w="15945"/><text x="41.3030%" y="559.50">cpu_bench_v0-42868c868297afde..</text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1,128 samples, 1.30%)</title><rect x="59.4688%" y="501" width="1.2964%" height="15" fill="rgb(245,159,27)" fg:x="51742" fg:w="1128"/><text x="59.7188%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (11 samples, 0.01%)</title><rect x="60.7652%" y="501" width="0.0126%" height="15" fill="rgb(245,172,44)" fg:x="52870" fg:w="11"/><text x="61.0152%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,199 samples, 19.77%)</title><rect x="41.0415%" y="565" width="19.7674%" height="15" fill="rgb(236,23,11)" fg:x="35709" fg:w="17199"/><text x="41.2915%" y="575.50">cpu_bench_v0-42868c868297afde`&lt;..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,236 samples, 1.42%)</title><rect x="59.3883%" y="549" width="1.4206%" height="15" fill="rgb(205,117,38)" fg:x="51672" fg:w="1236"/><text x="59.6383%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1,220 samples, 1.40%)</title><rect x="59.4067%" y="533" width="1.4022%" height="15" fill="rgb(237,72,25)" fg:x="51688" fg:w="1220"/><text x="59.6567%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1,190 samples, 1.37%)</title><rect x="59.4412%" y="517" width="1.3677%" height="15" fill="rgb(244,70,9)" fg:x="51718" fg:w="1190"/><text x="59.6912%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (27 samples, 0.03%)</title><rect x="60.7779%" y="501" width="0.0310%" height="15" fill="rgb(217,125,39)" fg:x="52881" fg:w="27"/><text x="61.0279%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.01%)</title><rect x="60.8169%" y="565" width="0.0126%" height="15" fill="rgb(235,36,10)" fg:x="52915" fg:w="11"/><text x="61.0669%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,227 samples, 19.80%)</title><rect x="41.0346%" y="581" width="19.7996%" height="15" fill="rgb(251,123,47)" fg:x="35703" fg:w="17227"/><text x="41.2846%" y="591.50">cpu_bench_v0-42868c868297afde`&lt;..</text></g><g><title>libsystem_malloc.dylib`_szone_free (17 samples, 0.02%)</title><rect x="60.8388%" y="581" width="0.0195%" height="15" fill="rgb(221,13,13)" fg:x="52934" fg:w="17"/><text x="61.0888%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_free_detach_region (9 samples, 0.01%)</title><rect x="60.8974%" y="565" width="0.0103%" height="15" fill="rgb(238,131,9)" fg:x="52985" fg:w="9"/><text x="61.1474%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (32 samples, 0.04%)</title><rect x="60.9077%" y="565" width="0.0368%" height="15" fill="rgb(211,50,8)" fg:x="52994" fg:w="32"/><text x="61.1577%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (9 samples, 0.01%)</title><rect x="60.9445%" y="565" width="0.0103%" height="15" fill="rgb(245,182,24)" fg:x="53026" fg:w="9"/><text x="61.1945%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="60.9549%" y="565" width="0.0172%" height="15" fill="rgb(242,14,37)" fg:x="53035" fg:w="15"/><text x="61.2049%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (33 samples, 0.04%)</title><rect x="60.9721%" y="565" width="0.0379%" height="15" fill="rgb(246,228,12)" fg:x="53050" fg:w="33"/><text x="61.2221%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_free_reattach_region (10 samples, 0.01%)</title><rect x="61.0100%" y="565" width="0.0115%" height="15" fill="rgb(213,55,15)" fg:x="53083" fg:w="10"/><text x="61.2600%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (147 samples, 0.17%)</title><rect x="61.0215%" y="565" width="0.1690%" height="15" fill="rgb(209,9,3)" fg:x="53093" fg:w="147"/><text x="61.2715%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`madvise (143 samples, 0.16%)</title><rect x="61.0261%" y="549" width="0.1644%" height="15" fill="rgb(230,59,30)" fg:x="53097" fg:w="143"/><text x="61.2761%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`madvise (556 samples, 0.64%)</title><rect x="61.2043%" y="549" width="0.6390%" height="15" fill="rgb(209,121,21)" fg:x="53252" fg:w="556"/><text x="61.4543%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_small (863 samples, 0.99%)</title><rect x="60.8583%" y="581" width="0.9919%" height="15" fill="rgb(220,109,13)" fg:x="52951" fg:w="863"/><text x="61.1083%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (574 samples, 0.66%)</title><rect x="61.1905%" y="565" width="0.6597%" height="15" fill="rgb(232,18,1)" fg:x="53240" fg:w="574"/><text x="61.4405%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::computed_tprimes (18,655 samples, 21.44%)</title><rect x="40.4301%" y="597" width="21.4408%" height="15" fill="rgb(215,41,42)" fg:x="35177" fg:w="18655"/><text x="40.6801%" y="607.50">cpu_bench_v0-42868c868297afde`bini..</text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (25 samples, 0.03%)</title><rect x="61.9398%" y="533" width="0.0287%" height="15" fill="rgb(224,123,36)" fg:x="53892" fg:w="25"/><text x="62.1898%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (11 samples, 0.01%)</title><rect x="61.9686%" y="533" width="0.0126%" height="15" fill="rgb(240,125,3)" fg:x="53917" fg:w="11"/><text x="62.2186%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (9 samples, 0.01%)</title><rect x="61.9812%" y="533" width="0.0103%" height="15" fill="rgb(205,98,50)" fg:x="53928" fg:w="9"/><text x="62.2312%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (10 samples, 0.01%)</title><rect x="61.9916%" y="533" width="0.0115%" height="15" fill="rgb(205,185,37)" fg:x="53937" fg:w="10"/><text x="62.2416%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (28 samples, 0.03%)</title><rect x="62.0180%" y="517" width="0.0322%" height="15" fill="rgb(238,207,15)" fg:x="53960" fg:w="28"/><text x="62.2680%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`realloc (22 samples, 0.03%)</title><rect x="62.0249%" y="501" width="0.0253%" height="15" fill="rgb(213,199,42)" fg:x="53966" fg:w="22"/><text x="62.2749%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (13 samples, 0.01%)</title><rect x="62.0352%" y="485" width="0.0149%" height="15" fill="rgb(235,201,11)" fg:x="53975" fg:w="13"/><text x="62.2852%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (42 samples, 0.05%)</title><rect x="62.0042%" y="533" width="0.0483%" height="15" fill="rgb(207,46,11)" fg:x="53948" fg:w="42"/><text x="62.2542%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (65 samples, 0.07%)</title><rect x="62.1203%" y="517" width="0.0747%" height="15" fill="rgb(241,35,35)" fg:x="54049" fg:w="65"/><text x="62.3703%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (49 samples, 0.06%)</title><rect x="62.1950%" y="517" width="0.0563%" height="15" fill="rgb(243,32,47)" fg:x="54114" fg:w="49"/><text x="62.4450%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (36 samples, 0.04%)</title><rect x="62.2513%" y="517" width="0.0414%" height="15" fill="rgb(247,202,23)" fg:x="54163" fg:w="36"/><text x="62.5013%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (36 samples, 0.04%)</title><rect x="62.2927%" y="517" width="0.0414%" height="15" fill="rgb(219,102,11)" fg:x="54199" fg:w="36"/><text x="62.5427%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="62.3605%" y="501" width="0.0103%" height="15" fill="rgb(243,110,44)" fg:x="54258" fg:w="9"/><text x="62.6105%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (38 samples, 0.04%)</title><rect x="62.3364%" y="517" width="0.0437%" height="15" fill="rgb(222,74,54)" fg:x="54237" fg:w="38"/><text x="62.5864%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (17 samples, 0.02%)</title><rect x="62.5662%" y="501" width="0.0195%" height="15" fill="rgb(216,99,12)" fg:x="54437" fg:w="17"/><text x="62.8162%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (16 samples, 0.02%)</title><rect x="62.5858%" y="501" width="0.0184%" height="15" fill="rgb(226,22,26)" fg:x="54454" fg:w="16"/><text x="62.8358%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="62.6294%" y="485" width="0.0115%" height="15" fill="rgb(217,163,10)" fg:x="54492" fg:w="10"/><text x="62.8794%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.03%)</title><rect x="62.6409%" y="485" width="0.0276%" height="15" fill="rgb(213,25,53)" fg:x="54502" fg:w="24"/><text x="62.8909%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (105 samples, 0.12%)</title><rect x="62.6042%" y="501" width="0.1207%" height="15" fill="rgb(252,105,26)" fg:x="54470" fg:w="105"/><text x="62.8542%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (49 samples, 0.06%)</title><rect x="62.6685%" y="485" width="0.0563%" height="15" fill="rgb(220,39,43)" fg:x="54526" fg:w="49"/><text x="62.9185%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (21 samples, 0.02%)</title><rect x="62.7260%" y="501" width="0.0241%" height="15" fill="rgb(229,68,48)" fg:x="54576" fg:w="21"/><text x="62.9760%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (13 samples, 0.01%)</title><rect x="62.7501%" y="501" width="0.0149%" height="15" fill="rgb(252,8,32)" fg:x="54597" fg:w="13"/><text x="63.0001%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (105 samples, 0.12%)</title><rect x="62.7743%" y="501" width="0.1207%" height="15" fill="rgb(223,20,43)" fg:x="54618" fg:w="105"/><text x="63.0243%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (531 samples, 0.61%)</title><rect x="62.8949%" y="501" width="0.6103%" height="15" fill="rgb(229,81,49)" fg:x="54723" fg:w="531"/><text x="63.1449%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,117 samples, 1.28%)</title><rect x="62.3812%" y="517" width="1.2838%" height="15" fill="rgb(236,28,36)" fg:x="54276" fg:w="1117"/><text x="62.6312%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (138 samples, 0.16%)</title><rect x="63.5064%" y="501" width="0.1586%" height="15" fill="rgb(249,185,26)" fg:x="55255" fg:w="138"/><text x="63.7564%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="63.6891%" y="485" width="0.0103%" height="15" fill="rgb(249,174,33)" fg:x="55414" fg:w="9"/><text x="63.9391%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.02%)</title><rect x="63.6995%" y="485" width="0.0195%" height="15" fill="rgb(233,201,37)" fg:x="55423" fg:w="17"/><text x="63.9495%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (38 samples, 0.04%)</title><rect x="63.6834%" y="501" width="0.0437%" height="15" fill="rgb(221,78,26)" fg:x="55409" fg:w="38"/><text x="63.9334%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.01%)</title><rect x="63.7305%" y="501" width="0.0115%" height="15" fill="rgb(250,127,30)" fg:x="55450" fg:w="10"/><text x="63.9805%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (72 samples, 0.08%)</title><rect x="63.7420%" y="501" width="0.0828%" height="15" fill="rgb(230,49,44)" fg:x="55460" fg:w="72"/><text x="63.9920%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (146 samples, 0.17%)</title><rect x="63.6650%" y="517" width="0.1678%" height="15" fill="rgb(229,67,23)" fg:x="55393" fg:w="146"/><text x="63.9150%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (263 samples, 0.30%)</title><rect x="63.8328%" y="517" width="0.3023%" height="15" fill="rgb(249,83,47)" fg:x="55539" fg:w="263"/><text x="64.0828%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (273 samples, 0.31%)</title><rect x="64.1351%" y="517" width="0.3138%" height="15" fill="rgb(215,43,3)" fg:x="55802" fg:w="273"/><text x="64.3851%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (447 samples, 0.51%)</title><rect x="64.4488%" y="517" width="0.5138%" height="15" fill="rgb(238,154,13)" fg:x="56075" fg:w="447"/><text x="64.6988%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (367 samples, 0.42%)</title><rect x="64.9626%" y="517" width="0.4218%" height="15" fill="rgb(219,56,2)" fg:x="56522" fg:w="367"/><text x="65.2126%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (3,019 samples, 3.47%)</title><rect x="62.0525%" y="533" width="3.4698%" height="15" fill="rgb(233,0,4)" fg:x="53990" fg:w="3019"/><text x="62.3025%" y="543.50">cpu..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (120 samples, 0.14%)</title><rect x="65.3844%" y="517" width="0.1379%" height="15" fill="rgb(235,30,7)" fg:x="56889" fg:w="120"/><text x="65.6344%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.01%)</title><rect x="65.5396%" y="517" width="0.0115%" height="15" fill="rgb(250,79,13)" fg:x="57024" fg:w="10"/><text x="65.7896%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="65.5614%" y="501" width="0.0126%" height="15" fill="rgb(211,146,34)" fg:x="57043" fg:w="11"/><text x="65.8114%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (23 samples, 0.03%)</title><rect x="65.5798%" y="501" width="0.0264%" height="15" fill="rgb(228,22,38)" fg:x="57059" fg:w="23"/><text x="65.8298%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (54 samples, 0.06%)</title><rect x="65.5510%" y="517" width="0.0621%" height="15" fill="rgb(235,168,5)" fg:x="57034" fg:w="54"/><text x="65.8010%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (28 samples, 0.03%)</title><rect x="65.6212%" y="517" width="0.0322%" height="15" fill="rgb(221,155,16)" fg:x="57095" fg:w="28"/><text x="65.8712%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.01%)</title><rect x="65.6533%" y="517" width="0.0103%" height="15" fill="rgb(215,215,53)" fg:x="57123" fg:w="9"/><text x="65.9033%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.02%)</title><rect x="65.6637%" y="517" width="0.0195%" height="15" fill="rgb(223,4,10)" fg:x="57132" fg:w="17"/><text x="65.9137%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (146 samples, 0.17%)</title><rect x="65.5223%" y="533" width="0.1678%" height="15" fill="rgb(234,103,6)" fg:x="57009" fg:w="146"/><text x="65.7723%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (110 samples, 0.13%)</title><rect x="65.6901%" y="533" width="0.1264%" height="15" fill="rgb(227,97,0)" fg:x="57155" fg:w="110"/><text x="65.9401%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (92 samples, 0.11%)</title><rect x="65.8165%" y="533" width="0.1057%" height="15" fill="rgb(234,150,53)" fg:x="57265" fg:w="92"/><text x="66.0665%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (153 samples, 0.18%)</title><rect x="65.9223%" y="533" width="0.1758%" height="15" fill="rgb(228,201,54)" fg:x="57357" fg:w="153"/><text x="66.1723%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (109 samples, 0.13%)</title><rect x="66.0981%" y="533" width="0.1253%" height="15" fill="rgb(222,22,37)" fg:x="57510" fg:w="109"/><text x="66.3481%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (3,819 samples, 4.39%)</title><rect x="61.9042%" y="549" width="4.3893%" height="15" fill="rgb(237,53,32)" fg:x="53861" fg:w="3819"/><text x="62.1542%" y="559.50">cpu_b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (61 samples, 0.07%)</title><rect x="66.2234%" y="533" width="0.0701%" height="15" fill="rgb(233,25,53)" fg:x="57619" fg:w="61"/><text x="66.4734%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (11 samples, 0.01%)</title><rect x="66.3085%" y="485" width="0.0126%" height="15" fill="rgb(210,40,34)" fg:x="57693" fg:w="11"/><text x="66.5585%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (18 samples, 0.02%)</title><rect x="66.3027%" y="517" width="0.0207%" height="15" fill="rgb(241,220,44)" fg:x="57688" fg:w="18"/><text x="66.5527%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`realloc (16 samples, 0.02%)</title><rect x="66.3050%" y="501" width="0.0184%" height="15" fill="rgb(235,28,35)" fg:x="57690" fg:w="16"/><text x="66.5550%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::int_to_bigbin (36 samples, 0.04%)</title><rect x="66.2935%" y="549" width="0.0414%" height="15" fill="rgb(210,56,17)" fg:x="57680" fg:w="36"/><text x="66.5435%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (33 samples, 0.04%)</title><rect x="66.2970%" y="533" width="0.0379%" height="15" fill="rgb(224,130,29)" fg:x="57683" fg:w="33"/><text x="66.5470%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.03%)</title><rect x="66.3349%" y="549" width="0.0287%" height="15" fill="rgb(235,212,8)" fg:x="57716" fg:w="25"/><text x="66.5849%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.01%)</title><rect x="66.3636%" y="549" width="0.0115%" height="15" fill="rgb(223,33,50)" fg:x="57741" fg:w="10"/><text x="66.6136%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (57 samples, 0.07%)</title><rect x="66.3751%" y="549" width="0.0655%" height="15" fill="rgb(219,149,13)" fg:x="57751" fg:w="57"/><text x="66.6251%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.03%)</title><rect x="66.4429%" y="549" width="0.0299%" height="15" fill="rgb(250,156,29)" fg:x="57810" fg:w="26"/><text x="66.6929%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,020 samples, 4.62%)</title><rect x="61.8743%" y="565" width="4.6203%" height="15" fill="rgb(216,193,19)" fg:x="53835" fg:w="4020"/><text x="62.1243%" y="575.50">cpu_b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.02%)</title><rect x="66.4728%" y="549" width="0.0218%" height="15" fill="rgb(216,135,14)" fg:x="57836" fg:w="19"/><text x="66.7228%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,042 samples, 4.65%)</title><rect x="61.8743%" y="581" width="4.6456%" height="15" fill="rgb(241,47,5)" fg:x="53835" fg:w="4042"/><text x="62.1243%" y="591.50">cpu_b..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.01%)</title><rect x="66.5257%" y="581" width="0.0115%" height="15" fill="rgb(233,42,35)" fg:x="57882" fg:w="10"/><text x="66.7757%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (4,066 samples, 4.67%)</title><rect x="61.8709%" y="597" width="4.6732%" height="15" fill="rgb(231,13,6)" fg:x="53832" fg:w="4066"/><text x="62.1209%" y="607.50">cpu_b..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::pack_rows (220 samples, 0.25%)</title><rect x="66.5441%" y="597" width="0.2529%" height="15" fill="rgb(207,181,40)" fg:x="57898" fg:w="220"/><text x="66.7941%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (64 samples, 0.07%)</title><rect x="70.3231%" y="517" width="0.0736%" height="15" fill="rgb(254,173,49)" fg:x="61186" fg:w="64"/><text x="70.5731%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (79 samples, 0.09%)</title><rect x="70.3104%" y="581" width="0.0908%" height="15" fill="rgb(221,1,38)" fg:x="61175" fg:w="79"/><text x="70.5604%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (78 samples, 0.09%)</title><rect x="70.3116%" y="565" width="0.0896%" height="15" fill="rgb(206,124,46)" fg:x="61176" fg:w="78"/><text x="70.5616%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (75 samples, 0.09%)</title><rect x="70.3150%" y="549" width="0.0862%" height="15" fill="rgb(249,21,11)" fg:x="61179" fg:w="75"/><text x="70.5650%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (75 samples, 0.09%)</title><rect x="70.3150%" y="533" width="0.0862%" height="15" fill="rgb(222,201,40)" fg:x="61179" fg:w="75"/><text x="70.5650%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose (3,198 samples, 3.68%)</title><rect x="66.7969%" y="597" width="3.6756%" height="15" fill="rgb(235,61,29)" fg:x="58118" fg:w="3198"/><text x="67.0469%" y="607.50">cpu_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (62 samples, 0.07%)</title><rect x="70.4012%" y="581" width="0.0713%" height="15" fill="rgb(219,207,3)" fg:x="61254" fg:w="62"/><text x="70.6512%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (21 samples, 0.02%)</title><rect x="73.1757%" y="581" width="0.0241%" height="15" fill="rgb(222,56,46)" fg:x="63668" fg:w="21"/><text x="73.4257%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (18 samples, 0.02%)</title><rect x="73.1792%" y="565" width="0.0207%" height="15" fill="rgb(239,76,54)" fg:x="63671" fg:w="18"/><text x="73.4292%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_small (49 samples, 0.06%)</title><rect x="73.2010%" y="581" width="0.0563%" height="15" fill="rgb(231,124,27)" fg:x="63690" fg:w="49"/><text x="73.4510%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (35 samples, 0.04%)</title><rect x="73.2171%" y="565" width="0.0402%" height="15" fill="rgb(249,195,6)" fg:x="63704" fg:w="35"/><text x="73.4671%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`madvise (35 samples, 0.04%)</title><rect x="73.2171%" y="549" width="0.0402%" height="15" fill="rgb(237,174,47)" fg:x="63704" fg:w="35"/><text x="73.4671%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_bits (2,427 samples, 2.79%)</title><rect x="70.4725%" y="597" width="2.7894%" height="15" fill="rgb(206,201,31)" fg:x="61316" fg:w="2427"/><text x="70.7225%" y="607.50">cp..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (30 samples, 0.03%)</title><rect x="73.2757%" y="597" width="0.0345%" height="15" fill="rgb(231,57,52)" fg:x="63755" fg:w="30"/><text x="73.5257%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.04%)</title><rect x="73.3148%" y="597" width="0.0356%" height="15" fill="rgb(248,177,22)" fg:x="63789" fg:w="31"/><text x="73.5648%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (18 samples, 0.02%)</title><rect x="73.3746%" y="581" width="0.0207%" height="15" fill="rgb(215,211,37)" fg:x="63841" fg:w="18"/><text x="73.6246%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (17 samples, 0.02%)</title><rect x="73.3757%" y="565" width="0.0195%" height="15" fill="rgb(241,128,51)" fg:x="63842" fg:w="17"/><text x="73.6257%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_small (117 samples, 0.13%)</title><rect x="73.3527%" y="597" width="0.1345%" height="15" fill="rgb(227,165,31)" fg:x="63822" fg:w="117"/><text x="73.6027%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (80 samples, 0.09%)</title><rect x="73.3952%" y="581" width="0.0919%" height="15" fill="rgb(228,167,24)" fg:x="63859" fg:w="80"/><text x="73.6452%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (79 samples, 0.09%)</title><rect x="73.3964%" y="565" width="0.0908%" height="15" fill="rgb(228,143,12)" fg:x="63860" fg:w="79"/><text x="73.6464%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (19 samples, 0.02%)</title><rect x="73.4952%" y="597" width="0.0218%" height="15" fill="rgb(249,149,8)" fg:x="63946" fg:w="19"/><text x="73.7452%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (19 samples, 0.02%)</title><rect x="73.4952%" y="581" width="0.0218%" height="15" fill="rgb(243,35,44)" fg:x="63946" fg:w="19"/><text x="73.7452%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (19 samples, 0.02%)</title><rect x="73.4952%" y="565" width="0.0218%" height="15" fill="rgb(246,89,9)" fg:x="63946" fg:w="19"/><text x="73.7452%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::prover::prover (63,815 samples, 73.34%)</title><rect x="0.1827%" y="613" width="73.3447%" height="15" fill="rgb(233,213,13)" fg:x="159" fg:w="63815"/><text x="0.4327%" y="623.50">cpu_bench_v0-42868c868297afde`binius_rust::prover::prover</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16_to_bit (23 samples, 0.03%)</title><rect x="73.5539%" y="565" width="0.0264%" height="15" fill="rgb(233,141,41)" fg:x="63997" fg:w="23"/><text x="73.8039%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (14 samples, 0.02%)</title><rect x="73.5642%" y="549" width="0.0161%" height="15" fill="rgb(239,167,4)" fg:x="64006" fg:w="14"/><text x="73.8142%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (18 samples, 0.02%)</title><rect x="73.5803%" y="565" width="0.0207%" height="15" fill="rgb(209,217,16)" fg:x="64020" fg:w="18"/><text x="73.8303%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.02%)</title><rect x="73.6010%" y="565" width="0.0172%" height="15" fill="rgb(219,88,35)" fg:x="64038" fg:w="15"/><text x="73.8510%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (95 samples, 0.11%)</title><rect x="73.5366%" y="581" width="0.1092%" height="15" fill="rgb(220,193,23)" fg:x="63982" fg:w="95"/><text x="73.7866%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.03%)</title><rect x="73.6182%" y="565" width="0.0276%" height="15" fill="rgb(230,90,52)" fg:x="64053" fg:w="24"/><text x="73.8682%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_lock (11 samples, 0.01%)</title><rect x="73.6515%" y="581" width="0.0126%" height="15" fill="rgb(252,106,19)" fg:x="64082" fg:w="11"/><text x="73.9015%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_unlock (14 samples, 0.02%)</title><rect x="73.6642%" y="581" width="0.0161%" height="15" fill="rgb(206,74,20)" fg:x="64093" fg:w="14"/><text x="73.9142%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="73.7113%" y="565" width="0.0126%" height="15" fill="rgb(230,138,44)" fg:x="64134" fg:w="11"/><text x="73.9613%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (15 samples, 0.02%)</title><rect x="73.7504%" y="549" width="0.0172%" height="15" fill="rgb(235,182,43)" fg:x="64168" fg:w="15"/><text x="74.0004%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (13 samples, 0.01%)</title><rect x="73.7676%" y="549" width="0.0149%" height="15" fill="rgb(242,16,51)" fg:x="64183" fg:w="13"/><text x="74.0176%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (17 samples, 0.02%)</title><rect x="73.7918%" y="549" width="0.0195%" height="15" fill="rgb(248,9,4)" fg:x="64204" fg:w="17"/><text x="74.0418%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.02%)</title><rect x="73.8159%" y="549" width="0.0172%" height="15" fill="rgb(210,31,22)" fg:x="64225" fg:w="15"/><text x="74.0659%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 0.04%)</title><rect x="73.8975%" y="533" width="0.0402%" height="15" fill="rgb(239,54,39)" fg:x="64296" fg:w="35"/><text x="74.1475%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.02%)</title><rect x="73.9170%" y="517" width="0.0207%" height="15" fill="rgb(230,99,41)" fg:x="64313" fg:w="18"/><text x="74.1670%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (34 samples, 0.04%)</title><rect x="73.9538%" y="533" width="0.0391%" height="15" fill="rgb(253,106,12)" fg:x="64345" fg:w="34"/><text x="74.2038%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (194 samples, 0.22%)</title><rect x="73.9929%" y="533" width="0.2230%" height="15" fill="rgb(213,46,41)" fg:x="64379" fg:w="194"/><text x="74.2429%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (386 samples, 0.44%)</title><rect x="73.8354%" y="549" width="0.4436%" height="15" fill="rgb(215,133,35)" fg:x="64242" fg:w="386"/><text x="74.0854%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (55 samples, 0.06%)</title><rect x="74.2159%" y="533" width="0.0632%" height="15" fill="rgb(213,28,5)" fg:x="64573" fg:w="55"/><text x="74.4659%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (25 samples, 0.03%)</title><rect x="74.3009%" y="533" width="0.0287%" height="15" fill="rgb(215,77,49)" fg:x="64647" fg:w="25"/><text x="74.5509%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (48 samples, 0.06%)</title><rect x="74.2791%" y="549" width="0.0552%" height="15" fill="rgb(248,100,22)" fg:x="64628" fg:w="48"/><text x="74.5291%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (115 samples, 0.13%)</title><rect x="74.3342%" y="549" width="0.1322%" height="15" fill="rgb(208,67,9)" fg:x="64676" fg:w="115"/><text x="74.5842%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (91 samples, 0.10%)</title><rect x="74.4664%" y="549" width="0.1046%" height="15" fill="rgb(219,133,21)" fg:x="64791" fg:w="91"/><text x="74.7164%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (148 samples, 0.17%)</title><rect x="74.5710%" y="549" width="0.1701%" height="15" fill="rgb(246,46,29)" fg:x="64882" fg:w="148"/><text x="74.8210%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (120 samples, 0.14%)</title><rect x="74.7411%" y="549" width="0.1379%" height="15" fill="rgb(246,185,52)" fg:x="65030" fg:w="120"/><text x="74.9911%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,038 samples, 1.19%)</title><rect x="73.7240%" y="565" width="1.1930%" height="15" fill="rgb(252,136,11)" fg:x="64145" fg:w="1038"/><text x="73.9740%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (33 samples, 0.04%)</title><rect x="74.8790%" y="549" width="0.0379%" height="15" fill="rgb(219,138,53)" fg:x="65150" fg:w="33"/><text x="75.1290%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (13 samples, 0.01%)</title><rect x="74.9227%" y="549" width="0.0149%" height="15" fill="rgb(211,51,23)" fg:x="65188" fg:w="13"/><text x="75.1727%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.01%)</title><rect x="74.9549%" y="549" width="0.0103%" height="15" fill="rgb(247,221,28)" fg:x="65216" fg:w="9"/><text x="75.2049%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (50 samples, 0.06%)</title><rect x="74.9170%" y="565" width="0.0575%" height="15" fill="rgb(251,222,45)" fg:x="65183" fg:w="50"/><text x="75.1670%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.03%)</title><rect x="74.9744%" y="565" width="0.0322%" height="15" fill="rgb(217,162,53)" fg:x="65233" fg:w="28"/><text x="75.2244%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (27 samples, 0.03%)</title><rect x="75.0066%" y="565" width="0.0310%" height="15" fill="rgb(229,93,14)" fg:x="65261" fg:w="27"/><text x="75.2566%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (39 samples, 0.04%)</title><rect x="75.0376%" y="565" width="0.0448%" height="15" fill="rgb(209,67,49)" fg:x="65288" fg:w="39"/><text x="75.2876%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (37 samples, 0.04%)</title><rect x="75.0825%" y="565" width="0.0425%" height="15" fill="rgb(213,87,29)" fg:x="65327" fg:w="37"/><text x="75.3325%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,272 samples, 1.46%)</title><rect x="73.6849%" y="581" width="1.4620%" height="15" fill="rgb(205,151,52)" fg:x="64111" fg:w="1272"/><text x="73.9349%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.02%)</title><rect x="75.1250%" y="565" width="0.0218%" height="15" fill="rgb(253,215,39)" fg:x="65364" fg:w="19"/><text x="75.3750%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (113 samples, 0.13%)</title><rect x="75.1468%" y="581" width="0.1299%" height="15" fill="rgb(221,220,41)" fg:x="65383" fg:w="113"/><text x="75.3968%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (114 samples, 0.13%)</title><rect x="75.2767%" y="581" width="0.1310%" height="15" fill="rgb(218,133,21)" fg:x="65496" fg:w="114"/><text x="75.5267%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (102 samples, 0.12%)</title><rect x="75.7525%" y="565" width="0.1172%" height="15" fill="rgb(221,193,43)" fg:x="65910" fg:w="102"/><text x="76.0025%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (438 samples, 0.50%)</title><rect x="75.4077%" y="581" width="0.5034%" height="15" fill="rgb(240,128,52)" fg:x="65610" fg:w="438"/><text x="75.6577%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (36 samples, 0.04%)</title><rect x="75.8698%" y="565" width="0.0414%" height="15" fill="rgb(253,114,12)" fg:x="66012" fg:w="36"/><text x="76.1198%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::pack_row (27 samples, 0.03%)</title><rect x="75.9111%" y="581" width="0.0310%" height="15" fill="rgb(215,223,47)" fg:x="66048" fg:w="27"/><text x="76.1611%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.02%)</title><rect x="75.9238%" y="565" width="0.0184%" height="15" fill="rgb(248,225,23)" fg:x="66059" fg:w="16"/><text x="76.1738%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.02%)</title><rect x="75.9422%" y="581" width="0.0230%" height="15" fill="rgb(250,108,0)" fg:x="66075" fg:w="20"/><text x="76.1922%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.02%)</title><rect x="75.9686%" y="581" width="0.0241%" height="15" fill="rgb(228,208,7)" fg:x="66098" fg:w="21"/><text x="76.2186%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.03%)</title><rect x="75.9927%" y="581" width="0.0299%" height="15" fill="rgb(244,45,10)" fg:x="66119" fg:w="26"/><text x="76.2427%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,174 samples, 2.50%)</title><rect x="73.5355%" y="597" width="2.4986%" height="15" fill="rgb(207,125,25)" fg:x="63981" fg:w="2174"/><text x="73.7855%" y="607.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::_&lt;impl core::iter::traits::collect::FromIterator&lt;binius_rust::binary_field16::BinaryFieldElement16&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from_iter (35 samples, 0.04%)</title><rect x="76.0364%" y="597" width="0.0402%" height="15" fill="rgb(210,195,18)" fg:x="66157" fg:w="35"/><text x="76.2864%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`sha2::sha256::compress256 (42 samples, 0.05%)</title><rect x="76.0789%" y="581" width="0.0483%" height="15" fill="rgb(249,80,12)" fg:x="66194" fg:w="42"/><text x="76.3289%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::merkle_tree::verify_branch (44 samples, 0.05%)</title><rect x="76.0778%" y="597" width="0.0506%" height="15" fill="rgb(221,65,9)" fg:x="66193" fg:w="44"/><text x="76.3278%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (16 samples, 0.02%)</title><rect x="76.1651%" y="533" width="0.0184%" height="15" fill="rgb(235,49,36)" fg:x="66269" fg:w="16"/><text x="76.4151%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (11 samples, 0.01%)</title><rect x="76.1835%" y="533" width="0.0126%" height="15" fill="rgb(225,32,20)" fg:x="66285" fg:w="11"/><text x="76.4335%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.01%)</title><rect x="76.2100%" y="533" width="0.0149%" height="15" fill="rgb(215,141,46)" fg:x="66308" fg:w="13"/><text x="76.4600%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (36 samples, 0.04%)</title><rect x="76.2605%" y="517" width="0.0414%" height="15" fill="rgb(250,160,47)" fg:x="66352" fg:w="36"/><text x="76.5105%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (18 samples, 0.02%)</title><rect x="76.3019%" y="517" width="0.0207%" height="15" fill="rgb(216,222,40)" fg:x="66388" fg:w="18"/><text x="76.5519%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (15 samples, 0.02%)</title><rect x="76.3226%" y="517" width="0.0172%" height="15" fill="rgb(234,217,39)" fg:x="66406" fg:w="15"/><text x="76.5726%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (21 samples, 0.02%)</title><rect x="76.3398%" y="517" width="0.0241%" height="15" fill="rgb(207,178,40)" fg:x="66421" fg:w="21"/><text x="76.5898%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="76.3640%" y="517" width="0.0184%" height="15" fill="rgb(221,136,13)" fg:x="66442" fg:w="16"/><text x="76.6140%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.01%)</title><rect x="76.5076%" y="485" width="0.0126%" height="15" fill="rgb(249,199,10)" fg:x="66567" fg:w="11"/><text x="76.7576%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (45 samples, 0.05%)</title><rect x="76.4915%" y="501" width="0.0517%" height="15" fill="rgb(249,222,13)" fg:x="66553" fg:w="45"/><text x="76.7415%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.02%)</title><rect x="76.5203%" y="485" width="0.0230%" height="15" fill="rgb(244,185,38)" fg:x="66578" fg:w="20"/><text x="76.7703%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (11 samples, 0.01%)</title><rect x="76.5456%" y="501" width="0.0126%" height="15" fill="rgb(236,202,9)" fg:x="66600" fg:w="11"/><text x="76.7956%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (51 samples, 0.06%)</title><rect x="76.5697%" y="501" width="0.0586%" height="15" fill="rgb(250,229,37)" fg:x="66621" fg:w="51"/><text x="76.8197%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (264 samples, 0.30%)</title><rect x="76.6283%" y="501" width="0.3034%" height="15" fill="rgb(206,174,23)" fg:x="66672" fg:w="264"/><text x="76.8783%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (542 samples, 0.62%)</title><rect x="76.3824%" y="517" width="0.6229%" height="15" fill="rgb(211,33,43)" fg:x="66458" fg:w="542"/><text x="76.6324%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (64 samples, 0.07%)</title><rect x="76.9317%" y="501" width="0.0736%" height="15" fill="rgb(245,58,50)" fg:x="66936" fg:w="64"/><text x="77.1817%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="77.0179%" y="501" width="0.0103%" height="15" fill="rgb(244,68,36)" fg:x="67011" fg:w="9"/><text x="77.2679%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (36 samples, 0.04%)</title><rect x="77.0375%" y="501" width="0.0414%" height="15" fill="rgb(232,229,15)" fg:x="67028" fg:w="36"/><text x="77.2875%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (74 samples, 0.09%)</title><rect x="77.0053%" y="517" width="0.0851%" height="15" fill="rgb(254,30,23)" fg:x="67000" fg:w="74"/><text x="77.2553%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.01%)</title><rect x="77.0789%" y="501" width="0.0115%" height="15" fill="rgb(235,160,14)" fg:x="67064" fg:w="10"/><text x="77.3289%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (133 samples, 0.15%)</title><rect x="77.0903%" y="517" width="0.1529%" height="15" fill="rgb(212,155,44)" fg:x="67074" fg:w="133"/><text x="77.3403%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (121 samples, 0.14%)</title><rect x="77.2432%" y="517" width="0.1391%" height="15" fill="rgb(226,2,50)" fg:x="67207" fg:w="121"/><text x="77.4932%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (228 samples, 0.26%)</title><rect x="77.3823%" y="517" width="0.2620%" height="15" fill="rgb(234,177,6)" fg:x="67328" fg:w="228"/><text x="77.6323%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (206 samples, 0.24%)</title><rect x="77.6443%" y="517" width="0.2368%" height="15" fill="rgb(217,24,9)" fg:x="67556" fg:w="206"/><text x="77.8943%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,505 samples, 1.73%)</title><rect x="76.2249%" y="533" width="1.7297%" height="15" fill="rgb(220,13,46)" fg:x="66321" fg:w="1505"/><text x="76.4749%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (64 samples, 0.07%)</title><rect x="77.8811%" y="517" width="0.0736%" height="15" fill="rgb(239,221,27)" fg:x="67762" fg:w="64"/><text x="78.1311%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="77.9822%" y="501" width="0.0103%" height="15" fill="rgb(222,198,25)" fg:x="67850" fg:w="9"/><text x="78.2322%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (25 samples, 0.03%)</title><rect x="77.9684%" y="517" width="0.0287%" height="15" fill="rgb(211,99,13)" fg:x="67838" fg:w="25"/><text x="78.2184%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (18 samples, 0.02%)</title><rect x="78.0018%" y="517" width="0.0207%" height="15" fill="rgb(232,111,31)" fg:x="67867" fg:w="18"/><text x="78.2518%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.01%)</title><rect x="78.0225%" y="517" width="0.0126%" height="15" fill="rgb(245,82,37)" fg:x="67885" fg:w="11"/><text x="78.2725%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (85 samples, 0.10%)</title><rect x="77.9546%" y="533" width="0.0977%" height="15" fill="rgb(227,149,46)" fg:x="67826" fg:w="85"/><text x="78.2046%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.05%)</title><rect x="78.0523%" y="533" width="0.0506%" height="15" fill="rgb(218,36,50)" fg:x="67911" fg:w="44"/><text x="78.3023%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (52 samples, 0.06%)</title><rect x="78.1029%" y="533" width="0.0598%" height="15" fill="rgb(226,80,48)" fg:x="67955" fg:w="52"/><text x="78.3529%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (83 samples, 0.10%)</title><rect x="78.1627%" y="533" width="0.0954%" height="15" fill="rgb(238,224,15)" fg:x="68007" fg:w="83"/><text x="78.4127%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (55 samples, 0.06%)</title><rect x="78.2581%" y="533" width="0.0632%" height="15" fill="rgb(241,136,10)" fg:x="68090" fg:w="55"/><text x="78.5081%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,924 samples, 2.21%)</title><rect x="76.1421%" y="549" width="2.2113%" height="15" fill="rgb(208,32,45)" fg:x="66249" fg:w="1924"/><text x="76.3921%" y="559.50">c..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (28 samples, 0.03%)</title><rect x="78.3213%" y="533" width="0.0322%" height="15" fill="rgb(207,135,9)" fg:x="68145" fg:w="28"/><text x="78.5713%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::int_to_bigbin (9 samples, 0.01%)</title><rect x="78.3535%" y="549" width="0.0103%" height="15" fill="rgb(206,86,44)" fg:x="68173" fg:w="9"/><text x="78.6035%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.01%)</title><rect x="78.3535%" y="533" width="0.0103%" height="15" fill="rgb(245,177,15)" fg:x="68173" fg:w="9"/><text x="78.6035%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.01%)</title><rect x="78.3638%" y="549" width="0.0149%" height="15" fill="rgb(206,64,50)" fg:x="68182" fg:w="13"/><text x="78.6138%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.02%)</title><rect x="78.3833%" y="549" width="0.0161%" height="15" fill="rgb(234,36,40)" fg:x="68199" fg:w="14"/><text x="78.6333%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.02%)</title><rect x="78.3994%" y="549" width="0.0195%" height="15" fill="rgb(213,64,8)" fg:x="68213" fg:w="17"/><text x="78.6494%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,999 samples, 2.30%)</title><rect x="76.1284%" y="565" width="2.2975%" height="15" fill="rgb(210,75,36)" fg:x="66237" fg:w="1999"/><text x="76.3784%" y="575.50">c..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,008 samples, 2.31%)</title><rect x="76.1284%" y="581" width="2.3079%" height="15" fill="rgb(229,88,21)" fg:x="66237" fg:w="2008"/><text x="76.3784%" y="591.50">c..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (2,022 samples, 2.32%)</title><rect x="76.1284%" y="597" width="2.3240%" height="15" fill="rgb(252,204,47)" fg:x="66237" fg:w="2022"/><text x="76.3784%" y="607.50">c..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (114 samples, 0.13%)</title><rect x="78.6144%" y="565" width="0.1310%" height="15" fill="rgb(208,77,27)" fg:x="68400" fg:w="114"/><text x="78.8644%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150 samples, 0.17%)</title><rect x="78.6040%" y="581" width="0.1724%" height="15" fill="rgb(221,76,26)" fg:x="68391" fg:w="150"/><text x="78.8540%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (27 samples, 0.03%)</title><rect x="78.7454%" y="565" width="0.0310%" height="15" fill="rgb(225,139,18)" fg:x="68514" fg:w="27"/><text x="78.9954%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (27 samples, 0.03%)</title><rect x="78.7454%" y="549" width="0.0310%" height="15" fill="rgb(230,137,11)" fg:x="68514" fg:w="27"/><text x="78.9954%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`madvise (27 samples, 0.03%)</title><rect x="78.7454%" y="533" width="0.0310%" height="15" fill="rgb(212,28,1)" fg:x="68514" fg:w="27"/><text x="78.9954%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 0.07%)</title><rect x="78.8385%" y="533" width="0.0701%" height="15" fill="rgb(248,164,17)" fg:x="68595" fg:w="61"/><text x="79.0885%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (26 samples, 0.03%)</title><rect x="78.8787%" y="517" width="0.0299%" height="15" fill="rgb(222,171,42)" fg:x="68630" fg:w="26"/><text x="79.1287%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (10 samples, 0.01%)</title><rect x="78.8971%" y="501" width="0.0115%" height="15" fill="rgb(243,84,45)" fg:x="68646" fg:w="10"/><text x="79.1471%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (13 samples, 0.01%)</title><rect x="78.9086%" y="533" width="0.0149%" height="15" fill="rgb(252,49,23)" fg:x="68656" fg:w="13"/><text x="79.1586%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (12 samples, 0.01%)</title><rect x="78.9327%" y="533" width="0.0138%" height="15" fill="rgb(215,19,7)" fg:x="68677" fg:w="12"/><text x="79.1827%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.06%)</title><rect x="78.9465%" y="533" width="0.0563%" height="15" fill="rgb(238,81,41)" fg:x="68689" fg:w="49"/><text x="79.1965%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (105 samples, 0.12%)</title><rect x="79.0120%" y="533" width="0.1207%" height="15" fill="rgb(210,199,37)" fg:x="68746" fg:w="105"/><text x="79.2620%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (23 samples, 0.03%)</title><rect x="79.1327%" y="517" width="0.0264%" height="15" fill="rgb(244,192,49)" fg:x="68851" fg:w="23"/><text x="79.3827%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (23 samples, 0.03%)</title><rect x="79.1327%" y="501" width="0.0264%" height="15" fill="rgb(226,211,11)" fg:x="68851" fg:w="23"/><text x="79.3827%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (22 samples, 0.03%)</title><rect x="79.1339%" y="485" width="0.0253%" height="15" fill="rgb(236,162,54)" fg:x="68852" fg:w="22"/><text x="79.3839%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.03%)</title><rect x="79.1327%" y="533" width="0.0276%" height="15" fill="rgb(220,229,9)" fg:x="68851" fg:w="24"/><text x="79.3827%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (362 samples, 0.42%)</title><rect x="78.7764%" y="549" width="0.4161%" height="15" fill="rgb(250,87,22)" fg:x="68541" fg:w="362"/><text x="79.0264%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (28 samples, 0.03%)</title><rect x="79.1603%" y="533" width="0.0322%" height="15" fill="rgb(239,43,17)" fg:x="68875" fg:w="28"/><text x="79.4103%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (363 samples, 0.42%)</title><rect x="78.7764%" y="581" width="0.4172%" height="15" fill="rgb(231,177,25)" fg:x="68541" fg:w="363"/><text x="79.0264%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (363 samples, 0.42%)</title><rect x="78.7764%" y="565" width="0.4172%" height="15" fill="rgb(219,179,1)" fg:x="68541" fg:w="363"/><text x="79.0264%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (28 samples, 0.03%)</title><rect x="79.2051%" y="581" width="0.0322%" height="15" fill="rgb(238,219,53)" fg:x="68914" fg:w="28"/><text x="79.4551%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (71 samples, 0.08%)</title><rect x="79.2373%" y="581" width="0.0816%" height="15" fill="rgb(232,167,36)" fg:x="68942" fg:w="71"/><text x="79.4873%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::multisubset (759 samples, 0.87%)</title><rect x="78.4523%" y="597" width="0.8723%" height="15" fill="rgb(244,19,51)" fg:x="68259" fg:w="759"/><text x="78.7023%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_3d (133 samples, 0.15%)</title><rect x="79.3247%" y="597" width="0.1529%" height="15" fill="rgb(224,6,22)" fg:x="69018" fg:w="133"/><text x="79.5747%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_bits (51 samples, 0.06%)</title><rect x="79.4775%" y="597" width="0.0586%" height="15" fill="rgb(224,145,5)" fg:x="69151" fg:w="51"/><text x="79.7275%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (32 samples, 0.04%)</title><rect x="79.5407%" y="597" width="0.0368%" height="15" fill="rgb(234,130,49)" fg:x="69206" fg:w="32"/><text x="79.7907%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_small (41 samples, 0.05%)</title><rect x="79.5856%" y="597" width="0.0471%" height="15" fill="rgb(254,6,2)" fg:x="69245" fg:w="41"/><text x="79.8356%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (32 samples, 0.04%)</title><rect x="79.5959%" y="581" width="0.0368%" height="15" fill="rgb(208,96,46)" fg:x="69254" fg:w="32"/><text x="79.8459%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (31 samples, 0.04%)</title><rect x="79.5970%" y="565" width="0.0356%" height="15" fill="rgb(239,3,39)" fg:x="69255" fg:w="31"/><text x="79.8470%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (15 samples, 0.02%)</title><rect x="79.6407%" y="597" width="0.0172%" height="15" fill="rgb(233,210,1)" fg:x="69293" fg:w="15"/><text x="79.8907%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (15 samples, 0.02%)</title><rect x="79.6407%" y="581" width="0.0172%" height="15" fill="rgb(244,137,37)" fg:x="69293" fg:w="15"/><text x="79.8907%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (15 samples, 0.02%)</title><rect x="79.6407%" y="565" width="0.0172%" height="15" fill="rgb(240,136,2)" fg:x="69293" fg:w="15"/><text x="79.8907%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::verifier::verifier (5,336 samples, 6.13%)</title><rect x="73.5274%" y="613" width="6.1328%" height="15" fill="rgb(239,18,37)" fg:x="63974" fg:w="5336"/><text x="73.7774%" y="623.50">cpu_benc..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.02%)</title><rect x="79.6603%" y="613" width="0.0172%" height="15" fill="rgb(218,185,22)" fg:x="69310" fg:w="15"/><text x="79.9103%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (48 samples, 0.06%)</title><rect x="79.6798%" y="613" width="0.0552%" height="15" fill="rgb(225,218,4)" fg:x="69327" fg:w="48"/><text x="79.9298%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_small (42 samples, 0.05%)</title><rect x="79.7350%" y="613" width="0.0483%" height="15" fill="rgb(230,182,32)" fg:x="69375" fg:w="42"/><text x="79.9850%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (29 samples, 0.03%)</title><rect x="79.7499%" y="597" width="0.0333%" height="15" fill="rgb(242,56,43)" fg:x="69388" fg:w="29"/><text x="79.9999%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`madvise (29 samples, 0.03%)</title><rect x="79.7499%" y="581" width="0.0333%" height="15" fill="rgb(233,99,24)" fg:x="69388" fg:w="29"/><text x="79.9999%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (11 samples, 0.01%)</title><rect x="79.7832%" y="613" width="0.0126%" height="15" fill="rgb(234,209,42)" fg:x="69417" fg:w="11"/><text x="80.0332%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (11 samples, 0.01%)</title><rect x="79.7832%" y="597" width="0.0126%" height="15" fill="rgb(227,7,12)" fg:x="69417" fg:w="11"/><text x="80.0332%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::bencher::Bencher&lt;M&gt;::iter (69,279 samples, 79.62%)</title><rect x="0.1747%" y="629" width="79.6246%" height="15" fill="rgb(245,203,43)" fg:x="152" fg:w="69279"/><text x="0.4247%" y="639.50">cpu_bench_v0-42868c868297afde`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69,280 samples, 79.63%)</title><rect x="0.1747%" y="645" width="79.6258%" height="15" fill="rgb(238,205,33)" fg:x="152" fg:w="69280"/><text x="0.4247%" y="655.50">cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.01%)</title><rect x="80.4338%" y="469" width="0.0126%" height="15" fill="rgb(231,56,7)" fg:x="69983" fg:w="11"/><text x="80.6838%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.01%)</title><rect x="80.4349%" y="453" width="0.0115%" height="15" fill="rgb(244,186,29)" fg:x="69984" fg:w="10"/><text x="80.6849%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (10 samples, 0.01%)</title><rect x="80.4349%" y="437" width="0.0115%" height="15" fill="rgb(234,111,31)" fg:x="69984" fg:w="10"/><text x="80.6849%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (9 samples, 0.01%)</title><rect x="80.4361%" y="421" width="0.0103%" height="15" fill="rgb(241,149,10)" fg:x="69985" fg:w="9"/><text x="80.6861%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (19 samples, 0.02%)</title><rect x="80.4269%" y="485" width="0.0218%" height="15" fill="rgb(249,206,44)" fg:x="69977" fg:w="19"/><text x="80.6769%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (34 samples, 0.04%)</title><rect x="80.4200%" y="501" width="0.0391%" height="15" fill="rgb(251,153,30)" fg:x="69971" fg:w="34"/><text x="80.6700%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="80.4487%" y="485" width="0.0103%" height="15" fill="rgb(239,152,38)" fg:x="69996" fg:w="9"/><text x="80.6987%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`realloc (36 samples, 0.04%)</title><rect x="80.4188%" y="517" width="0.0414%" height="15" fill="rgb(249,139,47)" fg:x="69970" fg:w="36"/><text x="80.6688%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (38 samples, 0.04%)</title><rect x="80.4177%" y="549" width="0.0437%" height="15" fill="rgb(244,64,35)" fg:x="69969" fg:w="38"/><text x="80.6677%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (37 samples, 0.04%)</title><rect x="80.4188%" y="533" width="0.0425%" height="15" fill="rgb(216,46,15)" fg:x="69970" fg:w="37"/><text x="80.6688%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (576 samples, 0.66%)</title><rect x="79.8016%" y="581" width="0.6620%" height="15" fill="rgb(250,74,19)" fg:x="69433" fg:w="576"/><text x="80.0516%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::_&lt;impl core::iter::traits::collect::FromIterator&lt;binius_rust::binary_field16::BinaryFieldElement16&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from_iter (576 samples, 0.66%)</title><rect x="79.8016%" y="565" width="0.6620%" height="15" fill="rgb(249,42,33)" fg:x="69433" fg:w="576"/><text x="80.0516%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_lock (54 samples, 0.06%)</title><rect x="80.4671%" y="581" width="0.0621%" height="15" fill="rgb(242,149,17)" fg:x="70012" fg:w="54"/><text x="80.7171%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_unlock (62 samples, 0.07%)</title><rect x="80.5292%" y="581" width="0.0713%" height="15" fill="rgb(244,29,21)" fg:x="70066" fg:w="62"/><text x="80.7792%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.01%)</title><rect x="80.6579%" y="533" width="0.0149%" height="15" fill="rgb(220,130,37)" fg:x="70178" fg:w="13"/><text x="80.9079%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.02%)</title><rect x="80.6751%" y="533" width="0.0172%" height="15" fill="rgb(211,67,2)" fg:x="70193" fg:w="15"/><text x="80.9251%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (61 samples, 0.07%)</title><rect x="80.6924%" y="533" width="0.0701%" height="15" fill="rgb(235,68,52)" fg:x="70208" fg:w="61"/><text x="80.9424%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (121 samples, 0.14%)</title><rect x="80.6360%" y="549" width="0.1391%" height="15" fill="rgb(246,142,3)" fg:x="70159" fg:w="121"/><text x="80.8860%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.01%)</title><rect x="80.7636%" y="533" width="0.0115%" height="15" fill="rgb(241,25,7)" fg:x="70270" fg:w="10"/><text x="81.0136%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (17 samples, 0.02%)</title><rect x="80.7751%" y="549" width="0.0195%" height="15" fill="rgb(242,119,39)" fg:x="70280" fg:w="17"/><text x="81.0251%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.03%)</title><rect x="80.7946%" y="549" width="0.0299%" height="15" fill="rgb(241,98,45)" fg:x="70297" fg:w="26"/><text x="81.0446%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (36 samples, 0.04%)</title><rect x="80.8245%" y="549" width="0.0414%" height="15" fill="rgb(254,28,30)" fg:x="70323" fg:w="36"/><text x="81.0745%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (48 samples, 0.06%)</title><rect x="80.8659%" y="549" width="0.0552%" height="15" fill="rgb(241,142,54)" fg:x="70359" fg:w="48"/><text x="81.1159%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (43 samples, 0.05%)</title><rect x="80.9211%" y="549" width="0.0494%" height="15" fill="rgb(222,85,15)" fg:x="70407" fg:w="43"/><text x="81.1711%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (322 samples, 0.37%)</title><rect x="80.6119%" y="565" width="0.3701%" height="15" fill="rgb(210,85,47)" fg:x="70138" fg:w="322"/><text x="80.8619%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.01%)</title><rect x="80.9705%" y="549" width="0.0115%" height="15" fill="rgb(224,206,25)" fg:x="70450" fg:w="10"/><text x="81.2205%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (14 samples, 0.02%)</title><rect x="80.9820%" y="565" width="0.0161%" height="15" fill="rgb(243,201,19)" fg:x="70460" fg:w="14"/><text x="81.2320%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.01%)</title><rect x="80.9981%" y="565" width="0.0115%" height="15" fill="rgb(236,59,4)" fg:x="70474" fg:w="10"/><text x="81.2481%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.01%)</title><rect x="81.0096%" y="565" width="0.0149%" height="15" fill="rgb(254,179,45)" fg:x="70484" fg:w="13"/><text x="81.2596%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.01%)</title><rect x="81.0326%" y="565" width="0.0126%" height="15" fill="rgb(226,14,10)" fg:x="70504" fg:w="11"/><text x="81.2826%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (392 samples, 0.45%)</title><rect x="80.6004%" y="581" width="0.4505%" height="15" fill="rgb(244,27,41)" fg:x="70128" fg:w="392"/><text x="80.8504%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (505 samples, 0.58%)</title><rect x="81.0509%" y="581" width="0.5804%" height="15" fill="rgb(235,35,32)" fg:x="70520" fg:w="505"/><text x="81.3009%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (541 samples, 0.62%)</title><rect x="81.6314%" y="581" width="0.6218%" height="15" fill="rgb(218,68,31)" fg:x="71025" fg:w="541"/><text x="81.8814%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.01%)</title><rect x="82.2417%" y="565" width="0.0115%" height="15" fill="rgb(207,120,37)" fg:x="71556" fg:w="10"/><text x="82.4917%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.01%)</title><rect x="82.2417%" y="549" width="0.0115%" height="15" fill="rgb(227,98,0)" fg:x="71556" fg:w="10"/><text x="82.4917%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (141 samples, 0.16%)</title><rect x="83.9496%" y="565" width="0.1621%" height="15" fill="rgb(207,7,3)" fg:x="73042" fg:w="141"/><text x="84.1996%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="84.1266%" y="565" width="0.0103%" height="15" fill="rgb(206,98,19)" fg:x="73196" fg:w="9"/><text x="84.3766%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (9 samples, 0.01%)</title><rect x="84.1266%" y="549" width="0.0103%" height="15" fill="rgb(217,5,26)" fg:x="73196" fg:w="9"/><text x="84.3766%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (9 samples, 0.01%)</title><rect x="84.1266%" y="533" width="0.0103%" height="15" fill="rgb(235,190,38)" fg:x="73196" fg:w="9"/><text x="84.3766%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (442 samples, 0.51%)</title><rect x="84.1369%" y="565" width="0.5080%" height="15" fill="rgb(247,86,24)" fg:x="73205" fg:w="442"/><text x="84.3869%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (2,299 samples, 2.64%)</title><rect x="82.2532%" y="581" width="2.6423%" height="15" fill="rgb(205,101,16)" fg:x="71566" fg:w="2299"/><text x="82.5032%" y="591.50">cp..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (218 samples, 0.25%)</title><rect x="84.6449%" y="565" width="0.2506%" height="15" fill="rgb(246,168,33)" fg:x="73647" fg:w="218"/><text x="84.8949%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (32 samples, 0.04%)</title><rect x="84.9185%" y="581" width="0.0368%" height="15" fill="rgb(231,114,1)" fg:x="73885" fg:w="32"/><text x="85.1685%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,485 samples, 5.15%)</title><rect x="79.8016%" y="597" width="5.1548%" height="15" fill="rgb(207,184,53)" fg:x="69433" fg:w="4485"/><text x="80.0516%" y="607.50">cpu_be..</text></g><g><title>cpu_bench_v0-42868c868297afde`sha2::sha256::compress256 (789 samples, 0.91%)</title><rect x="84.9610%" y="581" width="0.9068%" height="15" fill="rgb(224,95,51)" fg:x="73922" fg:w="789"/><text x="85.2110%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::merkle_tree::merkelize (792 samples, 0.91%)</title><rect x="84.9598%" y="597" width="0.9103%" height="15" fill="rgb(212,188,45)" fg:x="73921" fg:w="792"/><text x="85.2098%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,374 samples, 2.73%)</title><rect x="85.9655%" y="549" width="2.7285%" height="15" fill="rgb(223,154,38)" fg:x="74796" fg:w="2374"/><text x="86.2155%" y="559.50">cp..</text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (201 samples, 0.23%)</title><rect x="88.7009%" y="501" width="0.2310%" height="15" fill="rgb(251,22,52)" fg:x="77176" fg:w="201"/><text x="88.9509%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,590 samples, 2.98%)</title><rect x="85.9620%" y="581" width="2.9768%" height="15" fill="rgb(229,209,22)" fg:x="74793" fg:w="2590"/><text x="86.2120%" y="591.50">cpu..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,588 samples, 2.97%)</title><rect x="85.9643%" y="565" width="2.9745%" height="15" fill="rgb(234,138,34)" fg:x="74795" fg:w="2588"/><text x="86.2143%" y="575.50">cpu..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (212 samples, 0.24%)</title><rect x="88.6952%" y="549" width="0.2437%" height="15" fill="rgb(212,95,11)" fg:x="77171" fg:w="212"/><text x="88.9452%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (212 samples, 0.24%)</title><rect x="88.6952%" y="533" width="0.2437%" height="15" fill="rgb(240,179,47)" fg:x="77171" fg:w="212"/><text x="88.9452%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (208 samples, 0.24%)</title><rect x="88.6998%" y="517" width="0.2391%" height="15" fill="rgb(240,163,11)" fg:x="77175" fg:w="208"/><text x="88.9498%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (32 samples, 0.04%)</title><rect x="88.9687%" y="565" width="0.0368%" height="15" fill="rgb(236,37,12)" fg:x="77409" fg:w="32"/><text x="89.2187%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`madvise (31 samples, 0.04%)</title><rect x="88.9699%" y="549" width="0.0356%" height="15" fill="rgb(232,164,16)" fg:x="77410" fg:w="31"/><text x="89.2199%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_small (150 samples, 0.17%)</title><rect x="88.9423%" y="581" width="0.1724%" height="15" fill="rgb(244,205,15)" fg:x="77386" fg:w="150"/><text x="89.1923%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (95 samples, 0.11%)</title><rect x="89.0055%" y="565" width="0.1092%" height="15" fill="rgb(223,117,47)" fg:x="77441" fg:w="95"/><text x="89.2555%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`madvise (93 samples, 0.11%)</title><rect x="89.0078%" y="549" width="0.1069%" height="15" fill="rgb(244,107,35)" fg:x="77443" fg:w="93"/><text x="89.2578%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::computed_tprimes (2,824 samples, 3.25%)</title><rect x="85.8701%" y="597" width="3.2457%" height="15" fill="rgb(205,140,8)" fg:x="74713" fg:w="2824"/><text x="86.1201%" y="607.50">cpu..</text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (10 samples, 0.01%)</title><rect x="89.1572%" y="517" width="0.0115%" height="15" fill="rgb(228,84,46)" fg:x="77573" fg:w="10"/><text x="89.4072%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.01%)</title><rect x="89.2308%" y="501" width="0.0149%" height="15" fill="rgb(254,188,9)" fg:x="77637" fg:w="13"/><text x="89.4808%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.01%)</title><rect x="89.2572%" y="501" width="0.0126%" height="15" fill="rgb(206,112,54)" fg:x="77660" fg:w="11"/><text x="89.5072%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (57 samples, 0.07%)</title><rect x="89.2698%" y="501" width="0.0655%" height="15" fill="rgb(216,84,49)" fg:x="77671" fg:w="57"/><text x="89.5198%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (150 samples, 0.17%)</title><rect x="89.1928%" y="517" width="0.1724%" height="15" fill="rgb(214,194,35)" fg:x="77604" fg:w="150"/><text x="89.4428%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.03%)</title><rect x="89.3365%" y="501" width="0.0287%" height="15" fill="rgb(249,28,3)" fg:x="77729" fg:w="25"/><text x="89.5865%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.01%)</title><rect x="89.3802%" y="501" width="0.0126%" height="15" fill="rgb(222,56,52)" fg:x="77767" fg:w="11"/><text x="89.6302%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (25 samples, 0.03%)</title><rect x="89.3652%" y="517" width="0.0287%" height="15" fill="rgb(245,217,50)" fg:x="77754" fg:w="25"/><text x="89.6152%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (35 samples, 0.04%)</title><rect x="89.3940%" y="517" width="0.0402%" height="15" fill="rgb(213,201,24)" fg:x="77779" fg:w="35"/><text x="89.6440%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (41 samples, 0.05%)</title><rect x="89.4342%" y="517" width="0.0471%" height="15" fill="rgb(248,116,28)" fg:x="77814" fg:w="41"/><text x="89.6842%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (72 samples, 0.08%)</title><rect x="89.4813%" y="517" width="0.0828%" height="15" fill="rgb(219,72,43)" fg:x="77855" fg:w="72"/><text x="89.7313%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (58 samples, 0.07%)</title><rect x="89.5641%" y="517" width="0.0667%" height="15" fill="rgb(209,138,14)" fg:x="77927" fg:w="58"/><text x="89.8141%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (458 samples, 0.53%)</title><rect x="89.1308%" y="533" width="0.5264%" height="15" fill="rgb(222,18,33)" fg:x="77550" fg:w="458"/><text x="89.3808%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.03%)</title><rect x="89.6307%" y="517" width="0.0264%" height="15" fill="rgb(213,199,7)" fg:x="77985" fg:w="23"/><text x="89.8807%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (11 samples, 0.01%)</title><rect x="89.6595%" y="517" width="0.0126%" height="15" fill="rgb(250,110,10)" fg:x="78010" fg:w="11"/><text x="89.9095%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (30 samples, 0.03%)</title><rect x="89.6572%" y="533" width="0.0345%" height="15" fill="rgb(248,123,6)" fg:x="78008" fg:w="30"/><text x="89.9072%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.02%)</title><rect x="89.6916%" y="533" width="0.0195%" height="15" fill="rgb(206,91,31)" fg:x="78038" fg:w="17"/><text x="89.9416%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.02%)</title><rect x="89.7112%" y="533" width="0.0161%" height="15" fill="rgb(211,154,13)" fg:x="78055" fg:w="14"/><text x="89.9612%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.02%)</title><rect x="89.7273%" y="533" width="0.0184%" height="15" fill="rgb(225,148,7)" fg:x="78069" fg:w="16"/><text x="89.9773%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.02%)</title><rect x="89.7457%" y="533" width="0.0218%" height="15" fill="rgb(220,160,43)" fg:x="78085" fg:w="19"/><text x="89.9957%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (577 samples, 0.66%)</title><rect x="89.1193%" y="549" width="0.6632%" height="15" fill="rgb(213,52,39)" fg:x="77540" fg:w="577"/><text x="89.3693%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.01%)</title><rect x="89.7675%" y="533" width="0.0149%" height="15" fill="rgb(243,137,7)" fg:x="78104" fg:w="13"/><text x="90.0175%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (604 samples, 0.69%)</title><rect x="89.1158%" y="565" width="0.6942%" height="15" fill="rgb(230,79,13)" fg:x="77537" fg:w="604"/><text x="89.3658%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (607 samples, 0.70%)</title><rect x="89.1158%" y="581" width="0.6976%" height="15" fill="rgb(247,105,23)" fg:x="77537" fg:w="607"/><text x="89.3658%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (610 samples, 0.70%)</title><rect x="89.1158%" y="597" width="0.7011%" height="15" fill="rgb(223,179,41)" fg:x="77537" fg:w="610"/><text x="89.3658%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::pack_rows (34 samples, 0.04%)</title><rect x="89.8169%" y="597" width="0.0391%" height="15" fill="rgb(218,9,34)" fg:x="78147" fg:w="34"/><text x="90.0669%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (11 samples, 0.01%)</title><rect x="90.3824%" y="517" width="0.0126%" height="15" fill="rgb(222,106,8)" fg:x="78639" fg:w="11"/><text x="90.6324%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (14 samples, 0.02%)</title><rect x="90.3801%" y="581" width="0.0161%" height="15" fill="rgb(211,220,0)" fg:x="78637" fg:w="14"/><text x="90.6301%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="90.3801%" y="565" width="0.0161%" height="15" fill="rgb(229,52,16)" fg:x="78637" fg:w="14"/><text x="90.6301%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (14 samples, 0.02%)</title><rect x="90.3801%" y="549" width="0.0161%" height="15" fill="rgb(212,155,18)" fg:x="78637" fg:w="14"/><text x="90.6301%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (13 samples, 0.01%)</title><rect x="90.3812%" y="533" width="0.0149%" height="15" fill="rgb(242,21,14)" fg:x="78638" fg:w="13"/><text x="90.6312%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose (480 samples, 0.55%)</title><rect x="89.8560%" y="597" width="0.5517%" height="15" fill="rgb(222,19,48)" fg:x="78181" fg:w="480"/><text x="90.1060%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="90.3973%" y="581" width="0.0103%" height="15" fill="rgb(232,45,27)" fg:x="78652" fg:w="9"/><text x="90.6473%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.01%)</title><rect x="90.8145%" y="581" width="0.0103%" height="15" fill="rgb(249,103,42)" fg:x="79015" fg:w="9"/><text x="91.0645%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_bits (364 samples, 0.42%)</title><rect x="90.4077%" y="597" width="0.4184%" height="15" fill="rgb(246,81,33)" fg:x="78661" fg:w="364"/><text x="90.6577%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_small (25 samples, 0.03%)</title><rect x="90.8364%" y="597" width="0.0287%" height="15" fill="rgb(252,33,42)" fg:x="79034" fg:w="25"/><text x="91.0864%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (17 samples, 0.02%)</title><rect x="90.8456%" y="581" width="0.0195%" height="15" fill="rgb(209,212,41)" fg:x="79042" fg:w="17"/><text x="91.0956%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (17 samples, 0.02%)</title><rect x="90.8456%" y="565" width="0.0195%" height="15" fill="rgb(207,154,6)" fg:x="79042" fg:w="17"/><text x="91.0956%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::prover::prover (9,629 samples, 11.07%)</title><rect x="79.8016%" y="613" width="11.0669%" height="15" fill="rgb(223,64,47)" fg:x="69433" fg:w="9629"/><text x="80.0516%" y="623.50">cpu_bench_v0-428..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="90.8686%" y="581" width="0.0172%" height="15" fill="rgb(211,161,38)" fg:x="79062" fg:w="15"/><text x="91.1186%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (27 samples, 0.03%)</title><rect x="90.9502%" y="533" width="0.0310%" height="15" fill="rgb(219,138,40)" fg:x="79133" fg:w="27"/><text x="91.2002%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (56 samples, 0.06%)</title><rect x="90.9237%" y="549" width="0.0644%" height="15" fill="rgb(241,228,46)" fg:x="79110" fg:w="56"/><text x="91.1737%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.01%)</title><rect x="90.9950%" y="549" width="0.0138%" height="15" fill="rgb(223,209,38)" fg:x="79172" fg:w="12"/><text x="91.2450%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.01%)</title><rect x="91.0088%" y="549" width="0.0149%" height="15" fill="rgb(236,164,45)" fg:x="79184" fg:w="13"/><text x="91.2588%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.02%)</title><rect x="91.0237%" y="549" width="0.0184%" height="15" fill="rgb(231,15,5)" fg:x="79197" fg:w="16"/><text x="91.2737%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.02%)</title><rect x="91.0421%" y="549" width="0.0218%" height="15" fill="rgb(252,35,15)" fg:x="79213" fg:w="19"/><text x="91.2921%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (139 samples, 0.16%)</title><rect x="90.9122%" y="565" width="0.1598%" height="15" fill="rgb(248,181,18)" fg:x="79100" fg:w="139"/><text x="91.1622%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (10 samples, 0.01%)</title><rect x="91.0720%" y="565" width="0.0115%" height="15" fill="rgb(233,39,42)" fg:x="79239" fg:w="10"/><text x="91.3220%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.01%)</title><rect x="91.0938%" y="565" width="0.0126%" height="15" fill="rgb(238,110,33)" fg:x="79258" fg:w="11"/><text x="91.3438%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.01%)</title><rect x="91.1065%" y="565" width="0.0103%" height="15" fill="rgb(233,195,10)" fg:x="79269" fg:w="9"/><text x="91.3565%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (191 samples, 0.22%)</title><rect x="90.9007%" y="581" width="0.2195%" height="15" fill="rgb(254,105,3)" fg:x="79090" fg:w="191"/><text x="91.1507%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (10 samples, 0.01%)</title><rect x="91.1203%" y="581" width="0.0115%" height="15" fill="rgb(221,225,9)" fg:x="79281" fg:w="10"/><text x="91.3703%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (16 samples, 0.02%)</title><rect x="91.1317%" y="581" width="0.0184%" height="15" fill="rgb(224,227,45)" fg:x="79291" fg:w="16"/><text x="91.3817%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (17 samples, 0.02%)</title><rect x="91.1984%" y="565" width="0.0195%" height="15" fill="rgb(229,198,43)" fg:x="79349" fg:w="17"/><text x="91.4484%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (68 samples, 0.08%)</title><rect x="91.1501%" y="581" width="0.0782%" height="15" fill="rgb(206,209,35)" fg:x="79307" fg:w="68"/><text x="91.4001%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (9 samples, 0.01%)</title><rect x="91.2179%" y="565" width="0.0103%" height="15" fill="rgb(245,195,53)" fg:x="79366" fg:w="9"/><text x="91.4679%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (327 samples, 0.38%)</title><rect x="90.8686%" y="597" width="0.3758%" height="15" fill="rgb(240,92,26)" fg:x="79062" fg:w="327"/><text x="91.1186%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="91.2973%" y="501" width="0.0126%" height="15" fill="rgb(207,40,23)" fg:x="79435" fg:w="11"/><text x="91.5473%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (41 samples, 0.05%)</title><rect x="91.3225%" y="501" width="0.0471%" height="15" fill="rgb(223,111,35)" fg:x="79457" fg:w="41"/><text x="91.5725%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (87 samples, 0.10%)</title><rect x="91.2881%" y="517" width="0.1000%" height="15" fill="rgb(229,147,28)" fg:x="79427" fg:w="87"/><text x="91.5381%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (16 samples, 0.02%)</title><rect x="91.3697%" y="501" width="0.0184%" height="15" fill="rgb(211,29,28)" fg:x="79498" fg:w="16"/><text x="91.6197%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (10 samples, 0.01%)</title><rect x="91.3880%" y="517" width="0.0115%" height="15" fill="rgb(228,72,33)" fg:x="79514" fg:w="10"/><text x="91.6380%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.02%)</title><rect x="91.3995%" y="517" width="0.0184%" height="15" fill="rgb(205,214,31)" fg:x="79524" fg:w="16"/><text x="91.6495%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (21 samples, 0.02%)</title><rect x="91.4179%" y="517" width="0.0241%" height="15" fill="rgb(224,111,15)" fg:x="79540" fg:w="21"/><text x="91.6679%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.04%)</title><rect x="91.4421%" y="517" width="0.0425%" height="15" fill="rgb(253,21,26)" fg:x="79561" fg:w="37"/><text x="91.6921%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.03%)</title><rect x="91.4846%" y="517" width="0.0264%" height="15" fill="rgb(245,139,43)" fg:x="79598" fg:w="23"/><text x="91.7346%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (216 samples, 0.25%)</title><rect x="91.2731%" y="533" width="0.2483%" height="15" fill="rgb(252,170,7)" fg:x="79414" fg:w="216"/><text x="91.5231%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="91.5110%" y="517" width="0.0103%" height="15" fill="rgb(231,118,14)" fg:x="79621" fg:w="9"/><text x="91.7610%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (11 samples, 0.01%)</title><rect x="91.5214%" y="533" width="0.0126%" height="15" fill="rgb(238,83,0)" fg:x="79630" fg:w="11"/><text x="91.7714%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="91.5421%" y="533" width="0.0103%" height="15" fill="rgb(221,39,39)" fg:x="79648" fg:w="9"/><text x="91.7921%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.01%)</title><rect x="91.5524%" y="533" width="0.0149%" height="15" fill="rgb(222,119,46)" fg:x="79657" fg:w="13"/><text x="91.8024%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.01%)</title><rect x="91.5673%" y="533" width="0.0103%" height="15" fill="rgb(222,165,49)" fg:x="79670" fg:w="9"/><text x="91.8173%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (280 samples, 0.32%)</title><rect x="91.2605%" y="549" width="0.3218%" height="15" fill="rgb(219,113,52)" fg:x="79403" fg:w="280"/><text x="91.5105%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (303 samples, 0.35%)</title><rect x="91.2605%" y="565" width="0.3482%" height="15" fill="rgb(214,7,15)" fg:x="79403" fg:w="303"/><text x="91.5105%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (304 samples, 0.35%)</title><rect x="91.2605%" y="581" width="0.3494%" height="15" fill="rgb(235,32,4)" fg:x="79403" fg:w="304"/><text x="91.5105%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (306 samples, 0.35%)</title><rect x="91.2605%" y="597" width="0.3517%" height="15" fill="rgb(238,90,54)" fg:x="79403" fg:w="306"/><text x="91.5105%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.01%)</title><rect x="91.6340%" y="565" width="0.0149%" height="15" fill="rgb(213,208,19)" fg:x="79728" fg:w="13"/><text x="91.8840%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="91.6317%" y="581" width="0.0218%" height="15" fill="rgb(233,156,4)" fg:x="79726" fg:w="19"/><text x="91.8817%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="91.6639%" y="533" width="0.0103%" height="15" fill="rgb(207,194,5)" fg:x="79754" fg:w="9"/><text x="91.9139%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.02%)</title><rect x="91.6880%" y="533" width="0.0195%" height="15" fill="rgb(206,111,30)" fg:x="79775" fg:w="17"/><text x="91.9380%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 0.06%)</title><rect x="91.6535%" y="581" width="0.0644%" height="15" fill="rgb(243,70,54)" fg:x="79745" fg:w="56"/><text x="91.9035%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 0.06%)</title><rect x="91.6535%" y="565" width="0.0644%" height="15" fill="rgb(242,28,8)" fg:x="79745" fg:w="56"/><text x="91.9035%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 0.06%)</title><rect x="91.6535%" y="549" width="0.0644%" height="15" fill="rgb(219,106,18)" fg:x="79745" fg:w="56"/><text x="91.9035%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.02%)</title><rect x="91.7237%" y="581" width="0.0195%" height="15" fill="rgb(244,222,10)" fg:x="79806" fg:w="17"/><text x="91.9737%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::multisubset (116 samples, 0.13%)</title><rect x="91.6122%" y="597" width="0.1333%" height="15" fill="rgb(236,179,52)" fg:x="79709" fg:w="116"/><text x="91.8622%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_3d (16 samples, 0.02%)</title><rect x="91.7455%" y="597" width="0.0184%" height="15" fill="rgb(213,23,39)" fg:x="79825" fg:w="16"/><text x="91.9955%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::verifier::verifier (803 samples, 0.92%)</title><rect x="90.8686%" y="613" width="0.9229%" height="15" fill="rgb(238,48,10)" fg:x="79062" fg:w="803"/><text x="91.1186%" y="623.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::bencher::Bencher&lt;M&gt;::iter (10,446 samples, 12.01%)</title><rect x="79.8005%" y="629" width="12.0059%" height="15" fill="rgb(251,196,23)" fg:x="69432" fg:w="10446"/><text x="80.0505%" y="639.50">cpu_bench_v0-42868..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (10,447 samples, 12.01%)</title><rect x="79.8005%" y="645" width="12.0071%" height="15" fill="rgb(250,152,24)" fg:x="69432" fg:w="10447"/><text x="80.0505%" y="655.50">cpu_bench_v0-42868..</text></g><g><title>dyld`start (79,880 samples, 91.81%)</title><rect x="0.0000%" y="789" width="91.8087%" height="15" fill="rgb(209,150,17)" fg:x="0" fg:w="79880"/><text x="0.2500%" y="799.50">dyld`start</text></g><g><title>cpu_bench_v0-42868c868297afde`main (79,880 samples, 91.81%)</title><rect x="0.0000%" y="773" width="91.8087%" height="15" fill="rgb(234,202,34)" fg:x="0" fg:w="79880"/><text x="0.2500%" y="783.50">cpu_bench_v0-42868c868297afde`main</text></g><g><title>cpu_bench_v0-42868c868297afde`std::rt::lang_start_internal (79,880 samples, 91.81%)</title><rect x="0.0000%" y="757" width="91.8087%" height="15" fill="rgb(253,148,53)" fg:x="0" fg:w="79880"/><text x="0.2500%" y="767.50">cpu_bench_v0-42868c868297afde`std::rt::lang_start_internal</text></g><g><title>cpu_bench_v0-42868c868297afde`std::rt::lang_start::_{{closure}} (79,880 samples, 91.81%)</title><rect x="0.0000%" y="741" width="91.8087%" height="15" fill="rgb(218,129,16)" fg:x="0" fg:w="79880"/><text x="0.2500%" y="751.50">cpu_bench_v0-42868c868297afde`std::rt::lang_start::_{{closure}}</text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys_common::backtrace::__rust_begin_short_backtrace (79,880 samples, 91.81%)</title><rect x="0.0000%" y="725" width="91.8087%" height="15" fill="rgb(216,85,19)" fg:x="0" fg:w="79880"/><text x="0.2500%" y="735.50">cpu_bench_v0-42868c868297afde`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>cpu_bench_v0-42868c868297afde`cpu_bench_v0::main (79,880 samples, 91.81%)</title><rect x="0.0000%" y="709" width="91.8087%" height="15" fill="rgb(235,228,7)" fg:x="0" fg:w="79880"/><text x="0.2500%" y="719.50">cpu_bench_v0-42868c868297afde`cpu_bench_v0::main</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (79,755 samples, 91.67%)</title><rect x="0.1437%" y="693" width="91.6650%" height="15" fill="rgb(245,175,0)" fg:x="125" fg:w="79755"/><text x="0.3937%" y="703.50">cpu_bench_v0-42868c868297afde`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::common (79,755 samples, 91.67%)</title><rect x="0.1437%" y="677" width="91.6650%" height="15" fill="rgb(208,168,36)" fg:x="125" fg:w="79755"/><text x="0.3937%" y="687.50">cpu_bench_v0-42868c868297afde`criterion::analysis::common</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::routine::Routine::sample (79,728 samples, 91.63%)</title><rect x="0.1747%" y="661" width="91.6340%" height="15" fill="rgb(246,171,24)" fg:x="152" fg:w="79728"/><text x="0.4247%" y="671.50">cpu_bench_v0-42868c868297afde`criterion::routine::Routine::sample</text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (15 samples, 0.02%)</title><rect x="91.8489%" y="533" width="0.0172%" height="15" fill="rgb(215,142,24)" fg:x="79915" fg:w="15"/><text x="92.0989%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (186 samples, 0.21%)</title><rect x="91.9432%" y="501" width="0.2138%" height="15" fill="rgb(250,187,7)" fg:x="79997" fg:w="186"/><text x="92.1932%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (19 samples, 0.02%)</title><rect x="92.7627%" y="437" width="0.0218%" height="15" fill="rgb(228,66,33)" fg:x="80710" fg:w="19"/><text x="93.0127%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (11 samples, 0.01%)</title><rect x="92.7718%" y="421" width="0.0126%" height="15" fill="rgb(234,215,21)" fg:x="80718" fg:w="11"/><text x="93.0218%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (23 samples, 0.03%)</title><rect x="92.7604%" y="453" width="0.0264%" height="15" fill="rgb(222,191,20)" fg:x="80708" fg:w="23"/><text x="93.0104%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 0.04%)</title><rect x="92.7604%" y="485" width="0.0368%" height="15" fill="rgb(245,79,54)" fg:x="80708" fg:w="32"/><text x="93.0104%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (32 samples, 0.04%)</title><rect x="92.7604%" y="469" width="0.0368%" height="15" fill="rgb(240,10,37)" fg:x="80708" fg:w="32"/><text x="93.0104%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (336 samples, 0.39%)</title><rect x="92.8328%" y="437" width="0.3862%" height="15" fill="rgb(214,192,32)" fg:x="80771" fg:w="336"/><text x="93.0828%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (194 samples, 0.22%)</title><rect x="92.9960%" y="421" width="0.2230%" height="15" fill="rgb(209,36,54)" fg:x="80913" fg:w="194"/><text x="93.2460%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (45 samples, 0.05%)</title><rect x="93.1672%" y="405" width="0.0517%" height="15" fill="rgb(220,10,11)" fg:x="81062" fg:w="45"/><text x="93.4172%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="93.2281%" y="437" width="0.0161%" height="15" fill="rgb(221,106,17)" fg:x="81115" fg:w="14"/><text x="93.4781%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.02%)</title><rect x="93.2281%" y="421" width="0.0161%" height="15" fill="rgb(251,142,44)" fg:x="81115" fg:w="14"/><text x="93.4781%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.01%)</title><rect x="93.2339%" y="405" width="0.0103%" height="15" fill="rgb(238,13,15)" fg:x="81120" fg:w="9"/><text x="93.4839%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (383 samples, 0.44%)</title><rect x="92.8075%" y="453" width="0.4402%" height="15" fill="rgb(208,107,27)" fg:x="80749" fg:w="383"/><text x="93.0575%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13 samples, 0.01%)</title><rect x="93.2477%" y="453" width="0.0149%" height="15" fill="rgb(205,136,37)" fg:x="81132" fg:w="13"/><text x="93.4977%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (30 samples, 0.03%)</title><rect x="93.2626%" y="453" width="0.0345%" height="15" fill="rgb(250,205,27)" fg:x="81145" fg:w="30"/><text x="93.5126%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (443 samples, 0.51%)</title><rect x="92.7983%" y="469" width="0.5092%" height="15" fill="rgb(210,80,43)" fg:x="80741" fg:w="443"/><text x="93.0483%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (22 samples, 0.03%)</title><rect x="93.3500%" y="453" width="0.0253%" height="15" fill="rgb(247,160,36)" fg:x="81221" fg:w="22"/><text x="93.6000%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (146 samples, 0.17%)</title><rect x="93.3074%" y="469" width="0.1678%" height="15" fill="rgb(234,13,49)" fg:x="81184" fg:w="146"/><text x="93.5574%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (87 samples, 0.10%)</title><rect x="93.3752%" y="453" width="0.1000%" height="15" fill="rgb(234,122,0)" fg:x="81243" fg:w="87"/><text x="93.6252%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (593 samples, 0.68%)</title><rect x="92.7971%" y="485" width="0.6816%" height="15" fill="rgb(207,146,38)" fg:x="80740" fg:w="593"/><text x="93.0471%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (3,013 samples, 3.46%)</title><rect x="92.1570%" y="501" width="3.4629%" height="15" fill="rgb(207,177,25)" fg:x="80183" fg:w="3013"/><text x="92.4070%" y="511.50">cpu..</text></g><g><title>libsystem_m.dylib`exp (1,863 samples, 2.14%)</title><rect x="93.4787%" y="485" width="2.1412%" height="15" fill="rgb(211,178,42)" fg:x="81333" fg:w="1863"/><text x="93.7287%" y="495.50">l..</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (26 samples, 0.03%)</title><rect x="95.6199%" y="437" width="0.0299%" height="15" fill="rgb(230,69,54)" fg:x="83196" fg:w="26"/><text x="95.8699%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (24 samples, 0.03%)</title><rect x="95.6222%" y="421" width="0.0276%" height="15" fill="rgb(214,135,41)" fg:x="83198" fg:w="24"/><text x="95.8722%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (9 samples, 0.01%)</title><rect x="95.6394%" y="405" width="0.0103%" height="15" fill="rgb(237,67,25)" fg:x="83213" fg:w="9"/><text x="95.8894%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (31 samples, 0.04%)</title><rect x="95.6199%" y="501" width="0.0356%" height="15" fill="rgb(222,189,50)" fg:x="83196" fg:w="31"/><text x="95.8699%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.04%)</title><rect x="95.6199%" y="485" width="0.0356%" height="15" fill="rgb(245,148,34)" fg:x="83196" fg:w="31"/><text x="95.8699%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.04%)</title><rect x="95.6199%" y="469" width="0.0356%" height="15" fill="rgb(222,29,6)" fg:x="83196" fg:w="31"/><text x="95.8699%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (31 samples, 0.04%)</title><rect x="95.6199%" y="453" width="0.0356%" height="15" fill="rgb(221,189,43)" fg:x="83196" fg:w="31"/><text x="95.8699%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="95.6601%" y="309" width="0.0115%" height="15" fill="rgb(207,36,27)" fg:x="83231" fg:w="10"/><text x="95.9101%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (17 samples, 0.02%)</title><rect x="95.6739%" y="53" width="0.0195%" height="15" fill="rgb(217,90,24)" fg:x="83243" fg:w="17"/><text x="95.9239%" y="63.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (14 samples, 0.02%)</title><rect x="95.6774%" y="37" width="0.0161%" height="15" fill="rgb(224,66,35)" fg:x="83246" fg:w="14"/><text x="95.9274%" y="47.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (21 samples, 0.02%)</title><rect x="95.6716%" y="69" width="0.0241%" height="15" fill="rgb(221,13,50)" fg:x="83241" fg:w="21"/><text x="95.9216%" y="79.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (34 samples, 0.04%)</title><rect x="95.6590%" y="325" width="0.0391%" height="15" fill="rgb(236,68,49)" fg:x="83230" fg:w="34"/><text x="95.9090%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (23 samples, 0.03%)</title><rect x="95.6716%" y="309" width="0.0264%" height="15" fill="rgb(229,146,28)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (23 samples, 0.03%)</title><rect x="95.6716%" y="293" width="0.0264%" height="15" fill="rgb(225,31,38)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="95.6716%" y="277" width="0.0264%" height="15" fill="rgb(250,208,3)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="95.6716%" y="261" width="0.0264%" height="15" fill="rgb(246,54,23)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="95.6716%" y="245" width="0.0264%" height="15" fill="rgb(243,76,11)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="95.6716%" y="229" width="0.0264%" height="15" fill="rgb(245,21,50)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="95.6716%" y="213" width="0.0264%" height="15" fill="rgb(228,9,43)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="95.6716%" y="197" width="0.0264%" height="15" fill="rgb(208,100,47)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="95.6716%" y="181" width="0.0264%" height="15" fill="rgb(232,26,8)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="95.6716%" y="165" width="0.0264%" height="15" fill="rgb(216,166,38)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="95.6716%" y="149" width="0.0264%" height="15" fill="rgb(251,202,51)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="95.6716%" y="133" width="0.0264%" height="15" fill="rgb(254,216,34)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="143.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="95.6716%" y="117" width="0.0264%" height="15" fill="rgb(251,32,27)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="127.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (23 samples, 0.03%)</title><rect x="95.6716%" y="101" width="0.0264%" height="15" fill="rgb(208,127,28)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="111.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.03%)</title><rect x="95.6716%" y="85" width="0.0264%" height="15" fill="rgb(224,137,22)" fg:x="83241" fg:w="23"/><text x="95.9216%" y="95.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 0.05%)</title><rect x="95.6567%" y="341" width="0.0471%" height="15" fill="rgb(254,70,32)" fg:x="83228" fg:w="41"/><text x="95.9067%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.05%)</title><rect x="95.6567%" y="373" width="0.0506%" height="15" fill="rgb(229,75,37)" fg:x="83228" fg:w="44"/><text x="95.9067%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (44 samples, 0.05%)</title><rect x="95.6567%" y="357" width="0.0506%" height="15" fill="rgb(252,64,23)" fg:x="83228" fg:w="44"/><text x="95.9067%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="95.7084%" y="277" width="0.0103%" height="15" fill="rgb(232,162,48)" fg:x="83273" fg:w="9"/><text x="95.9584%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="95.7084%" y="261" width="0.0103%" height="15" fill="rgb(246,160,12)" fg:x="83273" fg:w="9"/><text x="95.9584%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="95.7084%" y="245" width="0.0103%" height="15" fill="rgb(247,166,0)" fg:x="83273" fg:w="9"/><text x="95.9584%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="95.7084%" y="229" width="0.0103%" height="15" fill="rgb(249,219,21)" fg:x="83273" fg:w="9"/><text x="95.9584%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="95.7084%" y="213" width="0.0103%" height="15" fill="rgb(205,209,3)" fg:x="83273" fg:w="9"/><text x="95.9584%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="95.7084%" y="197" width="0.0103%" height="15" fill="rgb(243,44,1)" fg:x="83273" fg:w="9"/><text x="95.9584%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="95.7084%" y="293" width="0.0115%" height="15" fill="rgb(206,159,16)" fg:x="83273" fg:w="10"/><text x="95.9584%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="95.7084%" y="325" width="0.0138%" height="15" fill="rgb(244,77,30)" fg:x="83273" fg:w="12"/><text x="95.9584%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="95.7084%" y="309" width="0.0138%" height="15" fill="rgb(218,69,12)" fg:x="83273" fg:w="12"/><text x="95.9584%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (58 samples, 0.07%)</title><rect x="95.6567%" y="389" width="0.0667%" height="15" fill="rgb(212,87,7)" fg:x="83228" fg:w="58"/><text x="95.9067%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (14 samples, 0.02%)</title><rect x="95.7072%" y="373" width="0.0161%" height="15" fill="rgb(245,114,25)" fg:x="83272" fg:w="14"/><text x="95.9572%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (14 samples, 0.02%)</title><rect x="95.7072%" y="357" width="0.0161%" height="15" fill="rgb(210,61,42)" fg:x="83272" fg:w="14"/><text x="95.9572%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.01%)</title><rect x="95.7084%" y="341" width="0.0149%" height="15" fill="rgb(211,52,33)" fg:x="83273" fg:w="13"/><text x="95.9584%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (63 samples, 0.07%)</title><rect x="95.6555%" y="405" width="0.0724%" height="15" fill="rgb(234,58,33)" fg:x="83227" fg:w="63"/><text x="95.9055%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (73 samples, 0.08%)</title><rect x="95.6555%" y="421" width="0.0839%" height="15" fill="rgb(220,115,36)" fg:x="83227" fg:w="73"/><text x="95.9055%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.01%)</title><rect x="95.7279%" y="405" width="0.0115%" height="15" fill="rgb(243,153,54)" fg:x="83290" fg:w="10"/><text x="95.9779%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.01%)</title><rect x="95.7279%" y="389" width="0.0115%" height="15" fill="rgb(251,47,18)" fg:x="83290" fg:w="10"/><text x="95.9779%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="95.7279%" y="373" width="0.0115%" height="15" fill="rgb(242,102,42)" fg:x="83290" fg:w="10"/><text x="95.9779%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="95.7279%" y="357" width="0.0115%" height="15" fill="rgb(234,31,38)" fg:x="83290" fg:w="10"/><text x="95.9779%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (75 samples, 0.09%)</title><rect x="95.6555%" y="437" width="0.0862%" height="15" fill="rgb(221,117,51)" fg:x="83227" fg:w="75"/><text x="95.9055%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="95.7417%" y="341" width="0.0103%" height="15" fill="rgb(212,20,18)" fg:x="83302" fg:w="9"/><text x="95.9917%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="95.7417%" y="325" width="0.0103%" height="15" fill="rgb(245,133,36)" fg:x="83302" fg:w="9"/><text x="95.9917%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="95.7417%" y="309" width="0.0103%" height="15" fill="rgb(212,6,19)" fg:x="83302" fg:w="9"/><text x="95.9917%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="95.7417%" y="293" width="0.0103%" height="15" fill="rgb(218,1,36)" fg:x="83302" fg:w="9"/><text x="95.9917%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="95.7417%" y="277" width="0.0103%" height="15" fill="rgb(246,84,54)" fg:x="83302" fg:w="9"/><text x="95.9917%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="95.7417%" y="261" width="0.0103%" height="15" fill="rgb(242,110,6)" fg:x="83302" fg:w="9"/><text x="95.9917%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="95.7417%" y="245" width="0.0103%" height="15" fill="rgb(214,47,5)" fg:x="83302" fg:w="9"/><text x="95.9917%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.01%)</title><rect x="95.7417%" y="229" width="0.0103%" height="15" fill="rgb(218,159,25)" fg:x="83302" fg:w="9"/><text x="95.9917%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (14 samples, 0.02%)</title><rect x="95.7417%" y="389" width="0.0161%" height="15" fill="rgb(215,211,28)" fg:x="83302" fg:w="14"/><text x="95.9917%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="95.7417%" y="373" width="0.0161%" height="15" fill="rgb(238,59,32)" fg:x="83302" fg:w="14"/><text x="95.9917%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (14 samples, 0.02%)</title><rect x="95.7417%" y="357" width="0.0161%" height="15" fill="rgb(226,82,3)" fg:x="83302" fg:w="14"/><text x="95.9917%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (90 samples, 0.10%)</title><rect x="95.6555%" y="453" width="0.1034%" height="15" fill="rgb(240,164,32)" fg:x="83227" fg:w="90"/><text x="95.9055%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (15 samples, 0.02%)</title><rect x="95.7417%" y="437" width="0.0172%" height="15" fill="rgb(232,46,7)" fg:x="83302" fg:w="15"/><text x="95.9917%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (15 samples, 0.02%)</title><rect x="95.7417%" y="421" width="0.0172%" height="15" fill="rgb(229,129,53)" fg:x="83302" fg:w="15"/><text x="95.9917%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="95.7417%" y="405" width="0.0172%" height="15" fill="rgb(234,188,29)" fg:x="83302" fg:w="15"/><text x="95.9917%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (91 samples, 0.10%)</title><rect x="95.6555%" y="501" width="0.1046%" height="15" fill="rgb(246,141,4)" fg:x="83227" fg:w="91"/><text x="95.9055%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (91 samples, 0.10%)</title><rect x="95.6555%" y="485" width="0.1046%" height="15" fill="rgb(229,23,39)" fg:x="83227" fg:w="91"/><text x="95.9055%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (91 samples, 0.10%)</title><rect x="95.6555%" y="469" width="0.1046%" height="15" fill="rgb(206,12,3)" fg:x="83227" fg:w="91"/><text x="95.9055%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (3,481 samples, 4.00%)</title><rect x="91.9432%" y="517" width="4.0008%" height="15" fill="rgb(252,226,20)" fg:x="79997" fg:w="3481"/><text x="92.1932%" y="527.50">cpu_..</text></g><g><title>libsystem_m.dylib`exp (160 samples, 0.18%)</title><rect x="95.7601%" y="501" width="0.1839%" height="15" fill="rgb(216,123,35)" fg:x="83318" fg:w="160"/><text x="96.0101%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (3,706 samples, 4.26%)</title><rect x="91.8662%" y="533" width="4.2594%" height="15" fill="rgb(212,68,40)" fg:x="79930" fg:w="3706"/><text x="92.1162%" y="543.50">cpu_b..</text></g><g><title>libsystem_m.dylib`exp (158 samples, 0.18%)</title><rect x="95.9440%" y="517" width="0.1816%" height="15" fill="rgb(254,125,32)" fg:x="83478" fg:w="158"/><text x="96.1940%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (19 samples, 0.02%)</title><rect x="96.1325%" y="421" width="0.0218%" height="15" fill="rgb(253,97,22)" fg:x="83642" fg:w="19"/><text x="96.3825%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (12 samples, 0.01%)</title><rect x="96.1405%" y="405" width="0.0138%" height="15" fill="rgb(241,101,14)" fg:x="83649" fg:w="12"/><text x="96.3905%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (20 samples, 0.02%)</title><rect x="96.1325%" y="437" width="0.0230%" height="15" fill="rgb(238,103,29)" fg:x="83642" fg:w="20"/><text x="96.3825%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.03%)</title><rect x="96.1325%" y="485" width="0.0276%" height="15" fill="rgb(233,195,47)" fg:x="83642" fg:w="24"/><text x="96.3825%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.03%)</title><rect x="96.1325%" y="469" width="0.0276%" height="15" fill="rgb(246,218,30)" fg:x="83642" fg:w="24"/><text x="96.3825%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (24 samples, 0.03%)</title><rect x="96.1325%" y="453" width="0.0276%" height="15" fill="rgb(219,145,47)" fg:x="83642" fg:w="24"/><text x="96.3825%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (28 samples, 0.03%)</title><rect x="96.1612%" y="405" width="0.0322%" height="15" fill="rgb(243,12,26)" fg:x="83667" fg:w="28"/><text x="96.4112%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (16 samples, 0.02%)</title><rect x="96.1750%" y="389" width="0.0184%" height="15" fill="rgb(214,87,16)" fg:x="83679" fg:w="16"/><text x="96.4250%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (30 samples, 0.03%)</title><rect x="96.1601%" y="421" width="0.0345%" height="15" fill="rgb(208,99,42)" fg:x="83666" fg:w="30"/><text x="96.4101%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (64 samples, 0.07%)</title><rect x="96.1256%" y="533" width="0.0736%" height="15" fill="rgb(253,99,2)" fg:x="83636" fg:w="64"/><text x="96.3756%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (64 samples, 0.07%)</title><rect x="96.1256%" y="517" width="0.0736%" height="15" fill="rgb(220,168,23)" fg:x="83636" fg:w="64"/><text x="96.3756%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (58 samples, 0.07%)</title><rect x="96.1325%" y="501" width="0.0667%" height="15" fill="rgb(242,38,24)" fg:x="83642" fg:w="58"/><text x="96.3825%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (34 samples, 0.04%)</title><rect x="96.1601%" y="485" width="0.0391%" height="15" fill="rgb(225,182,9)" fg:x="83666" fg:w="34"/><text x="96.4101%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.04%)</title><rect x="96.1601%" y="469" width="0.0391%" height="15" fill="rgb(243,178,37)" fg:x="83666" fg:w="34"/><text x="96.4101%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.04%)</title><rect x="96.1601%" y="453" width="0.0391%" height="15" fill="rgb(232,139,19)" fg:x="83666" fg:w="34"/><text x="96.4101%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (34 samples, 0.04%)</title><rect x="96.1601%" y="437" width="0.0391%" height="15" fill="rgb(225,201,24)" fg:x="83666" fg:w="34"/><text x="96.4101%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (33 samples, 0.04%)</title><rect x="96.2141%" y="341" width="0.0379%" height="15" fill="rgb(221,47,46)" fg:x="83713" fg:w="33"/><text x="96.4641%" y="351.50"></text></g><g><title>libsystem_m.dylib`exp (18 samples, 0.02%)</title><rect x="96.2313%" y="325" width="0.0207%" height="15" fill="rgb(249,23,13)" fg:x="83728" fg:w="18"/><text x="96.4813%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (38 samples, 0.04%)</title><rect x="96.2095%" y="357" width="0.0437%" height="15" fill="rgb(219,9,5)" fg:x="83709" fg:w="38"/><text x="96.4595%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.05%)</title><rect x="96.2084%" y="373" width="0.0529%" height="15" fill="rgb(254,171,16)" fg:x="83708" fg:w="46"/><text x="96.4584%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (50 samples, 0.06%)</title><rect x="96.2072%" y="389" width="0.0575%" height="15" fill="rgb(230,171,20)" fg:x="83707" fg:w="50"/><text x="96.4572%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (71 samples, 0.08%)</title><rect x="96.2049%" y="405" width="0.0816%" height="15" fill="rgb(210,71,41)" fg:x="83705" fg:w="71"/><text x="96.4549%" y="415.50"></text></g><g><title>libsystem_m.dylib`exp (19 samples, 0.02%)</title><rect x="96.2647%" y="389" width="0.0218%" height="15" fill="rgb(206,173,20)" fg:x="83757" fg:w="19"/><text x="96.5147%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (75 samples, 0.09%)</title><rect x="96.2049%" y="421" width="0.0862%" height="15" fill="rgb(233,88,34)" fg:x="83705" fg:w="75"/><text x="96.4549%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (79 samples, 0.09%)</title><rect x="96.2026%" y="453" width="0.0908%" height="15" fill="rgb(223,209,46)" fg:x="83703" fg:w="79"/><text x="96.4526%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (79 samples, 0.09%)</title><rect x="96.2026%" y="437" width="0.0908%" height="15" fill="rgb(250,43,18)" fg:x="83703" fg:w="79"/><text x="96.4526%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (85 samples, 0.10%)</title><rect x="96.1992%" y="469" width="0.0977%" height="15" fill="rgb(208,13,10)" fg:x="83700" fg:w="85"/><text x="96.4492%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (12 samples, 0.01%)</title><rect x="96.3106%" y="229" width="0.0138%" height="15" fill="rgb(212,200,36)" fg:x="83797" fg:w="12"/><text x="96.5606%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (14 samples, 0.02%)</title><rect x="96.3106%" y="261" width="0.0161%" height="15" fill="rgb(225,90,30)" fg:x="83797" fg:w="14"/><text x="96.5606%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect x="96.3106%" y="245" width="0.0161%" height="15" fill="rgb(236,182,39)" fg:x="83797" fg:w="14"/><text x="96.5606%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.02%)</title><rect x="96.3049%" y="277" width="0.0241%" height="15" fill="rgb(212,144,35)" fg:x="83792" fg:w="21"/><text x="96.5549%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (25 samples, 0.03%)</title><rect x="96.3014%" y="293" width="0.0287%" height="15" fill="rgb(228,63,44)" fg:x="83789" fg:w="25"/><text x="96.5514%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.03%)</title><rect x="96.3014%" y="309" width="0.0310%" height="15" fill="rgb(228,109,6)" fg:x="83789" fg:w="27"/><text x="96.5514%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (32 samples, 0.04%)</title><rect x="96.3014%" y="325" width="0.0368%" height="15" fill="rgb(238,117,24)" fg:x="83789" fg:w="32"/><text x="96.5514%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (36 samples, 0.04%)</title><rect x="96.2991%" y="357" width="0.0414%" height="15" fill="rgb(242,26,26)" fg:x="83787" fg:w="36"/><text x="96.5491%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (36 samples, 0.04%)</title><rect x="96.2991%" y="341" width="0.0414%" height="15" fill="rgb(221,92,48)" fg:x="83787" fg:w="36"/><text x="96.5491%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.04%)</title><rect x="96.2980%" y="373" width="0.0437%" height="15" fill="rgb(209,209,32)" fg:x="83786" fg:w="38"/><text x="96.5480%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (43 samples, 0.05%)</title><rect x="96.2980%" y="389" width="0.0494%" height="15" fill="rgb(221,70,22)" fg:x="83786" fg:w="43"/><text x="96.5480%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.05%)</title><rect x="96.2980%" y="405" width="0.0506%" height="15" fill="rgb(248,145,5)" fg:x="83786" fg:w="44"/><text x="96.5480%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (45 samples, 0.05%)</title><rect x="96.2980%" y="421" width="0.0517%" height="15" fill="rgb(226,116,26)" fg:x="83786" fg:w="45"/><text x="96.5480%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.06%)</title><rect x="96.2968%" y="437" width="0.0552%" height="15" fill="rgb(244,5,17)" fg:x="83785" fg:w="48"/><text x="96.5468%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (49 samples, 0.06%)</title><rect x="96.2968%" y="453" width="0.0563%" height="15" fill="rgb(252,159,33)" fg:x="83785" fg:w="49"/><text x="96.5468%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (135 samples, 0.16%)</title><rect x="96.1992%" y="485" width="0.1552%" height="15" fill="rgb(206,71,0)" fg:x="83700" fg:w="135"/><text x="96.4492%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (50 samples, 0.06%)</title><rect x="96.2968%" y="469" width="0.0575%" height="15" fill="rgb(233,118,54)" fg:x="83785" fg:w="50"/><text x="96.5468%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (136 samples, 0.16%)</title><rect x="96.1992%" y="517" width="0.1563%" height="15" fill="rgb(234,83,48)" fg:x="83700" fg:w="136"/><text x="96.4492%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (136 samples, 0.16%)</title><rect x="96.1992%" y="501" width="0.1563%" height="15" fill="rgb(228,3,54)" fg:x="83700" fg:w="136"/><text x="96.4492%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (137 samples, 0.16%)</title><rect x="96.1992%" y="533" width="0.1575%" height="15" fill="rgb(226,155,13)" fg:x="83700" fg:w="137"/><text x="96.4492%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (3,938 samples, 4.53%)</title><rect x="91.8489%" y="549" width="4.5261%" height="15" fill="rgb(241,28,37)" fg:x="79915" fg:w="3938"/><text x="92.0989%" y="559.50">cpu_b..</text></g><g><title>libsystem_m.dylib`exp (16 samples, 0.02%)</title><rect x="96.3566%" y="533" width="0.0184%" height="15" fill="rgb(233,93,10)" fg:x="83837" fg:w="16"/><text x="96.6066%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (4,000 samples, 4.60%)</title><rect x="91.8282%" y="565" width="4.5973%" height="15" fill="rgb(225,113,19)" fg:x="79897" fg:w="4000"/><text x="92.0782%" y="575.50">cpu_b..</text></g><g><title>libsystem_m.dylib`exp (44 samples, 0.05%)</title><rect x="96.3750%" y="549" width="0.0506%" height="15" fill="rgb(241,2,18)" fg:x="83853" fg:w="44"/><text x="96.6250%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (14 samples, 0.02%)</title><rect x="96.4348%" y="421" width="0.0161%" height="15" fill="rgb(228,207,21)" fg:x="83905" fg:w="14"/><text x="96.6848%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (10 samples, 0.01%)</title><rect x="96.4394%" y="405" width="0.0115%" height="15" fill="rgb(213,211,35)" fg:x="83909" fg:w="10"/><text x="96.6894%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (16 samples, 0.02%)</title><rect x="96.4336%" y="437" width="0.0184%" height="15" fill="rgb(209,83,10)" fg:x="83904" fg:w="16"/><text x="96.6836%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="96.4336%" y="485" width="0.0218%" height="15" fill="rgb(209,164,1)" fg:x="83904" fg:w="19"/><text x="96.6836%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.02%)</title><rect x="96.4336%" y="469" width="0.0218%" height="15" fill="rgb(213,184,43)" fg:x="83904" fg:w="19"/><text x="96.6836%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (19 samples, 0.02%)</title><rect x="96.4336%" y="453" width="0.0218%" height="15" fill="rgb(231,61,34)" fg:x="83904" fg:w="19"/><text x="96.6836%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (18 samples, 0.02%)</title><rect x="96.4566%" y="405" width="0.0207%" height="15" fill="rgb(235,75,3)" fg:x="83924" fg:w="18"/><text x="96.7066%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (12 samples, 0.01%)</title><rect x="96.4635%" y="389" width="0.0138%" height="15" fill="rgb(220,106,47)" fg:x="83930" fg:w="12"/><text x="96.7135%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (21 samples, 0.02%)</title><rect x="96.4555%" y="421" width="0.0241%" height="15" fill="rgb(210,196,33)" fg:x="83923" fg:w="21"/><text x="96.7055%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (45 samples, 0.05%)</title><rect x="96.4290%" y="517" width="0.0517%" height="15" fill="rgb(229,154,42)" fg:x="83900" fg:w="45"/><text x="96.6790%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (41 samples, 0.05%)</title><rect x="96.4336%" y="501" width="0.0471%" height="15" fill="rgb(228,114,26)" fg:x="83904" fg:w="41"/><text x="96.6836%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (22 samples, 0.03%)</title><rect x="96.4555%" y="485" width="0.0253%" height="15" fill="rgb(208,144,1)" fg:x="83923" fg:w="22"/><text x="96.7055%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="96.4555%" y="469" width="0.0253%" height="15" fill="rgb(239,112,37)" fg:x="83923" fg:w="22"/><text x="96.7055%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.03%)</title><rect x="96.4555%" y="453" width="0.0253%" height="15" fill="rgb(210,96,50)" fg:x="83923" fg:w="22"/><text x="96.7055%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (22 samples, 0.03%)</title><rect x="96.4555%" y="437" width="0.0253%" height="15" fill="rgb(222,178,2)" fg:x="83923" fg:w="22"/><text x="96.7055%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (17 samples, 0.02%)</title><rect x="96.4819%" y="405" width="0.0195%" height="15" fill="rgb(226,74,18)" fg:x="83946" fg:w="17"/><text x="96.7319%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (11 samples, 0.01%)</title><rect x="96.4888%" y="389" width="0.0126%" height="15" fill="rgb(225,67,54)" fg:x="83952" fg:w="11"/><text x="96.7388%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (20 samples, 0.02%)</title><rect x="96.4807%" y="421" width="0.0230%" height="15" fill="rgb(251,92,32)" fg:x="83945" fg:w="20"/><text x="96.7307%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="96.4807%" y="469" width="0.0287%" height="15" fill="rgb(228,149,22)" fg:x="83945" fg:w="25"/><text x="96.7307%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.03%)</title><rect x="96.4807%" y="453" width="0.0287%" height="15" fill="rgb(243,54,13)" fg:x="83945" fg:w="25"/><text x="96.7307%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (25 samples, 0.03%)</title><rect x="96.4807%" y="437" width="0.0287%" height="15" fill="rgb(243,180,28)" fg:x="83945" fg:w="25"/><text x="96.7307%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (18 samples, 0.02%)</title><rect x="96.5106%" y="389" width="0.0207%" height="15" fill="rgb(208,167,24)" fg:x="83971" fg:w="18"/><text x="96.7606%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (11 samples, 0.01%)</title><rect x="96.5187%" y="373" width="0.0126%" height="15" fill="rgb(245,73,45)" fg:x="83978" fg:w="11"/><text x="96.7687%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (20 samples, 0.02%)</title><rect x="96.5095%" y="405" width="0.0230%" height="15" fill="rgb(237,203,48)" fg:x="83970" fg:w="20"/><text x="96.7595%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (25 samples, 0.03%)</title><rect x="96.5095%" y="469" width="0.0287%" height="15" fill="rgb(211,197,16)" fg:x="83970" fg:w="25"/><text x="96.7595%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="96.5095%" y="453" width="0.0287%" height="15" fill="rgb(243,99,51)" fg:x="83970" fg:w="25"/><text x="96.7595%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.03%)</title><rect x="96.5095%" y="437" width="0.0287%" height="15" fill="rgb(215,123,29)" fg:x="83970" fg:w="25"/><text x="96.7595%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (25 samples, 0.03%)</title><rect x="96.5095%" y="421" width="0.0287%" height="15" fill="rgb(239,186,37)" fg:x="83970" fg:w="25"/><text x="96.7595%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (104 samples, 0.12%)</title><rect x="96.4256%" y="565" width="0.1195%" height="15" fill="rgb(252,136,39)" fg:x="83897" fg:w="104"/><text x="96.6756%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (104 samples, 0.12%)</title><rect x="96.4256%" y="549" width="0.1195%" height="15" fill="rgb(223,213,32)" fg:x="83897" fg:w="104"/><text x="96.6756%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (101 samples, 0.12%)</title><rect x="96.4290%" y="533" width="0.1161%" height="15" fill="rgb(233,115,5)" fg:x="83900" fg:w="101"/><text x="96.6790%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (56 samples, 0.06%)</title><rect x="96.4807%" y="517" width="0.0644%" height="15" fill="rgb(207,226,44)" fg:x="83945" fg:w="56"/><text x="96.7307%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (56 samples, 0.06%)</title><rect x="96.4807%" y="501" width="0.0644%" height="15" fill="rgb(208,126,0)" fg:x="83945" fg:w="56"/><text x="96.7307%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (56 samples, 0.06%)</title><rect x="96.4807%" y="485" width="0.0644%" height="15" fill="rgb(244,66,21)" fg:x="83945" fg:w="56"/><text x="96.7307%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (45 samples, 0.05%)</title><rect x="96.5819%" y="309" width="0.0517%" height="15" fill="rgb(222,97,12)" fg:x="84033" fg:w="45"/><text x="96.8319%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (28 samples, 0.03%)</title><rect x="96.6014%" y="293" width="0.0322%" height="15" fill="rgb(219,213,19)" fg:x="84050" fg:w="28"/><text x="96.8514%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (54 samples, 0.06%)</title><rect x="96.5761%" y="325" width="0.0621%" height="15" fill="rgb(252,169,30)" fg:x="84028" fg:w="54"/><text x="96.8261%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 0.07%)</title><rect x="96.5761%" y="341" width="0.0713%" height="15" fill="rgb(206,32,51)" fg:x="84028" fg:w="62"/><text x="96.8261%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (86 samples, 0.10%)</title><rect x="96.5761%" y="357" width="0.0988%" height="15" fill="rgb(250,172,42)" fg:x="84028" fg:w="86"/><text x="96.8261%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (24 samples, 0.03%)</title><rect x="96.6474%" y="341" width="0.0276%" height="15" fill="rgb(209,34,43)" fg:x="84090" fg:w="24"/><text x="96.8974%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (16 samples, 0.02%)</title><rect x="96.6566%" y="325" width="0.0184%" height="15" fill="rgb(223,11,35)" fg:x="84098" fg:w="16"/><text x="96.9066%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (132 samples, 0.15%)</title><rect x="96.5658%" y="373" width="0.1517%" height="15" fill="rgb(251,219,26)" fg:x="84019" fg:w="132"/><text x="96.8158%" y="383.50"></text></g><g><title>libsystem_m.dylib`exp (37 samples, 0.04%)</title><rect x="96.6750%" y="357" width="0.0425%" height="15" fill="rgb(231,119,3)" fg:x="84114" fg:w="37"/><text x="96.9250%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (143 samples, 0.16%)</title><rect x="96.5612%" y="389" width="0.1644%" height="15" fill="rgb(216,97,11)" fg:x="84015" fg:w="143"/><text x="96.8112%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (162 samples, 0.19%)</title><rect x="96.5543%" y="405" width="0.1862%" height="15" fill="rgb(223,59,9)" fg:x="84009" fg:w="162"/><text x="96.8043%" y="415.50"></text></g><g><title>libsystem_m.dylib`exp (13 samples, 0.01%)</title><rect x="96.7256%" y="389" width="0.0149%" height="15" fill="rgb(233,93,31)" fg:x="84158" fg:w="13"/><text x="96.9756%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (167 samples, 0.19%)</title><rect x="96.5532%" y="421" width="0.1919%" height="15" fill="rgb(239,81,33)" fg:x="84008" fg:w="167"/><text x="96.8032%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (188 samples, 0.22%)</title><rect x="96.5486%" y="437" width="0.2161%" height="15" fill="rgb(213,120,34)" fg:x="84004" fg:w="188"/><text x="96.7986%" y="447.50"></text></g><g><title>libsystem_m.dylib`exp (17 samples, 0.02%)</title><rect x="96.7451%" y="421" width="0.0195%" height="15" fill="rgb(243,49,53)" fg:x="84175" fg:w="17"/><text x="96.9951%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (202 samples, 0.23%)</title><rect x="96.5474%" y="453" width="0.2322%" height="15" fill="rgb(247,216,33)" fg:x="84003" fg:w="202"/><text x="96.7974%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (212 samples, 0.24%)</title><rect x="96.5451%" y="469" width="0.2437%" height="15" fill="rgb(226,26,14)" fg:x="84001" fg:w="212"/><text x="96.7951%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (10 samples, 0.01%)</title><rect x="96.7934%" y="229" width="0.0115%" height="15" fill="rgb(215,49,53)" fg:x="84217" fg:w="10"/><text x="97.0434%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (10 samples, 0.01%)</title><rect x="96.7934%" y="213" width="0.0115%" height="15" fill="rgb(245,162,40)" fg:x="84217" fg:w="10"/><text x="97.0434%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="96.7934%" y="245" width="0.0149%" height="15" fill="rgb(229,68,17)" fg:x="84217" fg:w="13"/><text x="97.0434%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="96.7934%" y="293" width="0.0184%" height="15" fill="rgb(213,182,10)" fg:x="84217" fg:w="16"/><text x="97.0434%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="96.7934%" y="277" width="0.0184%" height="15" fill="rgb(245,125,30)" fg:x="84217" fg:w="16"/><text x="97.0434%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (16 samples, 0.02%)</title><rect x="96.7934%" y="261" width="0.0184%" height="15" fill="rgb(232,202,2)" fg:x="84217" fg:w="16"/><text x="97.0434%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.02%)</title><rect x="96.7922%" y="373" width="0.0230%" height="15" fill="rgb(237,140,51)" fg:x="84216" fg:w="20"/><text x="97.0422%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="96.7922%" y="357" width="0.0230%" height="15" fill="rgb(236,157,25)" fg:x="84216" fg:w="20"/><text x="97.0422%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.02%)</title><rect x="96.7922%" y="341" width="0.0230%" height="15" fill="rgb(219,209,0)" fg:x="84216" fg:w="20"/><text x="97.0422%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="96.7922%" y="325" width="0.0230%" height="15" fill="rgb(240,116,54)" fg:x="84216" fg:w="20"/><text x="97.0422%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="96.7934%" y="309" width="0.0218%" height="15" fill="rgb(216,10,36)" fg:x="84217" fg:w="19"/><text x="97.0434%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="96.7922%" y="405" width="0.0287%" height="15" fill="rgb(222,72,44)" fg:x="84216" fg:w="25"/><text x="97.0422%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (25 samples, 0.03%)</title><rect x="96.7922%" y="389" width="0.0287%" height="15" fill="rgb(232,159,9)" fg:x="84216" fg:w="25"/><text x="97.0422%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (246 samples, 0.28%)</title><rect x="96.5451%" y="485" width="0.2827%" height="15" fill="rgb(210,39,32)" fg:x="84001" fg:w="246"/><text x="96.7951%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (31 samples, 0.04%)</title><rect x="96.7922%" y="469" width="0.0356%" height="15" fill="rgb(216,194,45)" fg:x="84216" fg:w="31"/><text x="97.0422%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (31 samples, 0.04%)</title><rect x="96.7922%" y="453" width="0.0356%" height="15" fill="rgb(218,18,35)" fg:x="84216" fg:w="31"/><text x="97.0422%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.04%)</title><rect x="96.7922%" y="437" width="0.0356%" height="15" fill="rgb(207,83,51)" fg:x="84216" fg:w="31"/><text x="97.0422%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (31 samples, 0.04%)</title><rect x="96.7922%" y="421" width="0.0356%" height="15" fill="rgb(225,63,43)" fg:x="84216" fg:w="31"/><text x="97.0422%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (250 samples, 0.29%)</title><rect x="96.5451%" y="501" width="0.2873%" height="15" fill="rgb(207,57,36)" fg:x="84001" fg:w="250"/><text x="96.7951%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (13 samples, 0.01%)</title><rect x="96.8393%" y="245" width="0.0149%" height="15" fill="rgb(216,99,33)" fg:x="84257" fg:w="13"/><text x="97.0893%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (14 samples, 0.02%)</title><rect x="96.8393%" y="261" width="0.0161%" height="15" fill="rgb(225,42,16)" fg:x="84257" fg:w="14"/><text x="97.0893%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (16 samples, 0.02%)</title><rect x="96.8393%" y="293" width="0.0184%" height="15" fill="rgb(220,201,45)" fg:x="84257" fg:w="16"/><text x="97.0893%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.02%)</title><rect x="96.8393%" y="277" width="0.0184%" height="15" fill="rgb(225,33,4)" fg:x="84257" fg:w="16"/><text x="97.0893%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (22 samples, 0.03%)</title><rect x="96.8382%" y="325" width="0.0253%" height="15" fill="rgb(224,33,50)" fg:x="84256" fg:w="22"/><text x="97.0882%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="96.8382%" y="309" width="0.0253%" height="15" fill="rgb(246,198,51)" fg:x="84256" fg:w="22"/><text x="97.0882%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (26 samples, 0.03%)</title><rect x="96.8382%" y="357" width="0.0299%" height="15" fill="rgb(205,22,4)" fg:x="84256" fg:w="26"/><text x="97.0882%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.03%)</title><rect x="96.8382%" y="341" width="0.0299%" height="15" fill="rgb(206,3,8)" fg:x="84256" fg:w="26"/><text x="97.0882%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.04%)</title><rect x="96.8382%" y="373" width="0.0368%" height="15" fill="rgb(251,23,15)" fg:x="84256" fg:w="32"/><text x="97.0882%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (40 samples, 0.05%)</title><rect x="96.8370%" y="389" width="0.0460%" height="15" fill="rgb(252,88,28)" fg:x="84255" fg:w="40"/><text x="97.0870%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (51 samples, 0.06%)</title><rect x="96.8359%" y="405" width="0.0586%" height="15" fill="rgb(212,127,14)" fg:x="84254" fg:w="51"/><text x="97.0859%" y="415.50"></text></g><g><title>libsystem_m.dylib`exp (10 samples, 0.01%)</title><rect x="96.8830%" y="389" width="0.0115%" height="15" fill="rgb(247,145,37)" fg:x="84295" fg:w="10"/><text x="97.1330%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="96.8957%" y="245" width="0.0103%" height="15" fill="rgb(209,117,53)" fg:x="84306" fg:w="9"/><text x="97.1457%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="96.8945%" y="261" width="0.0138%" height="15" fill="rgb(212,90,42)" fg:x="84305" fg:w="12"/><text x="97.1445%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="96.8945%" y="277" width="0.0161%" height="15" fill="rgb(218,164,37)" fg:x="84305" fg:w="14"/><text x="97.1445%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.02%)</title><rect x="96.8945%" y="293" width="0.0218%" height="15" fill="rgb(246,65,34)" fg:x="84305" fg:w="19"/><text x="97.1445%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="96.8945%" y="325" width="0.0230%" height="15" fill="rgb(231,100,33)" fg:x="84305" fg:w="20"/><text x="97.1445%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.02%)</title><rect x="96.8945%" y="309" width="0.0230%" height="15" fill="rgb(228,126,14)" fg:x="84305" fg:w="20"/><text x="97.1445%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.03%)</title><rect x="96.8945%" y="341" width="0.0276%" height="15" fill="rgb(215,173,21)" fg:x="84305" fg:w="24"/><text x="97.1445%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (86 samples, 0.10%)</title><rect x="96.8324%" y="437" width="0.0988%" height="15" fill="rgb(210,6,40)" fg:x="84251" fg:w="86"/><text x="97.0824%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (84 samples, 0.10%)</title><rect x="96.8347%" y="421" width="0.0965%" height="15" fill="rgb(212,48,18)" fg:x="84253" fg:w="84"/><text x="97.0847%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (32 samples, 0.04%)</title><rect x="96.8945%" y="405" width="0.0368%" height="15" fill="rgb(230,214,11)" fg:x="84305" fg:w="32"/><text x="97.1445%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (32 samples, 0.04%)</title><rect x="96.8945%" y="389" width="0.0368%" height="15" fill="rgb(254,105,39)" fg:x="84305" fg:w="32"/><text x="97.1445%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.04%)</title><rect x="96.8945%" y="373" width="0.0368%" height="15" fill="rgb(245,158,5)" fg:x="84305" fg:w="32"/><text x="97.1445%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (32 samples, 0.04%)</title><rect x="96.8945%" y="357" width="0.0368%" height="15" fill="rgb(249,208,11)" fg:x="84305" fg:w="32"/><text x="97.1445%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="96.9324%" y="373" width="0.0138%" height="15" fill="rgb(210,39,28)" fg:x="84338" fg:w="12"/><text x="97.1824%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="96.9347%" y="357" width="0.0115%" height="15" fill="rgb(211,56,53)" fg:x="84340" fg:w="10"/><text x="97.1847%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (17 samples, 0.02%)</title><rect x="96.9313%" y="421" width="0.0195%" height="15" fill="rgb(226,201,30)" fg:x="84337" fg:w="17"/><text x="97.1813%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="96.9313%" y="405" width="0.0195%" height="15" fill="rgb(239,101,34)" fg:x="84337" fg:w="17"/><text x="97.1813%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="96.9324%" y="389" width="0.0184%" height="15" fill="rgb(226,209,5)" fg:x="84338" fg:w="16"/><text x="97.1824%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (104 samples, 0.12%)</title><rect x="96.8324%" y="453" width="0.1195%" height="15" fill="rgb(250,105,47)" fg:x="84251" fg:w="104"/><text x="97.0824%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.02%)</title><rect x="96.9313%" y="437" width="0.0207%" height="15" fill="rgb(230,72,3)" fg:x="84337" fg:w="18"/><text x="97.1813%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (355 samples, 0.41%)</title><rect x="96.5451%" y="517" width="0.4080%" height="15" fill="rgb(232,218,39)" fg:x="84001" fg:w="355"/><text x="96.7951%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (105 samples, 0.12%)</title><rect x="96.8324%" y="501" width="0.1207%" height="15" fill="rgb(248,166,6)" fg:x="84251" fg:w="105"/><text x="97.0824%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (105 samples, 0.12%)</title><rect x="96.8324%" y="485" width="0.1207%" height="15" fill="rgb(247,89,20)" fg:x="84251" fg:w="105"/><text x="97.0824%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (105 samples, 0.12%)</title><rect x="96.8324%" y="469" width="0.1207%" height="15" fill="rgb(248,130,54)" fg:x="84251" fg:w="105"/><text x="97.0824%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (360 samples, 0.41%)</title><rect x="96.5451%" y="565" width="0.4138%" height="15" fill="rgb(234,196,4)" fg:x="84001" fg:w="360"/><text x="96.7951%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (360 samples, 0.41%)</title><rect x="96.5451%" y="549" width="0.4138%" height="15" fill="rgb(250,143,31)" fg:x="84001" fg:w="360"/><text x="96.7951%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (360 samples, 0.41%)</title><rect x="96.5451%" y="533" width="0.4138%" height="15" fill="rgb(211,110,34)" fg:x="84001" fg:w="360"/><text x="96.7951%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (4,467 samples, 5.13%)</title><rect x="91.8271%" y="581" width="5.1341%" height="15" fill="rgb(215,124,48)" fg:x="79896" fg:w="4467"/><text x="92.0771%" y="591.50">cpu_be..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (4,479 samples, 5.15%)</title><rect x="91.8213%" y="597" width="5.1479%" height="15" fill="rgb(216,46,13)" fg:x="79891" fg:w="4479"/><text x="92.0713%" y="607.50">cpu_be..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="96.9807%" y="517" width="0.0253%" height="15" fill="rgb(205,184,25)" fg:x="84380" fg:w="22"/><text x="97.2307%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="96.9876%" y="501" width="0.0184%" height="15" fill="rgb(228,1,10)" fg:x="84386" fg:w="16"/><text x="97.2376%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (13 samples, 0.01%)</title><rect x="97.0209%" y="405" width="0.0149%" height="15" fill="rgb(213,116,27)" fg:x="84415" fg:w="13"/><text x="97.2709%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (12 samples, 0.01%)</title><rect x="97.0221%" y="389" width="0.0138%" height="15" fill="rgb(241,95,50)" fg:x="84416" fg:w="12"/><text x="97.2721%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (9 samples, 0.01%)</title><rect x="97.0255%" y="373" width="0.0103%" height="15" fill="rgb(238,48,32)" fg:x="84419" fg:w="9"/><text x="97.2755%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (28 samples, 0.03%)</title><rect x="97.0060%" y="517" width="0.0322%" height="15" fill="rgb(235,113,49)" fg:x="84402" fg:w="28"/><text x="97.2560%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (28 samples, 0.03%)</title><rect x="97.0060%" y="501" width="0.0322%" height="15" fill="rgb(205,127,43)" fg:x="84402" fg:w="28"/><text x="97.2560%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="97.0117%" y="485" width="0.0264%" height="15" fill="rgb(250,162,2)" fg:x="84407" fg:w="23"/><text x="97.2617%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (15 samples, 0.02%)</title><rect x="97.0209%" y="469" width="0.0172%" height="15" fill="rgb(220,13,41)" fg:x="84415" fg:w="15"/><text x="97.2709%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="97.0209%" y="453" width="0.0172%" height="15" fill="rgb(249,221,25)" fg:x="84415" fg:w="15"/><text x="97.2709%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.02%)</title><rect x="97.0209%" y="437" width="0.0172%" height="15" fill="rgb(215,208,19)" fg:x="84415" fg:w="15"/><text x="97.2709%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (15 samples, 0.02%)</title><rect x="97.0209%" y="421" width="0.0172%" height="15" fill="rgb(236,175,2)" fg:x="84415" fg:w="15"/><text x="97.2709%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="97.0382%" y="421" width="0.0138%" height="15" fill="rgb(241,52,2)" fg:x="84430" fg:w="12"/><text x="97.2882%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="97.0382%" y="405" width="0.0138%" height="15" fill="rgb(248,140,14)" fg:x="84430" fg:w="12"/><text x="97.2882%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (72 samples, 0.08%)</title><rect x="96.9761%" y="549" width="0.0828%" height="15" fill="rgb(253,22,42)" fg:x="84376" fg:w="72"/><text x="97.2261%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (68 samples, 0.08%)</title><rect x="96.9807%" y="533" width="0.0782%" height="15" fill="rgb(234,61,47)" fg:x="84380" fg:w="68"/><text x="97.2307%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.02%)</title><rect x="97.0382%" y="517" width="0.0207%" height="15" fill="rgb(208,226,15)" fg:x="84430" fg:w="18"/><text x="97.2882%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.02%)</title><rect x="97.0382%" y="501" width="0.0207%" height="15" fill="rgb(217,221,4)" fg:x="84430" fg:w="18"/><text x="97.2882%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="97.0382%" y="485" width="0.0207%" height="15" fill="rgb(212,174,34)" fg:x="84430" fg:w="18"/><text x="97.2882%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="97.0382%" y="469" width="0.0207%" height="15" fill="rgb(253,83,4)" fg:x="84430" fg:w="18"/><text x="97.2882%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="97.0382%" y="453" width="0.0207%" height="15" fill="rgb(250,195,49)" fg:x="84430" fg:w="18"/><text x="97.2882%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="97.0382%" y="437" width="0.0207%" height="15" fill="rgb(241,192,25)" fg:x="84430" fg:w="18"/><text x="97.2882%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="97.0589%" y="485" width="0.0103%" height="15" fill="rgb(208,124,10)" fg:x="84448" fg:w="9"/><text x="97.3089%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (9 samples, 0.01%)</title><rect x="97.0589%" y="469" width="0.0103%" height="15" fill="rgb(222,33,0)" fg:x="84448" fg:w="9"/><text x="97.3089%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="97.0589%" y="501" width="0.0195%" height="15" fill="rgb(234,209,28)" fg:x="84448" fg:w="17"/><text x="97.3089%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (9 samples, 0.01%)</title><rect x="97.0922%" y="373" width="0.0103%" height="15" fill="rgb(224,11,23)" fg:x="84477" fg:w="9"/><text x="97.3422%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (10 samples, 0.01%)</title><rect x="97.0922%" y="389" width="0.0115%" height="15" fill="rgb(232,99,1)" fg:x="84477" fg:w="10"/><text x="97.3422%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (41 samples, 0.05%)</title><rect x="97.0589%" y="549" width="0.0471%" height="15" fill="rgb(237,95,45)" fg:x="84448" fg:w="41"/><text x="97.3089%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 0.05%)</title><rect x="97.0589%" y="533" width="0.0471%" height="15" fill="rgb(208,109,11)" fg:x="84448" fg:w="41"/><text x="97.3089%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (41 samples, 0.05%)</title><rect x="97.0589%" y="517" width="0.0471%" height="15" fill="rgb(216,190,48)" fg:x="84448" fg:w="41"/><text x="97.3089%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (24 samples, 0.03%)</title><rect x="97.0784%" y="501" width="0.0276%" height="15" fill="rgb(251,171,36)" fg:x="84465" fg:w="24"/><text x="97.3284%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.03%)</title><rect x="97.0784%" y="485" width="0.0276%" height="15" fill="rgb(230,62,22)" fg:x="84465" fg:w="24"/><text x="97.3284%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="97.0830%" y="469" width="0.0230%" height="15" fill="rgb(225,114,35)" fg:x="84469" fg:w="20"/><text x="97.3330%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.01%)</title><rect x="97.0922%" y="453" width="0.0138%" height="15" fill="rgb(215,118,42)" fg:x="84477" fg:w="12"/><text x="97.3422%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="97.0922%" y="437" width="0.0138%" height="15" fill="rgb(243,119,21)" fg:x="84477" fg:w="12"/><text x="97.3422%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.01%)</title><rect x="97.0922%" y="421" width="0.0138%" height="15" fill="rgb(252,177,53)" fg:x="84477" fg:w="12"/><text x="97.3422%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.01%)</title><rect x="97.0922%" y="405" width="0.0138%" height="15" fill="rgb(237,209,29)" fg:x="84477" fg:w="12"/><text x="97.3422%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="97.1060%" y="485" width="0.0138%" height="15" fill="rgb(212,65,23)" fg:x="84489" fg:w="12"/><text x="97.3560%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="97.1060%" y="469" width="0.0138%" height="15" fill="rgb(230,222,46)" fg:x="84489" fg:w="12"/><text x="97.3560%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="97.1198%" y="421" width="0.0115%" height="15" fill="rgb(215,135,32)" fg:x="84501" fg:w="10"/><text x="97.3698%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="97.1209%" y="405" width="0.0103%" height="15" fill="rgb(246,101,22)" fg:x="84502" fg:w="9"/><text x="97.3709%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (142 samples, 0.16%)</title><rect x="96.9692%" y="597" width="0.1632%" height="15" fill="rgb(206,107,13)" fg:x="84370" fg:w="142"/><text x="97.2192%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (142 samples, 0.16%)</title><rect x="96.9692%" y="581" width="0.1632%" height="15" fill="rgb(250,100,44)" fg:x="84370" fg:w="142"/><text x="97.2192%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (136 samples, 0.16%)</title><rect x="96.9761%" y="565" width="0.1563%" height="15" fill="rgb(231,147,38)" fg:x="84376" fg:w="136"/><text x="97.2261%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (23 samples, 0.03%)</title><rect x="97.1060%" y="549" width="0.0264%" height="15" fill="rgb(229,8,40)" fg:x="84489" fg:w="23"/><text x="97.3560%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (23 samples, 0.03%)</title><rect x="97.1060%" y="533" width="0.0264%" height="15" fill="rgb(221,135,30)" fg:x="84489" fg:w="23"/><text x="97.3560%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="97.1060%" y="517" width="0.0264%" height="15" fill="rgb(249,193,18)" fg:x="84489" fg:w="23"/><text x="97.3560%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="97.1060%" y="501" width="0.0264%" height="15" fill="rgb(209,133,39)" fg:x="84489" fg:w="23"/><text x="97.3560%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.01%)</title><rect x="97.1198%" y="485" width="0.0126%" height="15" fill="rgb(232,100,14)" fg:x="84501" fg:w="11"/><text x="97.3698%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11 samples, 0.01%)</title><rect x="97.1198%" y="469" width="0.0126%" height="15" fill="rgb(224,185,1)" fg:x="84501" fg:w="11"/><text x="97.3698%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="97.1198%" y="453" width="0.0126%" height="15" fill="rgb(223,139,8)" fg:x="84501" fg:w="11"/><text x="97.3698%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="97.1198%" y="437" width="0.0126%" height="15" fill="rgb(232,213,38)" fg:x="84501" fg:w="11"/><text x="97.3698%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (11 samples, 0.01%)</title><rect x="97.1703%" y="405" width="0.0126%" height="15" fill="rgb(207,94,22)" fg:x="84545" fg:w="11"/><text x="97.4203%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (18 samples, 0.02%)</title><rect x="97.2152%" y="389" width="0.0207%" height="15" fill="rgb(219,183,54)" fg:x="84584" fg:w="18"/><text x="97.4652%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (16 samples, 0.02%)</title><rect x="97.2175%" y="373" width="0.0184%" height="15" fill="rgb(216,185,54)" fg:x="84586" fg:w="16"/><text x="97.4675%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (11 samples, 0.01%)</title><rect x="97.2232%" y="357" width="0.0126%" height="15" fill="rgb(254,217,39)" fg:x="84591" fg:w="11"/><text x="97.4732%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (166 samples, 0.19%)</title><rect x="97.1830%" y="405" width="0.1908%" height="15" fill="rgb(240,178,23)" fg:x="84556" fg:w="166"/><text x="97.4330%" y="415.50"></text></g><g><title>libsystem_m.dylib`exp (120 samples, 0.14%)</title><rect x="97.2359%" y="389" width="0.1379%" height="15" fill="rgb(218,11,47)" fg:x="84602" fg:w="120"/><text x="97.4859%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (194 samples, 0.22%)</title><rect x="97.1703%" y="421" width="0.2230%" height="15" fill="rgb(218,51,51)" fg:x="84545" fg:w="194"/><text x="97.4203%" y="431.50"></text></g><g><title>libsystem_m.dylib`exp (11 samples, 0.01%)</title><rect x="97.3807%" y="405" width="0.0126%" height="15" fill="rgb(238,126,27)" fg:x="84728" fg:w="11"/><text x="97.6307%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (238 samples, 0.27%)</title><rect x="97.1600%" y="437" width="0.2735%" height="15" fill="rgb(249,202,22)" fg:x="84536" fg:w="238"/><text x="97.4100%" y="447.50"></text></g><g><title>libsystem_m.dylib`exp (35 samples, 0.04%)</title><rect x="97.3933%" y="421" width="0.0402%" height="15" fill="rgb(254,195,49)" fg:x="84739" fg:w="35"/><text x="97.6433%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.01%)</title><rect x="97.4393%" y="437" width="0.0103%" height="15" fill="rgb(208,123,14)" fg:x="84779" fg:w="9"/><text x="97.6893%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.01%)</title><rect x="97.4393%" y="421" width="0.0103%" height="15" fill="rgb(224,200,8)" fg:x="84779" fg:w="9"/><text x="97.6893%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="97.4393%" y="405" width="0.0103%" height="15" fill="rgb(217,61,36)" fg:x="84779" fg:w="9"/><text x="97.6893%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="97.4393%" y="389" width="0.0103%" height="15" fill="rgb(206,35,45)" fg:x="84779" fg:w="9"/><text x="97.6893%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (258 samples, 0.30%)</title><rect x="97.1554%" y="453" width="0.2965%" height="15" fill="rgb(217,65,33)" fg:x="84532" fg:w="258"/><text x="97.4054%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (297 samples, 0.34%)</title><rect x="97.1439%" y="469" width="0.3414%" height="15" fill="rgb(222,158,48)" fg:x="84522" fg:w="297"/><text x="97.3939%" y="479.50"></text></g><g><title>libsystem_m.dylib`exp (29 samples, 0.03%)</title><rect x="97.4519%" y="453" width="0.0333%" height="15" fill="rgb(254,2,54)" fg:x="84790" fg:w="29"/><text x="97.7019%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.01%)</title><rect x="97.4933%" y="309" width="0.0149%" height="15" fill="rgb(250,143,38)" fg:x="84826" fg:w="13"/><text x="97.7433%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="97.4922%" y="325" width="0.0184%" height="15" fill="rgb(248,25,0)" fg:x="84825" fg:w="16"/><text x="97.7422%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="97.4922%" y="341" width="0.0195%" height="15" fill="rgb(206,152,27)" fg:x="84825" fg:w="17"/><text x="97.7422%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="97.4922%" y="405" width="0.0207%" height="15" fill="rgb(240,77,30)" fg:x="84825" fg:w="18"/><text x="97.7422%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="97.4922%" y="389" width="0.0207%" height="15" fill="rgb(231,5,3)" fg:x="84825" fg:w="18"/><text x="97.7422%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="97.4922%" y="373" width="0.0207%" height="15" fill="rgb(207,226,32)" fg:x="84825" fg:w="18"/><text x="97.7422%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="97.4922%" y="357" width="0.0207%" height="15" fill="rgb(222,207,47)" fg:x="84825" fg:w="18"/><text x="97.7422%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (20 samples, 0.02%)</title><rect x="97.4910%" y="469" width="0.0230%" height="15" fill="rgb(229,115,45)" fg:x="84824" fg:w="20"/><text x="97.7410%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (20 samples, 0.02%)</title><rect x="97.4910%" y="453" width="0.0230%" height="15" fill="rgb(224,191,6)" fg:x="84824" fg:w="20"/><text x="97.7410%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.02%)</title><rect x="97.4910%" y="437" width="0.0230%" height="15" fill="rgb(230,227,24)" fg:x="84824" fg:w="20"/><text x="97.7410%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.02%)</title><rect x="97.4922%" y="421" width="0.0218%" height="15" fill="rgb(228,80,19)" fg:x="84825" fg:w="19"/><text x="97.7422%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (328 samples, 0.38%)</title><rect x="97.1382%" y="485" width="0.3770%" height="15" fill="rgb(247,229,0)" fg:x="84517" fg:w="328"/><text x="97.3882%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (338 samples, 0.39%)</title><rect x="97.1370%" y="501" width="0.3885%" height="15" fill="rgb(237,194,15)" fg:x="84516" fg:w="338"/><text x="97.3870%" y="511.50"></text></g><g><title>libsystem_m.dylib`exp (9 samples, 0.01%)</title><rect x="97.5151%" y="485" width="0.0103%" height="15" fill="rgb(219,203,20)" fg:x="84845" fg:w="9"/><text x="97.7651%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.01%)</title><rect x="97.5255%" y="501" width="0.0115%" height="15" fill="rgb(234,128,8)" fg:x="84854" fg:w="10"/><text x="97.7755%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="97.5255%" y="485" width="0.0115%" height="15" fill="rgb(248,202,8)" fg:x="84854" fg:w="10"/><text x="97.7755%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="97.5255%" y="469" width="0.0115%" height="15" fill="rgb(206,104,37)" fg:x="84854" fg:w="10"/><text x="97.7755%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="97.5393%" y="357" width="0.0115%" height="15" fill="rgb(223,8,27)" fg:x="84866" fg:w="10"/><text x="97.7893%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="97.5393%" y="341" width="0.0115%" height="15" fill="rgb(216,217,28)" fg:x="84866" fg:w="10"/><text x="97.7893%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="97.5393%" y="373" width="0.0126%" height="15" fill="rgb(249,199,1)" fg:x="84866" fg:w="11"/><text x="97.7893%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (13 samples, 0.01%)</title><rect x="97.5381%" y="389" width="0.0149%" height="15" fill="rgb(240,85,17)" fg:x="84865" fg:w="13"/><text x="97.7881%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="97.5370%" y="405" width="0.0184%" height="15" fill="rgb(206,108,45)" fg:x="84864" fg:w="16"/><text x="97.7870%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="97.5370%" y="437" width="0.0207%" height="15" fill="rgb(245,210,41)" fg:x="84864" fg:w="18"/><text x="97.7870%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="97.5370%" y="421" width="0.0207%" height="15" fill="rgb(206,13,37)" fg:x="84864" fg:w="18"/><text x="97.7870%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="97.5370%" y="453" width="0.0230%" height="15" fill="rgb(250,61,18)" fg:x="84864" fg:w="20"/><text x="97.7870%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (22 samples, 0.03%)</title><rect x="97.5370%" y="485" width="0.0253%" height="15" fill="rgb(235,172,48)" fg:x="84864" fg:w="22"/><text x="97.7870%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="97.5370%" y="469" width="0.0253%" height="15" fill="rgb(249,201,17)" fg:x="84864" fg:w="22"/><text x="97.7870%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (24 samples, 0.03%)</title><rect x="97.5370%" y="501" width="0.0276%" height="15" fill="rgb(219,208,6)" fg:x="84864" fg:w="24"/><text x="97.7870%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (373 samples, 0.43%)</title><rect x="97.1370%" y="517" width="0.4287%" height="15" fill="rgb(248,31,23)" fg:x="84516" fg:w="373"/><text x="97.3870%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (378 samples, 0.43%)</title><rect x="97.1359%" y="533" width="0.4344%" height="15" fill="rgb(245,15,42)" fg:x="84515" fg:w="378"/><text x="97.3859%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="97.5715%" y="389" width="0.0184%" height="15" fill="rgb(222,217,39)" fg:x="84894" fg:w="16"/><text x="97.8215%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="97.5715%" y="373" width="0.0184%" height="15" fill="rgb(210,219,27)" fg:x="84894" fg:w="16"/><text x="97.8215%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="97.5715%" y="357" width="0.0184%" height="15" fill="rgb(252,166,36)" fg:x="84894" fg:w="16"/><text x="97.8215%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="97.5715%" y="341" width="0.0184%" height="15" fill="rgb(245,132,34)" fg:x="84894" fg:w="16"/><text x="97.8215%" y="351.50"></text></g><g><title>libsystem_m.dylib`exp (10 samples, 0.01%)</title><rect x="97.5784%" y="325" width="0.0115%" height="15" fill="rgb(236,54,3)" fg:x="84900" fg:w="10"/><text x="97.8284%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.03%)</title><rect x="97.5715%" y="405" width="0.0299%" height="15" fill="rgb(241,173,43)" fg:x="84894" fg:w="26"/><text x="97.8215%" y="415.50"></text></g><g><title>libsystem_m.dylib`exp (10 samples, 0.01%)</title><rect x="97.5898%" y="389" width="0.0115%" height="15" fill="rgb(215,190,9)" fg:x="84910" fg:w="10"/><text x="97.8398%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (27 samples, 0.03%)</title><rect x="97.5715%" y="421" width="0.0310%" height="15" fill="rgb(242,101,16)" fg:x="84894" fg:w="27"/><text x="97.8215%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.04%)</title><rect x="97.5715%" y="437" width="0.0391%" height="15" fill="rgb(223,190,21)" fg:x="84894" fg:w="34"/><text x="97.8215%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.01%)</title><rect x="97.6105%" y="437" width="0.0103%" height="15" fill="rgb(215,228,25)" fg:x="84928" fg:w="9"/><text x="97.8605%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.01%)</title><rect x="97.6105%" y="421" width="0.0103%" height="15" fill="rgb(225,36,22)" fg:x="84928" fg:w="9"/><text x="97.8605%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="97.6105%" y="405" width="0.0103%" height="15" fill="rgb(251,106,46)" fg:x="84928" fg:w="9"/><text x="97.8605%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (44 samples, 0.05%)</title><rect x="97.5715%" y="453" width="0.0506%" height="15" fill="rgb(208,90,1)" fg:x="84894" fg:w="44"/><text x="97.8215%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (50 samples, 0.06%)</title><rect x="97.5703%" y="469" width="0.0575%" height="15" fill="rgb(243,10,4)" fg:x="84893" fg:w="50"/><text x="97.8203%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="97.6278%" y="405" width="0.0126%" height="15" fill="rgb(212,137,27)" fg:x="84943" fg:w="11"/><text x="97.8778%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="97.6289%" y="389" width="0.0115%" height="15" fill="rgb(231,220,49)" fg:x="84944" fg:w="10"/><text x="97.8789%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (64 samples, 0.07%)</title><rect x="97.5703%" y="485" width="0.0736%" height="15" fill="rgb(237,96,20)" fg:x="84893" fg:w="64"/><text x="97.8203%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (14 samples, 0.02%)</title><rect x="97.6278%" y="469" width="0.0161%" height="15" fill="rgb(239,229,30)" fg:x="84943" fg:w="14"/><text x="97.8778%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (14 samples, 0.02%)</title><rect x="97.6278%" y="453" width="0.0161%" height="15" fill="rgb(219,65,33)" fg:x="84943" fg:w="14"/><text x="97.8778%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="97.6278%" y="437" width="0.0161%" height="15" fill="rgb(243,134,7)" fg:x="84943" fg:w="14"/><text x="97.8778%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (14 samples, 0.02%)</title><rect x="97.6278%" y="421" width="0.0161%" height="15" fill="rgb(216,177,54)" fg:x="84943" fg:w="14"/><text x="97.8778%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (67 samples, 0.08%)</title><rect x="97.5703%" y="533" width="0.0770%" height="15" fill="rgb(211,160,20)" fg:x="84893" fg:w="67"/><text x="97.8203%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (67 samples, 0.08%)</title><rect x="97.5703%" y="517" width="0.0770%" height="15" fill="rgb(239,85,39)" fg:x="84893" fg:w="67"/><text x="97.8203%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (67 samples, 0.08%)</title><rect x="97.5703%" y="501" width="0.0770%" height="15" fill="rgb(232,125,22)" fg:x="84893" fg:w="67"/><text x="97.8203%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (446 samples, 0.51%)</title><rect x="97.1359%" y="549" width="0.5126%" height="15" fill="rgb(244,57,34)" fg:x="84515" fg:w="446"/><text x="97.3859%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (455 samples, 0.52%)</title><rect x="97.1359%" y="565" width="0.5229%" height="15" fill="rgb(214,203,32)" fg:x="84515" fg:w="455"/><text x="97.3859%" y="575.50"></text></g><g><title>libsystem_m.dylib`exp (9 samples, 0.01%)</title><rect x="97.6485%" y="549" width="0.0103%" height="15" fill="rgb(207,58,43)" fg:x="84961" fg:w="9"/><text x="97.8985%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (459 samples, 0.53%)</title><rect x="97.1324%" y="581" width="0.5275%" height="15" fill="rgb(215,193,15)" fg:x="84512" fg:w="459"/><text x="97.3824%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (5,083 samples, 5.84%)</title><rect x="91.8190%" y="613" width="5.8421%" height="15" fill="rgb(232,15,44)" fg:x="79889" fg:w="5083"/><text x="92.0690%" y="623.50">cpu_ben..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (460 samples, 0.53%)</title><rect x="97.1324%" y="597" width="0.5287%" height="15" fill="rgb(212,3,48)" fg:x="84512" fg:w="460"/><text x="97.3824%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (5,096 samples, 5.86%)</title><rect x="91.8145%" y="629" width="5.8570%" height="15" fill="rgb(218,128,7)" fg:x="79885" fg:w="5096"/><text x="92.0645%" y="639.50">cpu_ben..</text></g><g><title>libsystem_m.dylib`exp (9 samples, 0.01%)</title><rect x="97.6611%" y="613" width="0.0103%" height="15" fill="rgb(226,216,39)" fg:x="84972" fg:w="9"/><text x="97.9111%" y="623.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="97.6749%" y="549" width="0.0172%" height="15" fill="rgb(243,47,51)" fg:x="84984" fg:w="15"/><text x="97.9249%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (13 samples, 0.01%)</title><rect x="97.6772%" y="533" width="0.0149%" height="15" fill="rgb(241,183,40)" fg:x="84986" fg:w="13"/><text x="97.9272%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="97.6933%" y="501" width="0.0103%" height="15" fill="rgb(231,217,32)" fg:x="85000" fg:w="9"/><text x="97.9433%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.04%)</title><rect x="97.6726%" y="581" width="0.0448%" height="15" fill="rgb(229,61,38)" fg:x="84982" fg:w="39"/><text x="97.9226%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (37 samples, 0.04%)</title><rect x="97.6749%" y="565" width="0.0425%" height="15" fill="rgb(225,210,5)" fg:x="84984" fg:w="37"/><text x="97.9249%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (22 samples, 0.03%)</title><rect x="97.6921%" y="549" width="0.0253%" height="15" fill="rgb(231,79,45)" fg:x="84999" fg:w="22"/><text x="97.9421%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="97.6921%" y="533" width="0.0253%" height="15" fill="rgb(224,100,7)" fg:x="84999" fg:w="22"/><text x="97.9421%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (21 samples, 0.02%)</title><rect x="97.6933%" y="517" width="0.0241%" height="15" fill="rgb(241,198,18)" fg:x="85000" fg:w="21"/><text x="97.9433%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.01%)</title><rect x="97.7036%" y="501" width="0.0138%" height="15" fill="rgb(252,97,53)" fg:x="85009" fg:w="12"/><text x="97.9536%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="97.7036%" y="485" width="0.0138%" height="15" fill="rgb(220,88,7)" fg:x="85009" fg:w="12"/><text x="97.9536%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="97.7036%" y="469" width="0.0138%" height="15" fill="rgb(213,176,14)" fg:x="85009" fg:w="12"/><text x="97.9536%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="97.7174%" y="533" width="0.0126%" height="15" fill="rgb(246,73,7)" fg:x="85021" fg:w="11"/><text x="97.9674%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="97.7197%" y="517" width="0.0103%" height="15" fill="rgb(245,64,36)" fg:x="85023" fg:w="9"/><text x="97.9697%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (28 samples, 0.03%)</title><rect x="97.7174%" y="581" width="0.0322%" height="15" fill="rgb(245,80,10)" fg:x="85021" fg:w="28"/><text x="97.9674%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (28 samples, 0.03%)</title><rect x="97.7174%" y="565" width="0.0322%" height="15" fill="rgb(232,107,50)" fg:x="85021" fg:w="28"/><text x="97.9674%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (28 samples, 0.03%)</title><rect x="97.7174%" y="549" width="0.0322%" height="15" fill="rgb(253,3,0)" fg:x="85021" fg:w="28"/><text x="97.9674%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (17 samples, 0.02%)</title><rect x="97.7301%" y="533" width="0.0195%" height="15" fill="rgb(212,99,53)" fg:x="85032" fg:w="17"/><text x="97.9801%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="97.7301%" y="517" width="0.0195%" height="15" fill="rgb(249,111,54)" fg:x="85032" fg:w="17"/><text x="97.9801%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (15 samples, 0.02%)</title><rect x="97.7324%" y="501" width="0.0172%" height="15" fill="rgb(249,55,30)" fg:x="85034" fg:w="15"/><text x="97.9824%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.01%)</title><rect x="97.7381%" y="485" width="0.0115%" height="15" fill="rgb(237,47,42)" fg:x="85039" fg:w="10"/><text x="97.9881%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="97.7381%" y="469" width="0.0115%" height="15" fill="rgb(211,20,18)" fg:x="85039" fg:w="10"/><text x="97.9881%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="97.7393%" y="453" width="0.0103%" height="15" fill="rgb(231,203,46)" fg:x="85040" fg:w="9"/><text x="97.9893%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (79 samples, 0.09%)</title><rect x="97.6715%" y="629" width="0.0908%" height="15" fill="rgb(237,142,3)" fg:x="84981" fg:w="79"/><text x="97.9215%" y="639.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (79 samples, 0.09%)</title><rect x="97.6715%" y="613" width="0.0908%" height="15" fill="rgb(241,107,1)" fg:x="84981" fg:w="79"/><text x="97.9215%" y="623.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (78 samples, 0.09%)</title><rect x="97.6726%" y="597" width="0.0896%" height="15" fill="rgb(229,83,13)" fg:x="84982" fg:w="78"/><text x="97.9226%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.01%)</title><rect x="97.7496%" y="581" width="0.0126%" height="15" fill="rgb(241,91,40)" fg:x="85049" fg:w="11"/><text x="97.9996%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11 samples, 0.01%)</title><rect x="97.7496%" y="565" width="0.0126%" height="15" fill="rgb(225,3,45)" fg:x="85049" fg:w="11"/><text x="97.9996%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="97.7496%" y="549" width="0.0126%" height="15" fill="rgb(244,223,14)" fg:x="85049" fg:w="11"/><text x="97.9996%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="97.7508%" y="533" width="0.0115%" height="15" fill="rgb(224,124,37)" fg:x="85050" fg:w="10"/><text x="98.0008%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (17 samples, 0.02%)</title><rect x="97.8174%" y="437" width="0.0195%" height="15" fill="rgb(251,171,30)" fg:x="85108" fg:w="17"/><text x="98.0674%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (82 samples, 0.09%)</title><rect x="97.9013%" y="373" width="0.0942%" height="15" fill="rgb(236,46,54)" fg:x="85181" fg:w="82"/><text x="98.1513%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (52 samples, 0.06%)</title><rect x="97.9358%" y="357" width="0.0598%" height="15" fill="rgb(245,213,5)" fg:x="85211" fg:w="52"/><text x="98.1858%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (10 samples, 0.01%)</title><rect x="97.9841%" y="341" width="0.0115%" height="15" fill="rgb(230,144,27)" fg:x="85253" fg:w="10"/><text x="98.2341%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (98 samples, 0.11%)</title><rect x="97.8898%" y="389" width="0.1126%" height="15" fill="rgb(220,86,6)" fg:x="85171" fg:w="98"/><text x="98.1398%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (10 samples, 0.01%)</title><rect x="98.0036%" y="389" width="0.0115%" height="15" fill="rgb(240,20,13)" fg:x="85270" fg:w="10"/><text x="98.2536%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (113 samples, 0.13%)</title><rect x="97.8864%" y="405" width="0.1299%" height="15" fill="rgb(217,89,34)" fg:x="85168" fg:w="113"/><text x="98.1364%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (26 samples, 0.03%)</title><rect x="98.0163%" y="405" width="0.0299%" height="15" fill="rgb(229,13,5)" fg:x="85281" fg:w="26"/><text x="98.2663%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (17 samples, 0.02%)</title><rect x="98.0266%" y="389" width="0.0195%" height="15" fill="rgb(244,67,35)" fg:x="85290" fg:w="17"/><text x="98.2766%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (140 samples, 0.16%)</title><rect x="97.8864%" y="421" width="0.1609%" height="15" fill="rgb(221,40,2)" fg:x="85168" fg:w="140"/><text x="98.1364%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (388 samples, 0.45%)</title><rect x="97.8370%" y="437" width="0.4459%" height="15" fill="rgb(237,157,21)" fg:x="85125" fg:w="388"/><text x="98.0870%" y="447.50"></text></g><g><title>libsystem_m.dylib`exp (205 samples, 0.24%)</title><rect x="98.0473%" y="421" width="0.2356%" height="15" fill="rgb(222,94,11)" fg:x="85308" fg:w="205"/><text x="98.2973%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="98.2840%" y="325" width="0.0115%" height="15" fill="rgb(249,113,6)" fg:x="85514" fg:w="10"/><text x="98.5340%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="98.2840%" y="309" width="0.0115%" height="15" fill="rgb(238,137,36)" fg:x="85514" fg:w="10"/><text x="98.5340%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="98.2840%" y="357" width="0.0126%" height="15" fill="rgb(210,102,26)" fg:x="85514" fg:w="11"/><text x="98.5340%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.2840%" y="341" width="0.0126%" height="15" fill="rgb(218,30,30)" fg:x="85514" fg:w="11"/><text x="98.5340%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="98.2840%" y="373" width="0.0138%" height="15" fill="rgb(214,67,26)" fg:x="85514" fg:w="12"/><text x="98.5340%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (16 samples, 0.02%)</title><rect x="98.2840%" y="437" width="0.0184%" height="15" fill="rgb(251,9,53)" fg:x="85514" fg:w="16"/><text x="98.5340%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (16 samples, 0.02%)</title><rect x="98.2840%" y="421" width="0.0184%" height="15" fill="rgb(228,204,25)" fg:x="85514" fg:w="16"/><text x="98.5340%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="98.2840%" y="405" width="0.0184%" height="15" fill="rgb(207,153,8)" fg:x="85514" fg:w="16"/><text x="98.5340%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="98.2840%" y="389" width="0.0184%" height="15" fill="rgb(242,9,16)" fg:x="85514" fg:w="16"/><text x="98.5340%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (441 samples, 0.51%)</title><rect x="97.8174%" y="453" width="0.5069%" height="15" fill="rgb(217,211,10)" fg:x="85108" fg:w="441"/><text x="98.0674%" y="463.50"></text></g><g><title>libsystem_m.dylib`exp (19 samples, 0.02%)</title><rect x="98.3024%" y="437" width="0.0218%" height="15" fill="rgb(219,228,52)" fg:x="85530" fg:w="19"/><text x="98.5524%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (490 samples, 0.56%)</title><rect x="97.8013%" y="469" width="0.5632%" height="15" fill="rgb(231,92,29)" fg:x="85094" fg:w="490"/><text x="98.0513%" y="479.50"></text></g><g><title>libsystem_m.dylib`exp (35 samples, 0.04%)</title><rect x="98.3243%" y="453" width="0.0402%" height="15" fill="rgb(232,8,23)" fg:x="85549" fg:w="35"/><text x="98.5743%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (23 samples, 0.03%)</title><rect x="98.3725%" y="229" width="0.0264%" height="15" fill="rgb(216,211,34)" fg:x="85591" fg:w="23"/><text x="98.6225%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (20 samples, 0.02%)</title><rect x="98.3760%" y="213" width="0.0230%" height="15" fill="rgb(236,151,0)" fg:x="85594" fg:w="20"/><text x="98.6260%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (14 samples, 0.02%)</title><rect x="98.3829%" y="197" width="0.0161%" height="15" fill="rgb(209,168,3)" fg:x="85600" fg:w="14"/><text x="98.6329%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (26 samples, 0.03%)</title><rect x="98.3702%" y="261" width="0.0299%" height="15" fill="rgb(208,129,28)" fg:x="85589" fg:w="26"/><text x="98.6202%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="98.3702%" y="245" width="0.0299%" height="15" fill="rgb(229,78,22)" fg:x="85589" fg:w="26"/><text x="98.6202%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.03%)</title><rect x="98.3691%" y="277" width="0.0345%" height="15" fill="rgb(228,187,13)" fg:x="85588" fg:w="30"/><text x="98.6191%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (36 samples, 0.04%)</title><rect x="98.3679%" y="341" width="0.0414%" height="15" fill="rgb(240,119,24)" fg:x="85587" fg:w="36"/><text x="98.6179%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (35 samples, 0.04%)</title><rect x="98.3691%" y="325" width="0.0402%" height="15" fill="rgb(209,194,42)" fg:x="85588" fg:w="35"/><text x="98.6191%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.04%)</title><rect x="98.3691%" y="309" width="0.0402%" height="15" fill="rgb(247,200,46)" fg:x="85588" fg:w="35"/><text x="98.6191%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (35 samples, 0.04%)</title><rect x="98.3691%" y="293" width="0.0402%" height="15" fill="rgb(218,76,16)" fg:x="85588" fg:w="35"/><text x="98.6191%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (38 samples, 0.04%)</title><rect x="98.3668%" y="357" width="0.0437%" height="15" fill="rgb(225,21,48)" fg:x="85586" fg:w="38"/><text x="98.6168%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.04%)</title><rect x="98.3668%" y="405" width="0.0448%" height="15" fill="rgb(239,223,50)" fg:x="85586" fg:w="39"/><text x="98.6168%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (39 samples, 0.04%)</title><rect x="98.3668%" y="389" width="0.0448%" height="15" fill="rgb(244,45,21)" fg:x="85586" fg:w="39"/><text x="98.6168%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.04%)</title><rect x="98.3668%" y="373" width="0.0448%" height="15" fill="rgb(232,33,43)" fg:x="85586" fg:w="39"/><text x="98.6168%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (50 samples, 0.06%)</title><rect x="98.3668%" y="421" width="0.0575%" height="15" fill="rgb(209,8,3)" fg:x="85586" fg:w="50"/><text x="98.6168%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.01%)</title><rect x="98.4116%" y="405" width="0.0126%" height="15" fill="rgb(214,25,53)" fg:x="85625" fg:w="11"/><text x="98.6616%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11 samples, 0.01%)</title><rect x="98.4116%" y="389" width="0.0126%" height="15" fill="rgb(254,186,54)" fg:x="85625" fg:w="11"/><text x="98.6616%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.4116%" y="373" width="0.0126%" height="15" fill="rgb(208,174,49)" fg:x="85625" fg:w="11"/><text x="98.6616%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="98.4116%" y="357" width="0.0126%" height="15" fill="rgb(233,191,51)" fg:x="85625" fg:w="11"/><text x="98.6616%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (51 samples, 0.06%)</title><rect x="98.3668%" y="469" width="0.0586%" height="15" fill="rgb(222,134,10)" fg:x="85586" fg:w="51"/><text x="98.6168%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (51 samples, 0.06%)</title><rect x="98.3668%" y="453" width="0.0586%" height="15" fill="rgb(230,226,20)" fg:x="85586" fg:w="51"/><text x="98.6168%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (51 samples, 0.06%)</title><rect x="98.3668%" y="437" width="0.0586%" height="15" fill="rgb(251,111,25)" fg:x="85586" fg:w="51"/><text x="98.6168%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (548 samples, 0.63%)</title><rect x="97.7967%" y="485" width="0.6298%" height="15" fill="rgb(224,40,46)" fg:x="85090" fg:w="548"/><text x="98.0467%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (590 samples, 0.68%)</title><rect x="97.7864%" y="501" width="0.6781%" height="15" fill="rgb(236,108,47)" fg:x="85081" fg:w="590"/><text x="98.0364%" y="511.50"></text></g><g><title>libsystem_m.dylib`exp (33 samples, 0.04%)</title><rect x="98.4266%" y="485" width="0.0379%" height="15" fill="rgb(234,93,0)" fg:x="85638" fg:w="33"/><text x="98.6766%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="98.4794%" y="309" width="0.0138%" height="15" fill="rgb(224,213,32)" fg:x="85684" fg:w="12"/><text x="98.7294%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="98.4760%" y="357" width="0.0207%" height="15" fill="rgb(251,11,48)" fg:x="85681" fg:w="18"/><text x="98.7260%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="98.4760%" y="341" width="0.0207%" height="15" fill="rgb(236,173,5)" fg:x="85681" fg:w="18"/><text x="98.7260%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="98.4760%" y="325" width="0.0207%" height="15" fill="rgb(230,95,12)" fg:x="85681" fg:w="18"/><text x="98.7260%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.02%)</title><rect x="98.4737%" y="373" width="0.0241%" height="15" fill="rgb(232,209,1)" fg:x="85679" fg:w="21"/><text x="98.7237%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="98.4737%" y="405" width="0.0264%" height="15" fill="rgb(232,6,1)" fg:x="85679" fg:w="23"/><text x="98.7237%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="98.4737%" y="389" width="0.0264%" height="15" fill="rgb(210,224,50)" fg:x="85679" fg:w="23"/><text x="98.7237%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.03%)</title><rect x="98.4737%" y="437" width="0.0276%" height="15" fill="rgb(228,127,35)" fg:x="85679" fg:w="24"/><text x="98.7237%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (24 samples, 0.03%)</title><rect x="98.4737%" y="421" width="0.0276%" height="15" fill="rgb(245,102,45)" fg:x="85679" fg:w="24"/><text x="98.7237%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (27 samples, 0.03%)</title><rect x="98.4737%" y="453" width="0.0310%" height="15" fill="rgb(214,1,49)" fg:x="85679" fg:w="27"/><text x="98.7237%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (628 samples, 0.72%)</title><rect x="97.7841%" y="517" width="0.7218%" height="15" fill="rgb(226,163,40)" fg:x="85079" fg:w="628"/><text x="98.0341%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (29 samples, 0.03%)</title><rect x="98.4725%" y="501" width="0.0333%" height="15" fill="rgb(239,212,28)" fg:x="85678" fg:w="29"/><text x="98.7225%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (29 samples, 0.03%)</title><rect x="98.4725%" y="485" width="0.0333%" height="15" fill="rgb(220,20,13)" fg:x="85678" fg:w="29"/><text x="98.7225%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.03%)</title><rect x="98.4725%" y="469" width="0.0333%" height="15" fill="rgb(210,164,35)" fg:x="85678" fg:w="29"/><text x="98.7225%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (649 samples, 0.75%)</title><rect x="97.7714%" y="533" width="0.7459%" height="15" fill="rgb(248,109,41)" fg:x="85068" fg:w="649"/><text x="98.0214%" y="543.50"></text></g><g><title>libsystem_m.dylib`exp (10 samples, 0.01%)</title><rect x="98.5059%" y="517" width="0.0115%" height="15" fill="rgb(238,23,50)" fg:x="85707" fg:w="10"/><text x="98.7559%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="98.5231%" y="485" width="0.0138%" height="15" fill="rgb(211,48,49)" fg:x="85722" fg:w="12"/><text x="98.7731%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (29 samples, 0.03%)</title><rect x="98.5174%" y="533" width="0.0333%" height="15" fill="rgb(223,36,21)" fg:x="85717" fg:w="29"/><text x="98.7674%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.03%)</title><rect x="98.5174%" y="517" width="0.0333%" height="15" fill="rgb(207,123,46)" fg:x="85717" fg:w="29"/><text x="98.7674%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (24 samples, 0.03%)</title><rect x="98.5231%" y="501" width="0.0276%" height="15" fill="rgb(240,218,32)" fg:x="85722" fg:w="24"/><text x="98.7731%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="98.5599%" y="357" width="0.0126%" height="15" fill="rgb(252,5,43)" fg:x="85754" fg:w="11"/><text x="98.8099%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.5599%" y="341" width="0.0126%" height="15" fill="rgb(252,84,19)" fg:x="85754" fg:w="11"/><text x="98.8099%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="98.5576%" y="389" width="0.0207%" height="15" fill="rgb(243,152,39)" fg:x="85752" fg:w="18"/><text x="98.8076%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="98.5576%" y="373" width="0.0207%" height="15" fill="rgb(234,160,15)" fg:x="85752" fg:w="18"/><text x="98.8076%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.03%)</title><rect x="98.5541%" y="405" width="0.0276%" height="15" fill="rgb(237,34,20)" fg:x="85749" fg:w="24"/><text x="98.8041%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (26 samples, 0.03%)</title><rect x="98.5530%" y="421" width="0.0299%" height="15" fill="rgb(229,97,13)" fg:x="85748" fg:w="26"/><text x="98.8030%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (28 samples, 0.03%)</title><rect x="98.5530%" y="437" width="0.0322%" height="15" fill="rgb(234,71,50)" fg:x="85748" fg:w="28"/><text x="98.8030%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="98.5863%" y="389" width="0.0103%" height="15" fill="rgb(253,155,4)" fg:x="85777" fg:w="9"/><text x="98.8363%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (39 samples, 0.04%)</title><rect x="98.5530%" y="453" width="0.0448%" height="15" fill="rgb(222,185,37)" fg:x="85748" fg:w="39"/><text x="98.8030%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.01%)</title><rect x="98.5852%" y="437" width="0.0126%" height="15" fill="rgb(251,177,13)" fg:x="85776" fg:w="11"/><text x="98.8352%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11 samples, 0.01%)</title><rect x="98.5852%" y="421" width="0.0126%" height="15" fill="rgb(250,179,40)" fg:x="85776" fg:w="11"/><text x="98.8352%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.5852%" y="405" width="0.0126%" height="15" fill="rgb(242,44,2)" fg:x="85776" fg:w="11"/><text x="98.8352%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 0.05%)</title><rect x="98.5530%" y="469" width="0.0471%" height="15" fill="rgb(216,177,13)" fg:x="85748" fg:w="41"/><text x="98.8030%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (58 samples, 0.07%)</title><rect x="98.5507%" y="533" width="0.0667%" height="15" fill="rgb(216,106,43)" fg:x="85746" fg:w="58"/><text x="98.8007%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (58 samples, 0.07%)</title><rect x="98.5507%" y="517" width="0.0667%" height="15" fill="rgb(216,183,2)" fg:x="85746" fg:w="58"/><text x="98.8007%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (58 samples, 0.07%)</title><rect x="98.5507%" y="501" width="0.0667%" height="15" fill="rgb(249,75,3)" fg:x="85746" fg:w="58"/><text x="98.8007%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (57 samples, 0.07%)</title><rect x="98.5518%" y="485" width="0.0655%" height="15" fill="rgb(219,67,39)" fg:x="85747" fg:w="57"/><text x="98.8018%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (15 samples, 0.02%)</title><rect x="98.6001%" y="469" width="0.0172%" height="15" fill="rgb(253,228,2)" fg:x="85789" fg:w="15"/><text x="98.8501%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (15 samples, 0.02%)</title><rect x="98.6001%" y="453" width="0.0172%" height="15" fill="rgb(235,138,27)" fg:x="85789" fg:w="15"/><text x="98.8501%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="98.6001%" y="437" width="0.0172%" height="15" fill="rgb(236,97,51)" fg:x="85789" fg:w="15"/><text x="98.8501%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (15 samples, 0.02%)</title><rect x="98.6001%" y="421" width="0.0172%" height="15" fill="rgb(240,80,30)" fg:x="85789" fg:w="15"/><text x="98.8501%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="98.6001%" y="405" width="0.0172%" height="15" fill="rgb(230,178,19)" fg:x="85789" fg:w="15"/><text x="98.8501%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (15 samples, 0.02%)</title><rect x="98.6001%" y="389" width="0.0172%" height="15" fill="rgb(210,190,27)" fg:x="85789" fg:w="15"/><text x="98.8501%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.01%)</title><rect x="98.6070%" y="373" width="0.0103%" height="15" fill="rgb(222,107,31)" fg:x="85795" fg:w="9"/><text x="98.8570%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.01%)</title><rect x="98.6070%" y="357" width="0.0103%" height="15" fill="rgb(216,127,34)" fg:x="85795" fg:w="9"/><text x="98.8570%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.6070%" y="341" width="0.0103%" height="15" fill="rgb(234,116,52)" fg:x="85795" fg:w="9"/><text x="98.8570%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="98.6070%" y="325" width="0.0103%" height="15" fill="rgb(222,124,15)" fg:x="85795" fg:w="9"/><text x="98.8570%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (741 samples, 0.85%)</title><rect x="97.7668%" y="549" width="0.8517%" height="15" fill="rgb(231,179,28)" fg:x="85064" fg:w="741"/><text x="98.0168%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (750 samples, 0.86%)</title><rect x="97.7634%" y="565" width="0.8620%" height="15" fill="rgb(226,93,45)" fg:x="85061" fg:w="750"/><text x="98.0134%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="98.6323%" y="517" width="0.0103%" height="15" fill="rgb(215,8,51)" fg:x="85817" fg:w="9"/><text x="98.8823%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.6323%" y="501" width="0.0103%" height="15" fill="rgb(223,106,5)" fg:x="85817" fg:w="9"/><text x="98.8823%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="98.6323%" y="485" width="0.0103%" height="15" fill="rgb(250,191,5)" fg:x="85817" fg:w="9"/><text x="98.8823%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (22 samples, 0.03%)</title><rect x="98.6254%" y="565" width="0.0253%" height="15" fill="rgb(242,132,44)" fg:x="85811" fg:w="22"/><text x="98.8754%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="98.6254%" y="549" width="0.0253%" height="15" fill="rgb(251,152,29)" fg:x="85811" fg:w="22"/><text x="98.8754%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (22 samples, 0.03%)</title><rect x="98.6254%" y="533" width="0.0253%" height="15" fill="rgb(218,179,5)" fg:x="85811" fg:w="22"/><text x="98.8754%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (21 samples, 0.02%)</title><rect x="98.6771%" y="309" width="0.0241%" height="15" fill="rgb(227,67,19)" fg:x="85856" fg:w="21"/><text x="98.9271%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (10 samples, 0.01%)</title><rect x="98.6898%" y="293" width="0.0115%" height="15" fill="rgb(233,119,31)" fg:x="85867" fg:w="10"/><text x="98.9398%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (24 samples, 0.03%)</title><rect x="98.6748%" y="325" width="0.0276%" height="15" fill="rgb(241,120,22)" fg:x="85854" fg:w="24"/><text x="98.9248%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.03%)</title><rect x="98.6737%" y="341" width="0.0310%" height="15" fill="rgb(224,102,30)" fg:x="85853" fg:w="27"/><text x="98.9237%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (35 samples, 0.04%)</title><rect x="98.6737%" y="357" width="0.0402%" height="15" fill="rgb(210,164,37)" fg:x="85853" fg:w="35"/><text x="98.9237%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (47 samples, 0.05%)</title><rect x="98.6702%" y="389" width="0.0540%" height="15" fill="rgb(226,191,16)" fg:x="85850" fg:w="47"/><text x="98.9202%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (45 samples, 0.05%)</title><rect x="98.6725%" y="373" width="0.0517%" height="15" fill="rgb(214,40,45)" fg:x="85852" fg:w="45"/><text x="98.9225%" y="383.50"></text></g><g><title>libsystem_m.dylib`exp (9 samples, 0.01%)</title><rect x="98.7139%" y="357" width="0.0103%" height="15" fill="rgb(244,29,26)" fg:x="85888" fg:w="9"/><text x="98.9639%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (62 samples, 0.07%)</title><rect x="98.6679%" y="405" width="0.0713%" height="15" fill="rgb(216,16,5)" fg:x="85848" fg:w="62"/><text x="98.9179%" y="415.50"></text></g><g><title>libsystem_m.dylib`exp (13 samples, 0.01%)</title><rect x="98.7242%" y="389" width="0.0149%" height="15" fill="rgb(249,76,35)" fg:x="85897" fg:w="13"/><text x="98.9742%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (67 samples, 0.08%)</title><rect x="98.6668%" y="421" width="0.0770%" height="15" fill="rgb(207,11,44)" fg:x="85847" fg:w="67"/><text x="98.9168%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (83 samples, 0.10%)</title><rect x="98.6599%" y="437" width="0.0954%" height="15" fill="rgb(228,190,49)" fg:x="85841" fg:w="83"/><text x="98.9099%" y="447.50"></text></g><g><title>libsystem_m.dylib`exp (10 samples, 0.01%)</title><rect x="98.7438%" y="421" width="0.0115%" height="15" fill="rgb(214,173,12)" fg:x="85914" fg:w="10"/><text x="98.9938%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="98.7610%" y="325" width="0.0103%" height="15" fill="rgb(218,26,35)" fg:x="85929" fg:w="9"/><text x="99.0110%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.7610%" y="309" width="0.0103%" height="15" fill="rgb(220,200,19)" fg:x="85929" fg:w="9"/><text x="99.0110%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="98.7610%" y="293" width="0.0103%" height="15" fill="rgb(239,95,49)" fg:x="85929" fg:w="9"/><text x="99.0110%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.01%)</title><rect x="98.7599%" y="373" width="0.0149%" height="15" fill="rgb(235,85,53)" fg:x="85928" fg:w="13"/><text x="99.0099%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (13 samples, 0.01%)</title><rect x="98.7599%" y="357" width="0.0149%" height="15" fill="rgb(233,133,31)" fg:x="85928" fg:w="13"/><text x="99.0099%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.01%)</title><rect x="98.7599%" y="341" width="0.0149%" height="15" fill="rgb(218,25,20)" fg:x="85928" fg:w="13"/><text x="99.0099%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (15 samples, 0.02%)</title><rect x="98.7587%" y="437" width="0.0172%" height="15" fill="rgb(252,210,38)" fg:x="85927" fg:w="15"/><text x="99.0087%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (15 samples, 0.02%)</title><rect x="98.7587%" y="421" width="0.0172%" height="15" fill="rgb(242,134,21)" fg:x="85927" fg:w="15"/><text x="99.0087%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="98.7587%" y="405" width="0.0172%" height="15" fill="rgb(213,28,48)" fg:x="85927" fg:w="15"/><text x="99.0087%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (14 samples, 0.02%)</title><rect x="98.7599%" y="389" width="0.0161%" height="15" fill="rgb(250,196,2)" fg:x="85928" fg:w="14"/><text x="99.0099%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (104 samples, 0.12%)</title><rect x="98.6587%" y="453" width="0.1195%" height="15" fill="rgb(227,5,17)" fg:x="85840" fg:w="104"/><text x="98.9087%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (115 samples, 0.13%)</title><rect x="98.6530%" y="469" width="0.1322%" height="15" fill="rgb(221,226,24)" fg:x="85835" fg:w="115"/><text x="98.9030%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.7955%" y="309" width="0.0126%" height="15" fill="rgb(211,5,48)" fg:x="85959" fg:w="11"/><text x="99.0455%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="98.7955%" y="325" width="0.0138%" height="15" fill="rgb(219,150,6)" fg:x="85959" fg:w="12"/><text x="99.0455%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="98.7921%" y="341" width="0.0195%" height="15" fill="rgb(251,46,16)" fg:x="85956" fg:w="17"/><text x="99.0421%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.02%)</title><rect x="98.7921%" y="357" width="0.0218%" height="15" fill="rgb(220,204,40)" fg:x="85956" fg:w="19"/><text x="99.0421%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.02%)</title><rect x="98.7921%" y="373" width="0.0230%" height="15" fill="rgb(211,85,2)" fg:x="85956" fg:w="20"/><text x="99.0421%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.02%)</title><rect x="98.7921%" y="405" width="0.0241%" height="15" fill="rgb(229,17,7)" fg:x="85956" fg:w="21"/><text x="99.0421%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (21 samples, 0.02%)</title><rect x="98.7921%" y="389" width="0.0241%" height="15" fill="rgb(239,72,28)" fg:x="85956" fg:w="21"/><text x="99.0421%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="98.7921%" y="421" width="0.0264%" height="15" fill="rgb(230,47,54)" fg:x="85956" fg:w="23"/><text x="99.0421%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (24 samples, 0.03%)</title><rect x="98.7921%" y="469" width="0.0276%" height="15" fill="rgb(214,50,8)" fg:x="85956" fg:w="24"/><text x="99.0421%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (24 samples, 0.03%)</title><rect x="98.7921%" y="453" width="0.0276%" height="15" fill="rgb(216,198,43)" fg:x="85956" fg:w="24"/><text x="99.0421%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.03%)</title><rect x="98.7921%" y="437" width="0.0276%" height="15" fill="rgb(234,20,35)" fg:x="85956" fg:w="24"/><text x="99.0421%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (147 samples, 0.17%)</title><rect x="98.6530%" y="485" width="0.1690%" height="15" fill="rgb(254,45,19)" fg:x="85835" fg:w="147"/><text x="98.9030%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (155 samples, 0.18%)</title><rect x="98.6507%" y="501" width="0.1781%" height="15" fill="rgb(219,14,44)" fg:x="85833" fg:w="155"/><text x="98.9007%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.03%)</title><rect x="98.8346%" y="309" width="0.0310%" height="15" fill="rgb(217,220,26)" fg:x="85993" fg:w="27"/><text x="99.0846%" y="319.50"></text></g><g><title>libsystem_m.dylib`exp (24 samples, 0.03%)</title><rect x="98.8380%" y="293" width="0.0276%" height="15" fill="rgb(213,158,28)" fg:x="85996" fg:w="24"/><text x="99.0880%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (29 samples, 0.03%)</title><rect x="98.8334%" y="389" width="0.0333%" height="15" fill="rgb(252,51,52)" fg:x="85992" fg:w="29"/><text x="99.0834%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.03%)</title><rect x="98.8334%" y="373" width="0.0333%" height="15" fill="rgb(246,89,16)" fg:x="85992" fg:w="29"/><text x="99.0834%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (29 samples, 0.03%)</title><rect x="98.8334%" y="357" width="0.0333%" height="15" fill="rgb(216,158,49)" fg:x="85992" fg:w="29"/><text x="99.0834%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.03%)</title><rect x="98.8334%" y="341" width="0.0333%" height="15" fill="rgb(236,107,19)" fg:x="85992" fg:w="29"/><text x="99.0834%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (29 samples, 0.03%)</title><rect x="98.8334%" y="325" width="0.0333%" height="15" fill="rgb(228,185,30)" fg:x="85992" fg:w="29"/><text x="99.0834%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (32 samples, 0.04%)</title><rect x="98.8323%" y="421" width="0.0368%" height="15" fill="rgb(246,134,8)" fg:x="85991" fg:w="32"/><text x="99.0823%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.04%)</title><rect x="98.8323%" y="405" width="0.0368%" height="15" fill="rgb(214,143,50)" fg:x="85991" fg:w="32"/><text x="99.0823%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.04%)</title><rect x="98.8288%" y="437" width="0.0437%" height="15" fill="rgb(228,75,8)" fg:x="85988" fg:w="38"/><text x="99.0788%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (43 samples, 0.05%)</title><rect x="98.8288%" y="485" width="0.0494%" height="15" fill="rgb(207,175,4)" fg:x="85988" fg:w="43"/><text x="99.0788%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (43 samples, 0.05%)</title><rect x="98.8288%" y="469" width="0.0494%" height="15" fill="rgb(205,108,24)" fg:x="85988" fg:w="43"/><text x="99.0788%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (43 samples, 0.05%)</title><rect x="98.8288%" y="453" width="0.0494%" height="15" fill="rgb(244,120,49)" fg:x="85988" fg:w="43"/><text x="99.0788%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (199 samples, 0.23%)</title><rect x="98.6507%" y="517" width="0.2287%" height="15" fill="rgb(223,47,38)" fg:x="85833" fg:w="199"/><text x="98.9007%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (44 samples, 0.05%)</title><rect x="98.8288%" y="501" width="0.0506%" height="15" fill="rgb(229,179,11)" fg:x="85988" fg:w="44"/><text x="99.0788%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (201 samples, 0.23%)</title><rect x="98.6507%" y="549" width="0.2310%" height="15" fill="rgb(231,122,1)" fg:x="85833" fg:w="201"/><text x="98.9007%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (201 samples, 0.23%)</title><rect x="98.6507%" y="533" width="0.2310%" height="15" fill="rgb(245,119,9)" fg:x="85833" fg:w="201"/><text x="98.9007%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (975 samples, 1.12%)</title><rect x="97.7634%" y="581" width="1.1206%" height="15" fill="rgb(241,163,25)" fg:x="85061" fg:w="975"/><text x="98.0134%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (203 samples, 0.23%)</title><rect x="98.6507%" y="565" width="0.2333%" height="15" fill="rgb(217,214,3)" fg:x="85833" fg:w="203"/><text x="98.9007%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (980 samples, 1.13%)</title><rect x="97.7622%" y="613" width="1.1263%" height="15" fill="rgb(240,86,28)" fg:x="85060" fg:w="980"/><text x="98.0122%" y="623.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (979 samples, 1.13%)</title><rect x="97.7634%" y="597" width="1.1252%" height="15" fill="rgb(215,47,9)" fg:x="85061" fg:w="979"/><text x="98.0134%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (6,159 samples, 7.08%)</title><rect x="91.8145%" y="645" width="7.0787%" height="15" fill="rgb(252,25,45)" fg:x="79885" fg:w="6159"/><text x="92.0645%" y="655.50">cpu_bench..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (984 samples, 1.13%)</title><rect x="97.7622%" y="629" width="1.1309%" height="15" fill="rgb(251,164,9)" fg:x="85060" fg:w="984"/><text x="98.0122%" y="639.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (6,166 samples, 7.09%)</title><rect x="91.8133%" y="661" width="7.0868%" height="15" fill="rgb(233,194,0)" fg:x="79884" fg:w="6166"/><text x="92.0633%" y="671.50">cpu_bench_..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (16 samples, 0.02%)</title><rect x="98.9081%" y="597" width="0.0184%" height="15" fill="rgb(249,111,24)" fg:x="86057" fg:w="16"/><text x="99.1581%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="98.9127%" y="581" width="0.0138%" height="15" fill="rgb(250,223,3)" fg:x="86061" fg:w="12"/><text x="99.1627%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (25 samples, 0.03%)</title><rect x="98.9024%" y="629" width="0.0287%" height="15" fill="rgb(236,178,37)" fg:x="86052" fg:w="25"/><text x="99.1524%" y="639.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="98.9081%" y="613" width="0.0230%" height="15" fill="rgb(241,158,50)" fg:x="86057" fg:w="20"/><text x="99.1581%" y="623.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (34 samples, 0.04%)</title><rect x="98.9001%" y="661" width="0.0391%" height="15" fill="rgb(213,121,41)" fg:x="86050" fg:w="34"/><text x="99.1501%" y="671.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (32 samples, 0.04%)</title><rect x="98.9024%" y="645" width="0.0368%" height="15" fill="rgb(240,92,3)" fg:x="86052" fg:w="32"/><text x="99.1524%" y="655.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (22 samples, 0.03%)</title><rect x="98.9403%" y="485" width="0.0253%" height="15" fill="rgb(205,123,3)" fg:x="86085" fg:w="22"/><text x="99.1903%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (49 samples, 0.06%)</title><rect x="99.0415%" y="421" width="0.0563%" height="15" fill="rgb(205,97,47)" fg:x="86173" fg:w="49"/><text x="99.2915%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (32 samples, 0.04%)</title><rect x="99.0610%" y="405" width="0.0368%" height="15" fill="rgb(247,152,14)" fg:x="86190" fg:w="32"/><text x="99.3110%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (55 samples, 0.06%)</title><rect x="99.0392%" y="437" width="0.0632%" height="15" fill="rgb(248,195,53)" fg:x="86171" fg:w="55"/><text x="99.2892%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (10 samples, 0.01%)</title><rect x="99.1035%" y="437" width="0.0115%" height="15" fill="rgb(226,201,16)" fg:x="86227" fg:w="10"/><text x="99.3535%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 0.08%)</title><rect x="99.0380%" y="453" width="0.0782%" height="15" fill="rgb(205,98,0)" fg:x="86170" fg:w="68"/><text x="99.2880%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (9 samples, 0.01%)</title><rect x="99.1277%" y="437" width="0.0103%" height="15" fill="rgb(214,191,48)" fg:x="86248" fg:w="9"/><text x="99.3777%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (101 samples, 0.12%)</title><rect x="99.0380%" y="469" width="0.1161%" height="15" fill="rgb(237,112,39)" fg:x="86170" fg:w="101"/><text x="99.2880%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (33 samples, 0.04%)</title><rect x="99.1162%" y="453" width="0.0379%" height="15" fill="rgb(247,203,27)" fg:x="86238" fg:w="33"/><text x="99.3662%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (14 samples, 0.02%)</title><rect x="99.1380%" y="437" width="0.0161%" height="15" fill="rgb(235,124,28)" fg:x="86257" fg:w="14"/><text x="99.3880%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (401 samples, 0.46%)</title><rect x="98.9656%" y="485" width="0.4609%" height="15" fill="rgb(208,207,46)" fg:x="86107" fg:w="401"/><text x="99.2156%" y="495.50"></text></g><g><title>libsystem_m.dylib`exp (237 samples, 0.27%)</title><rect x="99.1541%" y="469" width="0.2724%" height="15" fill="rgb(234,176,4)" fg:x="86271" fg:w="237"/><text x="99.4041%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="99.4265%" y="485" width="0.0103%" height="15" fill="rgb(230,133,28)" fg:x="86508" fg:w="9"/><text x="99.6765%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="99.4265%" y="469" width="0.0103%" height="15" fill="rgb(211,137,40)" fg:x="86508" fg:w="9"/><text x="99.6765%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="99.4265%" y="453" width="0.0103%" height="15" fill="rgb(254,35,13)" fg:x="86508" fg:w="9"/><text x="99.6765%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (9 samples, 0.01%)</title><rect x="99.4265%" y="437" width="0.0103%" height="15" fill="rgb(225,49,51)" fg:x="86508" fg:w="9"/><text x="99.6765%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (20 samples, 0.02%)</title><rect x="99.4495%" y="277" width="0.0230%" height="15" fill="rgb(251,10,15)" fg:x="86528" fg:w="20"/><text x="99.6995%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.02%)</title><rect x="99.4495%" y="261" width="0.0230%" height="15" fill="rgb(228,207,15)" fg:x="86528" fg:w="20"/><text x="99.6995%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (20 samples, 0.02%)</title><rect x="99.4495%" y="245" width="0.0230%" height="15" fill="rgb(241,99,19)" fg:x="86528" fg:w="20"/><text x="99.6995%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (20 samples, 0.02%)</title><rect x="99.4495%" y="229" width="0.0230%" height="15" fill="rgb(207,104,49)" fg:x="86528" fg:w="20"/><text x="99.6995%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (63 samples, 0.07%)</title><rect x="99.4391%" y="293" width="0.0724%" height="15" fill="rgb(234,99,18)" fg:x="86519" fg:w="63"/><text x="99.6891%" y="303.50"></text></g><g><title>libsystem_m.dylib`exp (34 samples, 0.04%)</title><rect x="99.4725%" y="277" width="0.0391%" height="15" fill="rgb(213,191,49)" fg:x="86548" fg:w="34"/><text x="99.7225%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (68 samples, 0.08%)</title><rect x="99.4368%" y="309" width="0.0782%" height="15" fill="rgb(210,226,19)" fg:x="86517" fg:w="68"/><text x="99.6868%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (72 samples, 0.08%)</title><rect x="99.4368%" y="325" width="0.0828%" height="15" fill="rgb(229,97,18)" fg:x="86517" fg:w="72"/><text x="99.6868%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (83 samples, 0.10%)</title><rect x="99.4368%" y="341" width="0.0954%" height="15" fill="rgb(211,167,15)" fg:x="86517" fg:w="83"/><text x="99.6868%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.01%)</title><rect x="99.5196%" y="325" width="0.0126%" height="15" fill="rgb(210,169,34)" fg:x="86589" fg:w="11"/><text x="99.7696%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11 samples, 0.01%)</title><rect x="99.5196%" y="309" width="0.0126%" height="15" fill="rgb(241,121,31)" fg:x="86589" fg:w="11"/><text x="99.7696%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.5196%" y="293" width="0.0126%" height="15" fill="rgb(232,40,11)" fg:x="86589" fg:w="11"/><text x="99.7696%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="99.5196%" y="277" width="0.0126%" height="15" fill="rgb(205,86,26)" fg:x="86589" fg:w="11"/><text x="99.7696%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (84 samples, 0.10%)</title><rect x="99.4368%" y="357" width="0.0965%" height="15" fill="rgb(231,126,28)" fg:x="86517" fg:w="84"/><text x="99.6868%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (103 samples, 0.12%)</title><rect x="99.4368%" y="389" width="0.1184%" height="15" fill="rgb(219,221,18)" fg:x="86517" fg:w="103"/><text x="99.6868%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (103 samples, 0.12%)</title><rect x="99.4368%" y="373" width="0.1184%" height="15" fill="rgb(211,40,0)" fg:x="86517" fg:w="103"/><text x="99.6868%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (19 samples, 0.02%)</title><rect x="99.5334%" y="357" width="0.0218%" height="15" fill="rgb(239,85,43)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (19 samples, 0.02%)</title><rect x="99.5334%" y="341" width="0.0218%" height="15" fill="rgb(231,55,21)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="99.5334%" y="325" width="0.0218%" height="15" fill="rgb(225,184,43)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.02%)</title><rect x="99.5334%" y="309" width="0.0218%" height="15" fill="rgb(251,158,41)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="99.5334%" y="293" width="0.0218%" height="15" fill="rgb(234,159,37)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.02%)</title><rect x="99.5334%" y="277" width="0.0218%" height="15" fill="rgb(216,204,22)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="99.5334%" y="261" width="0.0218%" height="15" fill="rgb(214,17,3)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.02%)</title><rect x="99.5334%" y="245" width="0.0218%" height="15" fill="rgb(212,111,17)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="99.5334%" y="229" width="0.0218%" height="15" fill="rgb(221,157,24)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.02%)</title><rect x="99.5334%" y="213" width="0.0218%" height="15" fill="rgb(252,16,13)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="99.5334%" y="197" width="0.0218%" height="15" fill="rgb(221,62,2)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.02%)</title><rect x="99.5334%" y="181" width="0.0218%" height="15" fill="rgb(247,87,22)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="99.5334%" y="165" width="0.0218%" height="15" fill="rgb(215,73,9)" fg:x="86601" fg:w="19"/><text x="99.7834%" y="175.50"></text></g><g><title>libsystem_m.dylib`exp (13 samples, 0.01%)</title><rect x="99.5403%" y="149" width="0.0149%" height="15" fill="rgb(207,175,33)" fg:x="86607" fg:w="13"/><text x="99.7903%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (104 samples, 0.12%)</title><rect x="99.4368%" y="421" width="0.1195%" height="15" fill="rgb(243,129,54)" fg:x="86517" fg:w="104"/><text x="99.6868%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (104 samples, 0.12%)</title><rect x="99.4368%" y="405" width="0.1195%" height="15" fill="rgb(227,119,45)" fg:x="86517" fg:w="104"/><text x="99.6868%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="99.5564%" y="261" width="0.0115%" height="15" fill="rgb(205,109,36)" fg:x="86621" fg:w="10"/><text x="99.8064%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (116 samples, 0.13%)</title><rect x="99.4368%" y="437" width="0.1333%" height="15" fill="rgb(205,6,39)" fg:x="86517" fg:w="116"/><text x="99.6868%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (12 samples, 0.01%)</title><rect x="99.5564%" y="421" width="0.0138%" height="15" fill="rgb(221,32,16)" fg:x="86621" fg:w="12"/><text x="99.8064%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (12 samples, 0.01%)</title><rect x="99.5564%" y="405" width="0.0138%" height="15" fill="rgb(228,144,50)" fg:x="86621" fg:w="12"/><text x="99.8064%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="99.5564%" y="389" width="0.0138%" height="15" fill="rgb(229,201,53)" fg:x="86621" fg:w="12"/><text x="99.8064%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="99.5564%" y="373" width="0.0138%" height="15" fill="rgb(249,153,27)" fg:x="86621" fg:w="12"/><text x="99.8064%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="99.5564%" y="357" width="0.0138%" height="15" fill="rgb(227,106,25)" fg:x="86621" fg:w="12"/><text x="99.8064%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="99.5564%" y="341" width="0.0138%" height="15" fill="rgb(230,65,29)" fg:x="86621" fg:w="12"/><text x="99.8064%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="99.5564%" y="325" width="0.0138%" height="15" fill="rgb(221,57,46)" fg:x="86621" fg:w="12"/><text x="99.8064%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="99.5564%" y="309" width="0.0138%" height="15" fill="rgb(229,161,17)" fg:x="86621" fg:w="12"/><text x="99.8064%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="99.5564%" y="293" width="0.0138%" height="15" fill="rgb(222,213,11)" fg:x="86621" fg:w="12"/><text x="99.8064%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="99.5564%" y="277" width="0.0138%" height="15" fill="rgb(235,35,13)" fg:x="86621" fg:w="12"/><text x="99.8064%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (117 samples, 0.13%)</title><rect x="99.4368%" y="485" width="0.1345%" height="15" fill="rgb(233,158,34)" fg:x="86517" fg:w="117"/><text x="99.6868%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (117 samples, 0.13%)</title><rect x="99.4368%" y="469" width="0.1345%" height="15" fill="rgb(215,151,48)" fg:x="86517" fg:w="117"/><text x="99.6868%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (117 samples, 0.13%)</title><rect x="99.4368%" y="453" width="0.1345%" height="15" fill="rgb(229,84,14)" fg:x="86517" fg:w="117"/><text x="99.6868%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (560 samples, 0.64%)</title><rect x="98.9403%" y="517" width="0.6436%" height="15" fill="rgb(229,68,14)" fg:x="86085" fg:w="560"/><text x="99.1903%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (560 samples, 0.64%)</title><rect x="98.9403%" y="501" width="0.6436%" height="15" fill="rgb(243,106,26)" fg:x="86085" fg:w="560"/><text x="99.1903%" y="511.50"></text></g><g><title>libsystem_m.dylib`exp (11 samples, 0.01%)</title><rect x="99.5713%" y="485" width="0.0126%" height="15" fill="rgb(206,45,38)" fg:x="86634" fg:w="11"/><text x="99.8213%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (13 samples, 0.01%)</title><rect x="99.5931%" y="389" width="0.0149%" height="15" fill="rgb(226,6,15)" fg:x="86653" fg:w="13"/><text x="99.8431%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (14 samples, 0.02%)</title><rect x="99.5931%" y="405" width="0.0161%" height="15" fill="rgb(232,22,54)" fg:x="86653" fg:w="14"/><text x="99.8431%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (24 samples, 0.03%)</title><rect x="99.5839%" y="517" width="0.0276%" height="15" fill="rgb(229,222,32)" fg:x="86645" fg:w="24"/><text x="99.8339%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.03%)</title><rect x="99.5839%" y="501" width="0.0276%" height="15" fill="rgb(228,62,29)" fg:x="86645" fg:w="24"/><text x="99.8339%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (24 samples, 0.03%)</title><rect x="99.5839%" y="485" width="0.0276%" height="15" fill="rgb(251,103,34)" fg:x="86645" fg:w="24"/><text x="99.8339%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (16 samples, 0.02%)</title><rect x="99.5931%" y="469" width="0.0184%" height="15" fill="rgb(233,12,30)" fg:x="86653" fg:w="16"/><text x="99.8431%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="99.5931%" y="453" width="0.0184%" height="15" fill="rgb(238,52,0)" fg:x="86653" fg:w="16"/><text x="99.8431%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.02%)</title><rect x="99.5931%" y="437" width="0.0184%" height="15" fill="rgb(223,98,5)" fg:x="86653" fg:w="16"/><text x="99.8431%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (16 samples, 0.02%)</title><rect x="99.5931%" y="421" width="0.0184%" height="15" fill="rgb(228,75,37)" fg:x="86653" fg:w="16"/><text x="99.8431%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (28 samples, 0.03%)</title><rect x="99.6219%" y="341" width="0.0322%" height="15" fill="rgb(205,115,49)" fg:x="86678" fg:w="28"/><text x="99.8719%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.03%)</title><rect x="99.6242%" y="325" width="0.0299%" height="15" fill="rgb(250,154,43)" fg:x="86680" fg:w="26"/><text x="99.8742%" y="335.50"></text></g><g><title>libsystem_m.dylib`exp (19 samples, 0.02%)</title><rect x="99.6322%" y="309" width="0.0218%" height="15" fill="rgb(226,43,29)" fg:x="86687" fg:w="19"/><text x="99.8822%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (34 samples, 0.04%)</title><rect x="99.6161%" y="373" width="0.0391%" height="15" fill="rgb(249,228,39)" fg:x="86673" fg:w="34"/><text x="99.8661%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.04%)</title><rect x="99.6161%" y="357" width="0.0391%" height="15" fill="rgb(216,79,43)" fg:x="86673" fg:w="34"/><text x="99.8661%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (38 samples, 0.04%)</title><rect x="99.6150%" y="405" width="0.0437%" height="15" fill="rgb(228,95,12)" fg:x="86672" fg:w="38"/><text x="99.8650%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.04%)</title><rect x="99.6150%" y="389" width="0.0437%" height="15" fill="rgb(249,221,15)" fg:x="86672" fg:w="38"/><text x="99.8650%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (43 samples, 0.05%)</title><rect x="99.6138%" y="437" width="0.0494%" height="15" fill="rgb(233,34,13)" fg:x="86671" fg:w="43"/><text x="99.8638%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (43 samples, 0.05%)</title><rect x="99.6138%" y="421" width="0.0494%" height="15" fill="rgb(214,103,39)" fg:x="86671" fg:w="43"/><text x="99.8638%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.06%)</title><rect x="99.6127%" y="453" width="0.0563%" height="15" fill="rgb(251,126,39)" fg:x="86670" fg:w="49"/><text x="99.8627%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (52 samples, 0.06%)</title><rect x="99.6127%" y="469" width="0.0598%" height="15" fill="rgb(214,216,36)" fg:x="86670" fg:w="52"/><text x="99.8627%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (638 samples, 0.73%)</title><rect x="98.9403%" y="549" width="0.7333%" height="15" fill="rgb(220,221,8)" fg:x="86085" fg:w="638"/><text x="99.1903%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (638 samples, 0.73%)</title><rect x="98.9403%" y="533" width="0.7333%" height="15" fill="rgb(240,216,3)" fg:x="86085" fg:w="638"/><text x="99.1903%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (54 samples, 0.06%)</title><rect x="99.6115%" y="517" width="0.0621%" height="15" fill="rgb(232,218,17)" fg:x="86669" fg:w="54"/><text x="99.8615%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (54 samples, 0.06%)</title><rect x="99.6115%" y="501" width="0.0621%" height="15" fill="rgb(229,163,45)" fg:x="86669" fg:w="54"/><text x="99.8615%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (54 samples, 0.06%)</title><rect x="99.6115%" y="485" width="0.0621%" height="15" fill="rgb(231,110,42)" fg:x="86669" fg:w="54"/><text x="99.8615%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (11 samples, 0.01%)</title><rect x="99.6736%" y="421" width="0.0126%" height="15" fill="rgb(208,170,48)" fg:x="86723" fg:w="11"/><text x="99.9236%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (10 samples, 0.01%)</title><rect x="99.6747%" y="405" width="0.0115%" height="15" fill="rgb(239,116,25)" fg:x="86724" fg:w="10"/><text x="99.9247%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="99.6736%" y="469" width="0.0138%" height="15" fill="rgb(219,200,50)" fg:x="86723" fg:w="12"/><text x="99.9236%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.01%)</title><rect x="99.6736%" y="453" width="0.0138%" height="15" fill="rgb(245,200,0)" fg:x="86723" fg:w="12"/><text x="99.9236%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.01%)</title><rect x="99.6736%" y="437" width="0.0138%" height="15" fill="rgb(245,119,33)" fg:x="86723" fg:w="12"/><text x="99.9236%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.02%)</title><rect x="99.6736%" y="501" width="0.0230%" height="15" fill="rgb(231,125,12)" fg:x="86723" fg:w="20"/><text x="99.9236%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="99.6736%" y="485" width="0.0230%" height="15" fill="rgb(216,96,41)" fg:x="86723" fg:w="20"/><text x="99.9236%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="99.6989%" y="437" width="0.0184%" height="15" fill="rgb(248,43,45)" fg:x="86745" fg:w="16"/><text x="99.9489%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (15 samples, 0.02%)</title><rect x="99.7000%" y="421" width="0.0172%" height="15" fill="rgb(217,222,7)" fg:x="86746" fg:w="15"/><text x="99.9500%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (49 samples, 0.06%)</title><rect x="99.6736%" y="549" width="0.0563%" height="15" fill="rgb(233,28,6)" fg:x="86723" fg:w="49"/><text x="99.9236%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.06%)</title><rect x="99.6736%" y="533" width="0.0563%" height="15" fill="rgb(231,218,15)" fg:x="86723" fg:w="49"/><text x="99.9236%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (49 samples, 0.06%)</title><rect x="99.6736%" y="517" width="0.0563%" height="15" fill="rgb(226,171,48)" fg:x="86723" fg:w="49"/><text x="99.9236%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (29 samples, 0.03%)</title><rect x="99.6966%" y="501" width="0.0333%" height="15" fill="rgb(235,201,9)" fg:x="86743" fg:w="29"/><text x="99.9466%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (29 samples, 0.03%)</title><rect x="99.6966%" y="485" width="0.0333%" height="15" fill="rgb(217,80,15)" fg:x="86743" fg:w="29"/><text x="99.9466%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.03%)</title><rect x="99.6966%" y="469" width="0.0333%" height="15" fill="rgb(219,152,8)" fg:x="86743" fg:w="29"/><text x="99.9466%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (27 samples, 0.03%)</title><rect x="99.6989%" y="453" width="0.0310%" height="15" fill="rgb(243,107,38)" fg:x="86745" fg:w="27"/><text x="99.9489%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (18 samples, 0.02%)</title><rect x="99.7713%" y="293" width="0.0207%" height="15" fill="rgb(231,17,5)" fg:x="86808" fg:w="18"/><text x="100.0213%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (10 samples, 0.01%)</title><rect x="99.7805%" y="277" width="0.0115%" height="15" fill="rgb(209,25,54)" fg:x="86816" fg:w="10"/><text x="100.0305%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (21 samples, 0.02%)</title><rect x="99.7690%" y="309" width="0.0241%" height="15" fill="rgb(219,0,2)" fg:x="86806" fg:w="21"/><text x="100.0190%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (26 samples, 0.03%)</title><rect x="99.7690%" y="341" width="0.0299%" height="15" fill="rgb(246,9,5)" fg:x="86806" fg:w="26"/><text x="100.0190%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="99.7690%" y="325" width="0.0299%" height="15" fill="rgb(226,159,4)" fg:x="86806" fg:w="26"/><text x="100.0190%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (43 samples, 0.05%)</title><rect x="99.7644%" y="357" width="0.0494%" height="15" fill="rgb(219,175,34)" fg:x="86802" fg:w="43"/><text x="100.0144%" y="367.50"></text></g><g><title>libsystem_m.dylib`exp (13 samples, 0.01%)</title><rect x="99.7989%" y="341" width="0.0149%" height="15" fill="rgb(236,10,46)" fg:x="86832" fg:w="13"/><text x="100.0489%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (48 samples, 0.06%)</title><rect x="99.7598%" y="373" width="0.0552%" height="15" fill="rgb(240,211,16)" fg:x="86798" fg:w="48"/><text x="100.0098%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (93 samples, 0.11%)</title><rect x="99.7391%" y="389" width="0.1069%" height="15" fill="rgb(205,3,43)" fg:x="86780" fg:w="93"/><text x="99.9891%" y="399.50"></text></g><g><title>libsystem_m.dylib`exp (27 samples, 0.03%)</title><rect x="99.8150%" y="373" width="0.0310%" height="15" fill="rgb(245,7,22)" fg:x="86846" fg:w="27"/><text x="100.0650%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (96 samples, 0.11%)</title><rect x="99.7368%" y="405" width="0.1103%" height="15" fill="rgb(239,132,32)" fg:x="86778" fg:w="96"/><text x="99.9868%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (107 samples, 0.12%)</title><rect x="99.7322%" y="421" width="0.1230%" height="15" fill="rgb(228,202,34)" fg:x="86774" fg:w="107"/><text x="99.9822%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.01%)</title><rect x="99.8552%" y="421" width="0.0115%" height="15" fill="rgb(254,200,22)" fg:x="86881" fg:w="10"/><text x="100.1052%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.01%)</title><rect x="99.8552%" y="405" width="0.0115%" height="15" fill="rgb(219,10,39)" fg:x="86881" fg:w="10"/><text x="100.1052%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="99.8552%" y="389" width="0.0115%" height="15" fill="rgb(226,210,39)" fg:x="86881" fg:w="10"/><text x="100.1052%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="99.8552%" y="373" width="0.0115%" height="15" fill="rgb(208,219,16)" fg:x="86881" fg:w="10"/><text x="100.1052%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (120 samples, 0.14%)</title><rect x="99.7299%" y="437" width="0.1379%" height="15" fill="rgb(216,158,51)" fg:x="86772" fg:w="120"/><text x="99.9799%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (122 samples, 0.14%)</title><rect x="99.7299%" y="453" width="0.1402%" height="15" fill="rgb(233,14,44)" fg:x="86772" fg:w="122"/><text x="99.9799%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (130 samples, 0.15%)</title><rect x="99.7299%" y="469" width="0.1494%" height="15" fill="rgb(237,97,39)" fg:x="86772" fg:w="130"/><text x="99.9799%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (134 samples, 0.15%)</title><rect x="99.7299%" y="485" width="0.1540%" height="15" fill="rgb(218,198,43)" fg:x="86772" fg:w="134"/><text x="99.9799%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.8862%" y="325" width="0.0126%" height="15" fill="rgb(231,104,20)" fg:x="86908" fg:w="11"/><text x="100.1362%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="99.8862%" y="309" width="0.0126%" height="15" fill="rgb(254,36,13)" fg:x="86908" fg:w="11"/><text x="100.1362%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.8862%" y="293" width="0.0126%" height="15" fill="rgb(248,14,50)" fg:x="86908" fg:w="11"/><text x="100.1362%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="99.8862%" y="341" width="0.0138%" height="15" fill="rgb(217,107,29)" fg:x="86908" fg:w="12"/><text x="100.1362%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="99.8862%" y="357" width="0.0184%" height="15" fill="rgb(251,169,33)" fg:x="86908" fg:w="16"/><text x="100.1362%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (17 samples, 0.02%)</title><rect x="99.8862%" y="373" width="0.0195%" height="15" fill="rgb(217,108,32)" fg:x="86908" fg:w="17"/><text x="100.1362%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="99.8851%" y="389" width="0.0218%" height="15" fill="rgb(219,66,42)" fg:x="86907" fg:w="19"/><text x="100.1351%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="99.8851%" y="405" width="0.0264%" height="15" fill="rgb(206,180,7)" fg:x="86907" fg:w="23"/><text x="100.1351%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="99.8839%" y="421" width="0.0287%" height="15" fill="rgb(208,226,31)" fg:x="86906" fg:w="25"/><text x="100.1339%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (27 samples, 0.03%)</title><rect x="99.8839%" y="485" width="0.0310%" height="15" fill="rgb(218,26,49)" fg:x="86906" fg:w="27"/><text x="100.1339%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (27 samples, 0.03%)</title><rect x="99.8839%" y="469" width="0.0310%" height="15" fill="rgb(233,197,48)" fg:x="86906" fg:w="27"/><text x="100.1339%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.03%)</title><rect x="99.8839%" y="453" width="0.0310%" height="15" fill="rgb(252,181,51)" fg:x="86906" fg:w="27"/><text x="100.1339%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (27 samples, 0.03%)</title><rect x="99.8839%" y="437" width="0.0310%" height="15" fill="rgb(253,90,19)" fg:x="86906" fg:w="27"/><text x="100.1339%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (850 samples, 0.98%)</title><rect x="98.9392%" y="581" width="0.9769%" height="15" fill="rgb(215,171,30)" fg:x="86084" fg:w="850"/><text x="99.1892%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (849 samples, 0.98%)</title><rect x="98.9403%" y="565" width="0.9758%" height="15" fill="rgb(214,222,9)" fg:x="86085" fg:w="849"/><text x="99.1903%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (162 samples, 0.19%)</title><rect x="99.7299%" y="549" width="0.1862%" height="15" fill="rgb(223,3,22)" fg:x="86772" fg:w="162"/><text x="99.9799%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (162 samples, 0.19%)</title><rect x="99.7299%" y="533" width="0.1862%" height="15" fill="rgb(225,196,46)" fg:x="86772" fg:w="162"/><text x="99.9799%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (162 samples, 0.19%)</title><rect x="99.7299%" y="517" width="0.1862%" height="15" fill="rgb(209,110,37)" fg:x="86772" fg:w="162"/><text x="99.9799%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (162 samples, 0.19%)</title><rect x="99.7299%" y="501" width="0.1862%" height="15" fill="rgb(249,89,12)" fg:x="86772" fg:w="162"/><text x="99.9799%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="99.9184%" y="421" width="0.0184%" height="15" fill="rgb(226,27,33)" fg:x="86936" fg:w="16"/><text x="100.1684%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="99.9184%" y="405" width="0.0184%" height="15" fill="rgb(213,82,22)" fg:x="86936" fg:w="16"/><text x="100.1684%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="99.9184%" y="389" width="0.0184%" height="15" fill="rgb(248,140,0)" fg:x="86936" fg:w="16"/><text x="100.1684%" y="399.50"></text></g><g><title>libsystem_m.dylib`exp (9 samples, 0.01%)</title><rect x="99.9264%" y="373" width="0.0103%" height="15" fill="rgb(228,106,3)" fg:x="86943" fg:w="9"/><text x="100.1764%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (17 samples, 0.02%)</title><rect x="99.9184%" y="437" width="0.0195%" height="15" fill="rgb(209,23,37)" fg:x="86936" fg:w="17"/><text x="100.1684%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.02%)</title><rect x="99.9161%" y="517" width="0.0230%" height="15" fill="rgb(241,93,50)" fg:x="86934" fg:w="20"/><text x="100.1661%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="99.9161%" y="501" width="0.0230%" height="15" fill="rgb(253,46,43)" fg:x="86934" fg:w="20"/><text x="100.1661%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.02%)</title><rect x="99.9161%" y="485" width="0.0230%" height="15" fill="rgb(226,206,43)" fg:x="86934" fg:w="20"/><text x="100.1661%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="99.9161%" y="469" width="0.0230%" height="15" fill="rgb(217,54,7)" fg:x="86934" fg:w="20"/><text x="100.1661%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="99.9184%" y="453" width="0.0207%" height="15" fill="rgb(223,5,52)" fg:x="86936" fg:w="18"/><text x="100.1684%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (875 samples, 1.01%)</title><rect x="98.9392%" y="613" width="1.0057%" height="15" fill="rgb(206,52,46)" fg:x="86084" fg:w="875"/><text x="99.1892%" y="623.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (875 samples, 1.01%)</title><rect x="98.9392%" y="597" width="1.0057%" height="15" fill="rgb(253,136,11)" fg:x="86084" fg:w="875"/><text x="99.1892%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 0.03%)</title><rect x="99.9161%" y="581" width="0.0287%" height="15" fill="rgb(208,106,33)" fg:x="86934" fg:w="25"/><text x="100.1661%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.03%)</title><rect x="99.9161%" y="565" width="0.0287%" height="15" fill="rgb(206,54,4)" fg:x="86934" fg:w="25"/><text x="100.1661%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="99.9161%" y="549" width="0.0287%" height="15" fill="rgb(213,3,15)" fg:x="86934" fg:w="25"/><text x="100.1661%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (25 samples, 0.03%)</title><rect x="99.9161%" y="533" width="0.0287%" height="15" fill="rgb(252,211,39)" fg:x="86934" fg:w="25"/><text x="100.1661%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (885 samples, 1.02%)</title><rect x="98.9392%" y="645" width="1.0172%" height="15" fill="rgb(223,6,36)" fg:x="86084" fg:w="885"/><text x="99.1892%" y="655.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (885 samples, 1.02%)</title><rect x="98.9392%" y="629" width="1.0172%" height="15" fill="rgb(252,169,45)" fg:x="86084" fg:w="885"/><text x="99.1892%" y="639.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.01%)</title><rect x="99.9448%" y="613" width="0.0115%" height="15" fill="rgb(212,48,26)" fg:x="86959" fg:w="10"/><text x="100.1948%" y="623.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.01%)</title><rect x="99.9448%" y="597" width="0.0115%" height="15" fill="rgb(251,102,48)" fg:x="86959" fg:w="10"/><text x="100.1948%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="99.9448%" y="581" width="0.0115%" height="15" fill="rgb(243,208,16)" fg:x="86959" fg:w="10"/><text x="100.1948%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="99.9448%" y="565" width="0.0115%" height="15" fill="rgb(219,96,24)" fg:x="86959" fg:w="10"/><text x="100.1948%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (891 samples, 1.02%)</title><rect x="98.9392%" y="661" width="1.0241%" height="15" fill="rgb(219,33,29)" fg:x="86084" fg:w="891"/><text x="99.1892%" y="671.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (7,094 samples, 8.15%)</title><rect x="91.8110%" y="677" width="8.1534%" height="15" fill="rgb(223,176,5)" fg:x="79882" fg:w="7094"/><text x="92.0610%" y="687.50">cpu_bench_v..</text></g><g><title>all (87,007 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(228,140,14)" fg:x="0" fg:w="87007"/><text x="0.2500%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (7,125 samples, 8.19%)</title><rect x="91.8110%" y="789" width="8.1890%" height="15" fill="rgb(217,179,31)" fg:x="79882" fg:w="7125"/><text x="92.0610%" y="799.50">libsystem_p..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (7,125 samples, 8.19%)</title><rect x="91.8110%" y="773" width="8.1890%" height="15" fill="rgb(230,9,30)" fg:x="79882" fg:w="7125"/><text x="92.0610%" y="783.50">libsystem_p..</text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys::unix::thread::Thread::new::thread_start (7,125 samples, 8.19%)</title><rect x="91.8110%" y="757" width="8.1890%" height="15" fill="rgb(230,136,20)" fg:x="79882" fg:w="7125"/><text x="92.0610%" y="767.50">cpu_bench_v..</text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::FnOnce::call_once{{vtable.shim}} (7,125 samples, 8.19%)</title><rect x="91.8110%" y="741" width="8.1890%" height="15" fill="rgb(215,210,22)" fg:x="79882" fg:w="7125"/><text x="92.0610%" y="751.50">cpu_bench_v..</text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys_common::backtrace::__rust_begin_short_backtrace (7,125 samples, 8.19%)</title><rect x="91.8110%" y="725" width="8.1890%" height="15" fill="rgb(218,43,5)" fg:x="79882" fg:w="7125"/><text x="92.0610%" y="735.50">cpu_bench_v..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::ThreadBuilder::run (7,125 samples, 8.19%)</title><rect x="91.8110%" y="709" width="8.1890%" height="15" fill="rgb(216,11,5)" fg:x="79882" fg:w="7125"/><text x="92.0610%" y="719.50">cpu_bench_v..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (7,125 samples, 8.19%)</title><rect x="91.8110%" y="693" width="8.1890%" height="15" fill="rgb(209,82,29)" fg:x="79882" fg:w="7125"/><text x="92.0610%" y="703.50">cpu_bench_v..</text></g><g><title>libsystem_kernel.dylib`swtch_pri (23 samples, 0.03%)</title><rect x="99.9736%" y="677" width="0.0264%" height="15" fill="rgb(244,115,12)" fg:x="86984" fg:w="23"/><text x="100.2236%" y="687.50"></text></g></svg></svg>