<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="186166"><g><title>cpu_bench_v0-42868c868297afde`core::num::from_str_radix (32 samples, 0.02%)</title><rect x="0.0118%" y="357" width="0.0172%" height="15" fill="rgb(227,0,7)" fg:x="22" fg:w="32"/><text x="0.2618%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;binius_rust::binary_field16::BinaryFieldElement16 as serde::de::Deserialize&gt;::deserialize (58 samples, 0.03%)</title><rect x="0.0032%" y="373" width="0.0312%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="58"/><text x="0.2532%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (25 samples, 0.01%)</title><rect x="0.0365%" y="373" width="0.0134%" height="15" fill="rgb(221,193,54)" fg:x="68" fg:w="25"/><text x="0.2865%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (106 samples, 0.06%)</title><rect x="0.0005%" y="389" width="0.0569%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="106"/><text x="0.2505%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`serde_json::de::from_trait (114 samples, 0.06%)</title><rect x="0.0005%" y="469" width="0.0612%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="114"/><text x="0.2505%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (114 samples, 0.06%)</title><rect x="0.0005%" y="453" width="0.0612%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="114"/><text x="0.2505%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (114 samples, 0.06%)</title><rect x="0.0005%" y="437" width="0.0612%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="114"/><text x="0.2505%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (114 samples, 0.06%)</title><rect x="0.0005%" y="421" width="0.0612%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="114"/><text x="0.2505%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (114 samples, 0.06%)</title><rect x="0.0005%" y="405" width="0.0612%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="114"/><text x="0.2505%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;binius_rust::binary_ntt_cache::WI_EVAL_CACHE as core::ops::deref::Deref&gt;::deref (117 samples, 0.06%)</title><rect x="0.0000%" y="517" width="0.0628%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="117"/><text x="0.2500%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys_common::once::queue::Once::call (117 samples, 0.06%)</title><rect x="0.0000%" y="501" width="0.0628%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="117"/><text x="0.2500%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`std::sync::once::Once::call_once::_{{closure}} (117 samples, 0.06%)</title><rect x="0.0000%" y="485" width="0.0628%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="117"/><text x="0.2500%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;criterion::html::Html as criterion::report::Report&gt;::measurement_complete (19 samples, 0.01%)</title><rect x="0.0634%" y="485" width="0.0102%" height="15" fill="rgb(216,20,37)" fg:x="118" fg:w="19"/><text x="0.3134%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (28 samples, 0.02%)</title><rect x="1.9789%" y="309" width="0.0150%" height="15" fill="rgb(206,188,39)" fg:x="3684" fg:w="28"/><text x="2.2289%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (52 samples, 0.03%)</title><rect x="2.0219%" y="245" width="0.0279%" height="15" fill="rgb(217,207,13)" fg:x="3764" fg:w="52"/><text x="2.2719%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (63 samples, 0.03%)</title><rect x="2.0170%" y="293" width="0.0338%" height="15" fill="rgb(231,73,38)" fg:x="3755" fg:w="63"/><text x="2.2670%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (61 samples, 0.03%)</title><rect x="2.0181%" y="277" width="0.0328%" height="15" fill="rgb(225,20,46)" fg:x="3757" fg:w="61"/><text x="2.2681%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (58 samples, 0.03%)</title><rect x="2.0197%" y="261" width="0.0312%" height="15" fill="rgb(210,31,41)" fg:x="3760" fg:w="58"/><text x="2.2697%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (103 samples, 0.06%)</title><rect x="1.9966%" y="309" width="0.0553%" height="15" fill="rgb(221,200,47)" fg:x="3717" fg:w="103"/><text x="2.2466%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (228 samples, 0.12%)</title><rect x="1.9644%" y="325" width="0.1225%" height="15" fill="rgb(226,26,5)" fg:x="3657" fg:w="228"/><text x="2.2144%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (62 samples, 0.03%)</title><rect x="2.0535%" y="309" width="0.0333%" height="15" fill="rgb(249,33,26)" fg:x="3823" fg:w="62"/><text x="2.3035%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (275 samples, 0.15%)</title><rect x="1.9493%" y="357" width="0.1477%" height="15" fill="rgb(235,183,28)" fg:x="3629" fg:w="275"/><text x="2.1993%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (261 samples, 0.14%)</title><rect x="1.9569%" y="341" width="0.1402%" height="15" fill="rgb(221,5,38)" fg:x="3643" fg:w="261"/><text x="2.2069%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (292 samples, 0.16%)</title><rect x="1.9418%" y="373" width="0.1568%" height="15" fill="rgb(247,18,42)" fg:x="3615" fg:w="292"/><text x="2.1918%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::_&lt;impl core::iter::traits::collect::FromIterator&lt;binius_rust::binary_field16::BinaryFieldElement16&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from_iter (3,764 samples, 2.02%)</title><rect x="0.0876%" y="389" width="2.0219%" height="15" fill="rgb(241,131,45)" fg:x="163" fg:w="3764"/><text x="0.3376%" y="399.50">c..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (21 samples, 0.01%)</title><rect x="2.1223%" y="325" width="0.0113%" height="15" fill="rgb(249,31,29)" fg:x="3951" fg:w="21"/><text x="2.3723%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (28 samples, 0.02%)</title><rect x="2.1207%" y="373" width="0.0150%" height="15" fill="rgb(225,111,53)" fg:x="3948" fg:w="28"/><text x="2.3707%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (28 samples, 0.02%)</title><rect x="2.1207%" y="357" width="0.0150%" height="15" fill="rgb(238,160,17)" fg:x="3948" fg:w="28"/><text x="2.3707%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (27 samples, 0.01%)</title><rect x="2.1212%" y="341" width="0.0145%" height="15" fill="rgb(214,148,48)" fg:x="3949" fg:w="27"/><text x="2.3712%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (272 samples, 0.15%)</title><rect x="2.1357%" y="373" width="0.1461%" height="15" fill="rgb(232,36,49)" fg:x="3976" fg:w="272"/><text x="2.3857%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (29 samples, 0.02%)</title><rect x="2.3796%" y="261" width="0.0156%" height="15" fill="rgb(209,103,24)" fg:x="4430" fg:w="29"/><text x="2.6296%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (34 samples, 0.02%)</title><rect x="2.3774%" y="277" width="0.0183%" height="15" fill="rgb(229,88,8)" fg:x="4426" fg:w="34"/><text x="2.6274%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (38 samples, 0.02%)</title><rect x="2.3764%" y="293" width="0.0204%" height="15" fill="rgb(213,181,19)" fg:x="4424" fg:w="38"/><text x="2.6264%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (44 samples, 0.02%)</title><rect x="2.3753%" y="309" width="0.0236%" height="15" fill="rgb(254,191,54)" fg:x="4422" fg:w="44"/><text x="2.6253%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (50 samples, 0.03%)</title><rect x="2.3737%" y="341" width="0.0269%" height="15" fill="rgb(241,83,37)" fg:x="4419" fg:w="50"/><text x="2.6237%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (49 samples, 0.03%)</title><rect x="2.3742%" y="325" width="0.0263%" height="15" fill="rgb(233,36,39)" fg:x="4420" fg:w="49"/><text x="2.6242%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (53 samples, 0.03%)</title><rect x="2.3726%" y="357" width="0.0285%" height="15" fill="rgb(226,3,54)" fg:x="4417" fg:w="53"/><text x="2.6226%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (294 samples, 0.16%)</title><rect x="2.4011%" y="357" width="0.1579%" height="15" fill="rgb(245,192,40)" fg:x="4470" fg:w="294"/><text x="2.6511%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (19 samples, 0.01%)</title><rect x="2.6632%" y="245" width="0.0102%" height="15" fill="rgb(238,167,29)" fg:x="4958" fg:w="19"/><text x="2.9132%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (32 samples, 0.02%)</title><rect x="2.6573%" y="261" width="0.0172%" height="15" fill="rgb(232,182,51)" fg:x="4947" fg:w="32"/><text x="2.9073%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.01%)</title><rect x="2.6772%" y="261" width="0.0129%" height="15" fill="rgb(231,60,39)" fg:x="4984" fg:w="24"/><text x="2.9272%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (23 samples, 0.01%)</title><rect x="2.6777%" y="245" width="0.0124%" height="15" fill="rgb(208,69,12)" fg:x="4985" fg:w="23"/><text x="2.9277%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (70 samples, 0.04%)</title><rect x="2.6535%" y="277" width="0.0376%" height="15" fill="rgb(235,93,37)" fg:x="4940" fg:w="70"/><text x="2.9035%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (91 samples, 0.05%)</title><rect x="2.6498%" y="293" width="0.0489%" height="15" fill="rgb(213,116,39)" fg:x="4933" fg:w="91"/><text x="2.8998%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (98 samples, 0.05%)</title><rect x="2.6492%" y="309" width="0.0526%" height="15" fill="rgb(222,207,29)" fg:x="4932" fg:w="98"/><text x="2.8992%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (101 samples, 0.05%)</title><rect x="2.6482%" y="325" width="0.0543%" height="15" fill="rgb(206,96,30)" fg:x="4930" fg:w="101"/><text x="2.8982%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (107 samples, 0.06%)</title><rect x="2.6466%" y="341" width="0.0575%" height="15" fill="rgb(218,138,4)" fg:x="4927" fg:w="107"/><text x="2.8966%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (277 samples, 0.15%)</title><rect x="2.7046%" y="341" width="0.1488%" height="15" fill="rgb(250,191,14)" fg:x="5035" fg:w="277"/><text x="2.9546%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.01%)</title><rect x="2.9817%" y="245" width="0.0134%" height="15" fill="rgb(239,60,40)" fg:x="5551" fg:w="25"/><text x="3.2317%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.02%)</title><rect x="2.9957%" y="245" width="0.0236%" height="15" fill="rgb(206,27,48)" fg:x="5577" fg:w="44"/><text x="3.2457%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (41 samples, 0.02%)</title><rect x="2.9973%" y="229" width="0.0220%" height="15" fill="rgb(225,35,8)" fg:x="5580" fg:w="41"/><text x="3.2473%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (37 samples, 0.02%)</title><rect x="2.9995%" y="213" width="0.0199%" height="15" fill="rgb(250,213,24)" fg:x="5584" fg:w="37"/><text x="3.2495%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (86 samples, 0.05%)</title><rect x="2.9780%" y="261" width="0.0462%" height="15" fill="rgb(247,123,22)" fg:x="5544" fg:w="86"/><text x="3.2280%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (111 samples, 0.06%)</title><rect x="2.9732%" y="277" width="0.0596%" height="15" fill="rgb(231,138,38)" fg:x="5535" fg:w="111"/><text x="3.2232%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (128 samples, 0.07%)</title><rect x="2.9699%" y="293" width="0.0688%" height="15" fill="rgb(231,145,46)" fg:x="5529" fg:w="128"/><text x="3.2199%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (137 samples, 0.07%)</title><rect x="2.9662%" y="325" width="0.0736%" height="15" fill="rgb(251,118,11)" fg:x="5522" fg:w="137"/><text x="3.2162%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (132 samples, 0.07%)</title><rect x="2.9689%" y="309" width="0.0709%" height="15" fill="rgb(217,147,25)" fg:x="5527" fg:w="132"/><text x="3.2189%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (338 samples, 0.18%)</title><rect x="3.0403%" y="325" width="0.1816%" height="15" fill="rgb(247,81,37)" fg:x="5660" fg:w="338"/><text x="3.2903%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (24 samples, 0.01%)</title><rect x="3.4007%" y="229" width="0.0129%" height="15" fill="rgb(209,12,38)" fg:x="6331" fg:w="24"/><text x="3.6507%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (57 samples, 0.03%)</title><rect x="3.4136%" y="229" width="0.0306%" height="15" fill="rgb(227,1,9)" fg:x="6355" fg:w="57"/><text x="3.6636%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (49 samples, 0.03%)</title><rect x="3.4179%" y="213" width="0.0263%" height="15" fill="rgb(248,47,43)" fg:x="6363" fg:w="49"/><text x="3.6679%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (94 samples, 0.05%)</title><rect x="3.3975%" y="245" width="0.0505%" height="15" fill="rgb(221,10,30)" fg:x="6325" fg:w="94"/><text x="3.6475%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (125 samples, 0.07%)</title><rect x="3.3878%" y="261" width="0.0671%" height="15" fill="rgb(210,229,1)" fg:x="6307" fg:w="125"/><text x="3.6378%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (154 samples, 0.08%)</title><rect x="3.3744%" y="293" width="0.0827%" height="15" fill="rgb(222,148,37)" fg:x="6282" fg:w="154"/><text x="3.6244%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (146 samples, 0.08%)</title><rect x="3.3787%" y="277" width="0.0784%" height="15" fill="rgb(234,67,33)" fg:x="6290" fg:w="146"/><text x="3.6287%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (166 samples, 0.09%)</title><rect x="3.3685%" y="309" width="0.0892%" height="15" fill="rgb(247,98,35)" fg:x="6271" fg:w="166"/><text x="3.6185%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (362 samples, 0.19%)</title><rect x="3.4582%" y="309" width="0.1945%" height="15" fill="rgb(247,138,52)" fg:x="6438" fg:w="362"/><text x="3.7082%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (20 samples, 0.01%)</title><rect x="3.6527%" y="309" width="0.0107%" height="15" fill="rgb(213,79,30)" fg:x="6800" fg:w="20"/><text x="3.9027%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (25 samples, 0.01%)</title><rect x="3.8176%" y="293" width="0.0134%" height="15" fill="rgb(246,177,23)" fg:x="7107" fg:w="25"/><text x="4.0676%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (21 samples, 0.01%)</title><rect x="3.8691%" y="261" width="0.0113%" height="15" fill="rgb(230,62,27)" fg:x="7203" fg:w="21"/><text x="4.1191%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.01%)</title><rect x="3.9024%" y="229" width="0.0107%" height="15" fill="rgb(216,154,8)" fg:x="7265" fg:w="20"/><text x="4.1524%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (31 samples, 0.02%)</title><rect x="3.9245%" y="213" width="0.0167%" height="15" fill="rgb(244,35,45)" fg:x="7306" fg:w="31"/><text x="4.1745%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (39 samples, 0.02%)</title><rect x="3.9212%" y="229" width="0.0209%" height="15" fill="rgb(251,115,12)" fg:x="7300" fg:w="39"/><text x="4.1712%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (98 samples, 0.05%)</title><rect x="3.8928%" y="245" width="0.0526%" height="15" fill="rgb(240,54,50)" fg:x="7247" fg:w="98"/><text x="4.1428%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (184 samples, 0.10%)</title><rect x="3.8514%" y="293" width="0.0988%" height="15" fill="rgb(233,84,52)" fg:x="7170" fg:w="184"/><text x="4.1014%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (157 samples, 0.08%)</title><rect x="3.8659%" y="277" width="0.0843%" height="15" fill="rgb(207,117,47)" fg:x="7197" fg:w="157"/><text x="4.1159%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (130 samples, 0.07%)</title><rect x="3.8804%" y="261" width="0.0698%" height="15" fill="rgb(249,43,39)" fg:x="7224" fg:w="130"/><text x="4.1304%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (452 samples, 0.24%)</title><rect x="3.9540%" y="293" width="0.2428%" height="15" fill="rgb(209,38,44)" fg:x="7361" fg:w="452"/><text x="4.2040%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (41 samples, 0.02%)</title><rect x="4.1968%" y="293" width="0.0220%" height="15" fill="rgb(236,212,23)" fg:x="7813" fg:w="41"/><text x="4.4468%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (73 samples, 0.04%)</title><rect x="4.3880%" y="277" width="0.0392%" height="15" fill="rgb(242,79,21)" fg:x="8169" fg:w="73"/><text x="4.6380%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (23 samples, 0.01%)</title><rect x="4.4272%" y="277" width="0.0124%" height="15" fill="rgb(211,96,35)" fg:x="8242" fg:w="23"/><text x="4.6772%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (20 samples, 0.01%)</title><rect x="4.4605%" y="277" width="0.0107%" height="15" fill="rgb(253,215,40)" fg:x="8304" fg:w="20"/><text x="4.7105%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (25 samples, 0.01%)</title><rect x="4.5008%" y="245" width="0.0134%" height="15" fill="rgb(211,81,21)" fg:x="8379" fg:w="25"/><text x="4.7508%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (57 samples, 0.03%)</title><rect x="4.5583%" y="213" width="0.0306%" height="15" fill="rgb(208,190,38)" fg:x="8486" fg:w="57"/><text x="4.8083%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (37 samples, 0.02%)</title><rect x="4.5889%" y="213" width="0.0199%" height="15" fill="rgb(235,213,38)" fg:x="8543" fg:w="37"/><text x="4.8389%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (59 samples, 0.03%)</title><rect x="4.6211%" y="197" width="0.0317%" height="15" fill="rgb(237,122,38)" fg:x="8603" fg:w="59"/><text x="4.8711%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (107 samples, 0.06%)</title><rect x="4.6088%" y="213" width="0.0575%" height="15" fill="rgb(244,218,35)" fg:x="8580" fg:w="107"/><text x="4.8588%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (25 samples, 0.01%)</title><rect x="4.6528%" y="197" width="0.0134%" height="15" fill="rgb(240,68,47)" fg:x="8662" fg:w="25"/><text x="4.9028%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (245 samples, 0.13%)</title><rect x="4.5411%" y="229" width="0.1316%" height="15" fill="rgb(210,16,53)" fg:x="8454" fg:w="245"/><text x="4.7911%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (339 samples, 0.18%)</title><rect x="4.4944%" y="261" width="0.1821%" height="15" fill="rgb(235,124,12)" fg:x="8367" fg:w="339"/><text x="4.7444%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (302 samples, 0.16%)</title><rect x="4.5143%" y="245" width="0.1622%" height="15" fill="rgb(224,169,11)" fg:x="8404" fg:w="302"/><text x="4.7643%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (387 samples, 0.21%)</title><rect x="4.4713%" y="277" width="0.2079%" height="15" fill="rgb(250,166,2)" fg:x="8324" fg:w="387"/><text x="4.7213%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (246 samples, 0.13%)</title><rect x="4.6829%" y="277" width="0.1321%" height="15" fill="rgb(242,216,29)" fg:x="8718" fg:w="246"/><text x="4.9329%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (85 samples, 0.05%)</title><rect x="4.8151%" y="277" width="0.0457%" height="15" fill="rgb(230,116,27)" fg:x="8964" fg:w="85"/><text x="5.0651%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (100 samples, 0.05%)</title><rect x="5.2663%" y="261" width="0.0537%" height="15" fill="rgb(228,99,48)" fg:x="9804" fg:w="100"/><text x="5.5163%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (42 samples, 0.02%)</title><rect x="5.3200%" y="261" width="0.0226%" height="15" fill="rgb(253,11,6)" fg:x="9904" fg:w="42"/><text x="5.5700%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (19 samples, 0.01%)</title><rect x="5.3425%" y="261" width="0.0102%" height="15" fill="rgb(247,143,39)" fg:x="9946" fg:w="19"/><text x="5.5925%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (38 samples, 0.02%)</title><rect x="5.3694%" y="261" width="0.0204%" height="15" fill="rgb(236,97,10)" fg:x="9996" fg:w="38"/><text x="5.6194%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$realloc (21 samples, 0.01%)</title><rect x="5.4124%" y="245" width="0.0113%" height="15" fill="rgb(233,208,19)" fg:x="10076" fg:w="21"/><text x="5.6624%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (75 samples, 0.04%)</title><rect x="5.4425%" y="229" width="0.0403%" height="15" fill="rgb(216,164,2)" fg:x="10132" fg:w="75"/><text x="5.6925%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (21 samples, 0.01%)</title><rect x="5.5268%" y="213" width="0.0113%" height="15" fill="rgb(220,129,5)" fg:x="10289" fg:w="21"/><text x="5.7768%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (23 samples, 0.01%)</title><rect x="5.5757%" y="197" width="0.0124%" height="15" fill="rgb(242,17,10)" fg:x="10380" fg:w="23"/><text x="5.8257%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (107 samples, 0.06%)</title><rect x="5.5880%" y="197" width="0.0575%" height="15" fill="rgb(242,107,0)" fg:x="10403" fg:w="107"/><text x="5.8380%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (51 samples, 0.03%)</title><rect x="5.6455%" y="197" width="0.0274%" height="15" fill="rgb(251,28,31)" fg:x="10510" fg:w="51"/><text x="5.8955%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (138 samples, 0.07%)</title><rect x="5.6938%" y="181" width="0.0741%" height="15" fill="rgb(233,223,10)" fg:x="10600" fg:w="138"/><text x="5.9438%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (206 samples, 0.11%)</title><rect x="5.6729%" y="197" width="0.1107%" height="15" fill="rgb(215,21,27)" fg:x="10561" fg:w="206"/><text x="5.9229%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (29 samples, 0.02%)</title><rect x="5.7680%" y="181" width="0.0156%" height="15" fill="rgb(232,23,21)" fg:x="10738" fg:w="29"/><text x="6.0180%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (510 samples, 0.27%)</title><rect x="5.5381%" y="213" width="0.2739%" height="15" fill="rgb(244,5,23)" fg:x="10310" fg:w="510"/><text x="5.7881%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (53 samples, 0.03%)</title><rect x="5.7835%" y="197" width="0.0285%" height="15" fill="rgb(226,81,46)" fg:x="10767" fg:w="53"/><text x="6.0335%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (739 samples, 0.40%)</title><rect x="5.4306%" y="245" width="0.3970%" height="15" fill="rgb(247,70,30)" fg:x="10110" fg:w="739"/><text x="5.6806%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (642 samples, 0.34%)</title><rect x="5.4827%" y="229" width="0.3449%" height="15" fill="rgb(212,68,19)" fg:x="10207" fg:w="642"/><text x="5.7327%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (29 samples, 0.02%)</title><rect x="5.8120%" y="213" width="0.0156%" height="15" fill="rgb(240,187,13)" fg:x="10820" fg:w="29"/><text x="6.0620%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (826 samples, 0.44%)</title><rect x="5.3898%" y="261" width="0.4437%" height="15" fill="rgb(223,113,26)" fg:x="10034" fg:w="826"/><text x="5.6398%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (312 samples, 0.17%)</title><rect x="5.8410%" y="261" width="0.1676%" height="15" fill="rgb(206,192,2)" fg:x="10874" fg:w="312"/><text x="6.0910%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (148 samples, 0.08%)</title><rect x="6.0086%" y="261" width="0.0795%" height="15" fill="rgb(241,108,4)" fg:x="11186" fg:w="148"/><text x="6.2586%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (136 samples, 0.07%)</title><rect x="6.4373%" y="245" width="0.0731%" height="15" fill="rgb(247,173,49)" fg:x="11984" fg:w="136"/><text x="6.6873%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (80 samples, 0.04%)</title><rect x="6.5109%" y="245" width="0.0430%" height="15" fill="rgb(224,114,35)" fg:x="12121" fg:w="80"/><text x="6.7609%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (38 samples, 0.02%)</title><rect x="6.5538%" y="245" width="0.0204%" height="15" fill="rgb(245,159,27)" fg:x="12201" fg:w="38"/><text x="6.8038%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_lock (49 samples, 0.03%)</title><rect x="6.5742%" y="245" width="0.0263%" height="15" fill="rgb(245,172,44)" fg:x="12239" fg:w="49"/><text x="6.8242%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_unlock (42 samples, 0.02%)</title><rect x="6.6006%" y="245" width="0.0226%" height="15" fill="rgb(236,23,11)" fg:x="12288" fg:w="42"/><text x="6.8506%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (78 samples, 0.04%)</title><rect x="6.6231%" y="245" width="0.0419%" height="15" fill="rgb(205,117,38)" fg:x="12330" fg:w="78"/><text x="6.8731%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$realloc (20 samples, 0.01%)</title><rect x="6.7155%" y="229" width="0.0107%" height="15" fill="rgb(237,72,25)" fg:x="12502" fg:w="20"/><text x="6.9655%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (140 samples, 0.08%)</title><rect x="6.7649%" y="213" width="0.0752%" height="15" fill="rgb(244,70,9)" fg:x="12594" fg:w="140"/><text x="7.0149%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (33 samples, 0.02%)</title><rect x="6.9325%" y="197" width="0.0177%" height="15" fill="rgb(217,125,39)" fg:x="12906" fg:w="33"/><text x="7.1825%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (29 samples, 0.02%)</title><rect x="7.0104%" y="181" width="0.0156%" height="15" fill="rgb(235,36,10)" fg:x="13051" fg:w="29"/><text x="7.2604%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (159 samples, 0.09%)</title><rect x="7.0260%" y="181" width="0.0854%" height="15" fill="rgb(251,123,47)" fg:x="13080" fg:w="159"/><text x="7.2760%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (120 samples, 0.06%)</title><rect x="7.1114%" y="181" width="0.0645%" height="15" fill="rgb(221,13,13)" fg:x="13239" fg:w="120"/><text x="7.3614%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (291 samples, 0.16%)</title><rect x="7.1759%" y="181" width="0.1563%" height="15" fill="rgb(238,131,9)" fg:x="13359" fg:w="291"/><text x="7.4259%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (224 samples, 0.12%)</title><rect x="7.2118%" y="165" width="0.1203%" height="15" fill="rgb(211,50,8)" fg:x="13426" fg:w="224"/><text x="7.4618%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (766 samples, 0.41%)</title><rect x="6.9502%" y="197" width="0.4115%" height="15" fill="rgb(245,182,24)" fg:x="12939" fg:w="766"/><text x="7.2002%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (55 samples, 0.03%)</title><rect x="7.3322%" y="181" width="0.0295%" height="15" fill="rgb(242,14,37)" fg:x="13650" fg:w="55"/><text x="7.5822%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (1,203 samples, 0.65%)</title><rect x="6.7348%" y="229" width="0.6462%" height="15" fill="rgb(246,228,12)" fg:x="12538" fg:w="1203"/><text x="6.9848%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1,007 samples, 0.54%)</title><rect x="6.8401%" y="213" width="0.5409%" height="15" fill="rgb(213,55,15)" fg:x="12734" fg:w="1007"/><text x="7.0901%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (36 samples, 0.02%)</title><rect x="7.3617%" y="197" width="0.0193%" height="15" fill="rgb(209,9,3)" fg:x="13705" fg:w="36"/><text x="7.6117%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,355 samples, 0.73%)</title><rect x="6.6650%" y="245" width="0.7278%" height="15" fill="rgb(230,59,30)" fg:x="12408" fg:w="1355"/><text x="6.9150%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (22 samples, 0.01%)</title><rect x="7.3810%" y="229" width="0.0118%" height="15" fill="rgb(209,121,21)" fg:x="13741" fg:w="22"/><text x="7.6310%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (35 samples, 0.02%)</title><rect x="7.3929%" y="245" width="0.0188%" height="15" fill="rgb(220,109,13)" fg:x="13763" fg:w="35"/><text x="7.6429%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (282 samples, 0.15%)</title><rect x="7.4117%" y="245" width="0.1515%" height="15" fill="rgb(232,18,1)" fg:x="13798" fg:w="282"/><text x="7.6617%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (300 samples, 0.16%)</title><rect x="7.5631%" y="245" width="0.1611%" height="15" fill="rgb(215,41,42)" fg:x="14080" fg:w="300"/><text x="7.8131%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (335 samples, 0.18%)</title><rect x="8.2067%" y="229" width="0.1799%" height="15" fill="rgb(224,123,36)" fg:x="15278" fg:w="335"/><text x="8.4567%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (188 samples, 0.10%)</title><rect x="8.3866%" y="229" width="0.1010%" height="15" fill="rgb(240,125,3)" fg:x="15613" fg:w="188"/><text x="8.6366%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (76 samples, 0.04%)</title><rect x="8.4876%" y="229" width="0.0408%" height="15" fill="rgb(205,98,50)" fg:x="15801" fg:w="76"/><text x="8.7376%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_lock (86 samples, 0.05%)</title><rect x="8.5284%" y="229" width="0.0462%" height="15" fill="rgb(205,185,37)" fg:x="15877" fg:w="86"/><text x="8.7784%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_unlock (85 samples, 0.05%)</title><rect x="8.5746%" y="229" width="0.0457%" height="15" fill="rgb(238,207,15)" fg:x="15963" fg:w="85"/><text x="8.8246%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (148 samples, 0.08%)</title><rect x="8.6203%" y="229" width="0.0795%" height="15" fill="rgb(213,199,42)" fg:x="16048" fg:w="148"/><text x="8.8703%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$realloc (32 samples, 0.02%)</title><rect x="8.7588%" y="213" width="0.0172%" height="15" fill="rgb(235,201,11)" fg:x="16306" fg:w="32"/><text x="9.0088%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_realloc (25 samples, 0.01%)</title><rect x="8.7760%" y="213" width="0.0134%" height="15" fill="rgb(207,46,11)" fg:x="16338" fg:w="25"/><text x="9.0260%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_realloc (30 samples, 0.02%)</title><rect x="8.8136%" y="197" width="0.0161%" height="15" fill="rgb(241,35,35)" fg:x="16408" fg:w="30"/><text x="9.0636%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (266 samples, 0.14%)</title><rect x="8.8346%" y="197" width="0.1429%" height="15" fill="rgb(243,32,47)" fg:x="16447" fg:w="266"/><text x="9.0846%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (56 samples, 0.03%)</title><rect x="9.1435%" y="181" width="0.0301%" height="15" fill="rgb(247,202,23)" fg:x="17022" fg:w="56"/><text x="9.3935%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (254 samples, 0.14%)</title><rect x="9.3008%" y="165" width="0.1364%" height="15" fill="rgb(219,102,11)" fg:x="17315" fg:w="254"/><text x="9.5508%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (641 samples, 0.34%)</title><rect x="9.1735%" y="181" width="0.3443%" height="15" fill="rgb(243,110,44)" fg:x="17078" fg:w="641"/><text x="9.4235%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (150 samples, 0.08%)</title><rect x="9.4373%" y="165" width="0.0806%" height="15" fill="rgb(222,74,54)" fg:x="17569" fg:w="150"/><text x="9.6873%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (1,394 samples, 0.75%)</title><rect x="8.7895%" y="213" width="0.7488%" height="15" fill="rgb(216,99,12)" fg:x="16363" fg:w="1394"/><text x="9.0395%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1,044 samples, 0.56%)</title><rect x="8.9775%" y="197" width="0.5608%" height="15" fill="rgb(226,22,26)" fg:x="16713" fg:w="1044"/><text x="9.2275%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (38 samples, 0.02%)</title><rect x="9.5178%" y="181" width="0.0204%" height="15" fill="rgb(217,163,10)" fg:x="17719" fg:w="38"/><text x="9.7678%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,636 samples, 0.88%)</title><rect x="8.6998%" y="229" width="0.8788%" height="15" fill="rgb(213,25,53)" fg:x="16196" fg:w="1636"/><text x="8.9498%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (75 samples, 0.04%)</title><rect x="9.5383%" y="213" width="0.0403%" height="15" fill="rgb(252,105,26)" fg:x="17757" fg:w="75"/><text x="9.7883%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (51 samples, 0.03%)</title><rect x="9.5785%" y="229" width="0.0274%" height="15" fill="rgb(220,39,43)" fg:x="17832" fg:w="51"/><text x="9.8285%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (261 samples, 0.14%)</title><rect x="9.6059%" y="229" width="0.1402%" height="15" fill="rgb(229,68,48)" fg:x="17883" fg:w="261"/><text x="9.8559%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (1,404 samples, 0.75%)</title><rect x="9.7461%" y="229" width="0.7542%" height="15" fill="rgb(252,8,32)" fg:x="18144" fg:w="1404"/><text x="9.9961%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (528 samples, 0.28%)</title><rect x="11.3984%" y="213" width="0.2836%" height="15" fill="rgb(223,20,43)" fg:x="21220" fg:w="528"/><text x="11.6484%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (338 samples, 0.18%)</title><rect x="11.6820%" y="213" width="0.1816%" height="15" fill="rgb(229,81,49)" fg:x="21748" fg:w="338"/><text x="11.9320%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (138 samples, 0.07%)</title><rect x="11.8636%" y="213" width="0.0741%" height="15" fill="rgb(236,28,36)" fg:x="22086" fg:w="138"/><text x="12.1136%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_lock (160 samples, 0.09%)</title><rect x="11.9377%" y="213" width="0.0859%" height="15" fill="rgb(249,185,26)" fg:x="22224" fg:w="160"/><text x="12.1877%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_unlock (137 samples, 0.07%)</title><rect x="12.0237%" y="213" width="0.0736%" height="15" fill="rgb(249,174,33)" fg:x="22384" fg:w="137"/><text x="12.2737%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (278 samples, 0.15%)</title><rect x="12.0973%" y="213" width="0.1493%" height="15" fill="rgb(233,201,37)" fg:x="22521" fg:w="278"/><text x="12.3473%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (128 samples, 0.07%)</title><rect x="12.2466%" y="213" width="0.0688%" height="15" fill="rgb(221,78,26)" fg:x="22799" fg:w="128"/><text x="12.4966%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (146 samples, 0.08%)</title><rect x="12.3154%" y="213" width="0.0784%" height="15" fill="rgb(250,127,30)" fg:x="22927" fg:w="146"/><text x="12.5654%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (2,366 samples, 1.27%)</title><rect x="12.3938%" y="213" width="1.2709%" height="15" fill="rgb(230,49,44)" fg:x="23073" fg:w="2366"/><text x="12.6438%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (319 samples, 0.17%)</title><rect x="15.0973%" y="197" width="0.1714%" height="15" fill="rgb(229,67,23)" fg:x="28106" fg:w="319"/><text x="15.3473%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (196 samples, 0.11%)</title><rect x="15.2686%" y="197" width="0.1053%" height="15" fill="rgb(249,83,47)" fg:x="28425" fg:w="196"/><text x="15.5186%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$realloc (266 samples, 0.14%)</title><rect x="15.5995%" y="181" width="0.1429%" height="15" fill="rgb(215,43,3)" fg:x="29041" fg:w="266"/><text x="15.8495%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_realloc (94 samples, 0.05%)</title><rect x="15.7424%" y="181" width="0.0505%" height="15" fill="rgb(238,154,13)" fg:x="29307" fg:w="94"/><text x="15.9924%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_realloc (33 samples, 0.02%)</title><rect x="15.9734%" y="165" width="0.0177%" height="15" fill="rgb(219,56,2)" fg:x="29737" fg:w="33"/><text x="16.2234%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (133 samples, 0.07%)</title><rect x="15.9911%" y="165" width="0.0714%" height="15" fill="rgb(233,0,4)" fg:x="29770" fg:w="133"/><text x="16.2411%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (928 samples, 0.50%)</title><rect x="16.0625%" y="165" width="0.4985%" height="15" fill="rgb(235,30,7)" fg:x="29903" fg:w="928"/><text x="16.3125%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (260 samples, 0.14%)</title><rect x="17.1981%" y="149" width="0.1397%" height="15" fill="rgb(250,79,13)" fg:x="32017" fg:w="260"/><text x="17.4481%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1,086 samples, 0.58%)</title><rect x="17.7900%" y="133" width="0.5834%" height="15" fill="rgb(211,146,34)" fg:x="33119" fg:w="1086"/><text x="18.0400%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2,611 samples, 1.40%)</title><rect x="17.3378%" y="149" width="1.4025%" height="15" fill="rgb(228,22,38)" fg:x="32277" fg:w="2611"/><text x="17.5878%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (683 samples, 0.37%)</title><rect x="18.3734%" y="133" width="0.3669%" height="15" fill="rgb(235,168,5)" fg:x="34205" fg:w="683"/><text x="18.6234%" y="143.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (5,751 samples, 3.09%)</title><rect x="15.7929%" y="181" width="3.0892%" height="15" fill="rgb(221,155,16)" fg:x="29401" fg:w="5751"/><text x="16.0429%" y="191.50">cpu..</text></g><g><title>libsystem_malloc.dylib`realloc (4,321 samples, 2.32%)</title><rect x="16.5610%" y="165" width="2.3210%" height="15" fill="rgb(215,215,53)" fg:x="30831" fg:w="4321"/><text x="16.8110%" y="175.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (264 samples, 0.14%)</title><rect x="18.7403%" y="149" width="0.1418%" height="15" fill="rgb(223,4,10)" fg:x="34888" fg:w="264"/><text x="18.9903%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6,688 samples, 3.59%)</title><rect x="15.3809%" y="197" width="3.5925%" height="15" fill="rgb(234,103,6)" fg:x="28634" fg:w="6688"/><text x="15.6309%" y="207.50">cpu_..</text></g><g><title>libsystem_malloc.dylib`realloc (170 samples, 0.09%)</title><rect x="18.8821%" y="181" width="0.0913%" height="15" fill="rgb(227,97,0)" fg:x="35152" fg:w="170"/><text x="19.1321%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (100 samples, 0.05%)</title><rect x="18.9734%" y="197" width="0.0537%" height="15" fill="rgb(234,150,53)" fg:x="35322" fg:w="100"/><text x="19.2234%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (186 samples, 0.10%)</title><rect x="19.0271%" y="197" width="0.0999%" height="15" fill="rgb(228,201,54)" fg:x="35422" fg:w="186"/><text x="19.2771%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (524 samples, 0.28%)</title><rect x="19.1270%" y="197" width="0.2815%" height="15" fill="rgb(222,22,37)" fg:x="35608" fg:w="524"/><text x="19.3770%" y="207.50"></text></g><g><title>libsystem_m.dylib`log2 (586 samples, 0.31%)</title><rect x="19.4085%" y="197" width="0.3148%" height="15" fill="rgb(237,53,32)" fg:x="36132" fg:w="586"/><text x="19.6585%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,030 samples, 1.09%)</title><rect x="19.7233%" y="197" width="1.0904%" height="15" fill="rgb(233,25,53)" fg:x="36718" fg:w="2030"/><text x="19.9733%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4,514 samples, 2.42%)</title><rect x="20.8137%" y="197" width="2.4247%" height="15" fill="rgb(210,40,34)" fg:x="38748" fg:w="4514"/><text x="21.0637%" y="207.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3,253 samples, 1.75%)</title><rect x="23.2384%" y="197" width="1.7474%" height="15" fill="rgb(241,220,44)" fg:x="43262" fg:w="3253"/><text x="23.4884%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1,332 samples, 0.72%)</title><rect x="24.9858%" y="197" width="0.7155%" height="15" fill="rgb(235,28,35)" fg:x="46515" fg:w="1332"/><text x="25.2358%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (22,971 samples, 12.34%)</title><rect x="13.6647%" y="213" width="12.3390%" height="15" fill="rgb(210,56,17)" fg:x="25439" fg:w="22971"/><text x="13.9147%" y="223.50">cpu_bench_v0-42868..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (563 samples, 0.30%)</title><rect x="25.7013%" y="197" width="0.3024%" height="15" fill="rgb(224,130,29)" fg:x="47847" fg:w="563"/><text x="25.9513%" y="207.50"></text></g><g><title>libsystem_m.dylib`log2 (334 samples, 0.18%)</title><rect x="26.0037%" y="213" width="0.1794%" height="15" fill="rgb(235,212,8)" fg:x="48410" fg:w="334"/><text x="26.2537%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,985 samples, 1.07%)</title><rect x="26.1831%" y="213" width="1.0663%" height="15" fill="rgb(223,33,50)" fg:x="48744" fg:w="1985"/><text x="26.4331%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2,949 samples, 1.58%)</title><rect x="27.2493%" y="213" width="1.5841%" height="15" fill="rgb(219,149,13)" fg:x="50729" fg:w="2949"/><text x="27.4993%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (3,697 samples, 1.99%)</title><rect x="28.8334%" y="213" width="1.9859%" height="15" fill="rgb(250,156,29)" fg:x="53678" fg:w="3697"/><text x="29.0834%" y="223.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4,349 samples, 2.34%)</title><rect x="30.8193%" y="213" width="2.3361%" height="15" fill="rgb(216,193,19)" fg:x="57375" fg:w="4349"/><text x="31.0693%" y="223.50">l..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (540 samples, 0.29%)</title><rect x="33.1554%" y="213" width="0.2901%" height="15" fill="rgb(216,135,14)" fg:x="61724" fg:w="540"/><text x="33.4054%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (707 samples, 0.38%)</title><rect x="33.4454%" y="213" width="0.3798%" height="15" fill="rgb(241,47,5)" fg:x="62264" fg:w="707"/><text x="33.6954%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (43,780 samples, 23.52%)</title><rect x="10.5003%" y="229" width="23.5166%" height="15" fill="rgb(233,42,35)" fg:x="19548" fg:w="43780"/><text x="10.7503%" y="239.50">cpu_bench_v0-42868c868297afde`binius_..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (357 samples, 0.19%)</title><rect x="33.8252%" y="213" width="0.1918%" height="15" fill="rgb(231,13,6)" fg:x="62971" fg:w="357"/><text x="34.0752%" y="223.50"></text></g><g><title>libsystem_m.dylib`log2 (162 samples, 0.09%)</title><rect x="34.0170%" y="229" width="0.0870%" height="15" fill="rgb(207,181,40)" fg:x="63328" fg:w="162"/><text x="34.2670%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,137 samples, 0.61%)</title><rect x="34.1040%" y="229" width="0.6107%" height="15" fill="rgb(254,173,49)" fg:x="63490" fg:w="1137"/><text x="34.3540%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,459 samples, 0.78%)</title><rect x="34.7147%" y="229" width="0.7837%" height="15" fill="rgb(221,1,38)" fg:x="64627" fg:w="1459"/><text x="34.9647%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (1,774 samples, 0.95%)</title><rect x="35.4984%" y="229" width="0.9529%" height="15" fill="rgb(206,124,46)" fg:x="66086" fg:w="1774"/><text x="35.7484%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1,414 samples, 0.76%)</title><rect x="36.4513%" y="229" width="0.7595%" height="15" fill="rgb(249,21,11)" fg:x="67860" fg:w="1414"/><text x="36.7013%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (315 samples, 0.17%)</title><rect x="37.2109%" y="229" width="0.1692%" height="15" fill="rgb(222,201,40)" fg:x="69274" fg:w="315"/><text x="37.4609%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (318 samples, 0.17%)</title><rect x="37.3801%" y="229" width="0.1708%" height="15" fill="rgb(235,61,29)" fg:x="69589" fg:w="318"/><text x="37.6301%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (55,663 samples, 29.90%)</title><rect x="7.7243%" y="245" width="29.8997%" height="15" fill="rgb(219,207,3)" fg:x="14380" fg:w="55663"/><text x="7.9743%" y="255.50">cpu_bench_v0-42868c868297afde`binius_rust::binar..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (136 samples, 0.07%)</title><rect x="37.5509%" y="229" width="0.0731%" height="15" fill="rgb(222,56,46)" fg:x="69907" fg:w="136"/><text x="37.8009%" y="239.50"></text></g><g><title>libsystem_m.dylib`log2 (87 samples, 0.05%)</title><rect x="37.6239%" y="245" width="0.0467%" height="15" fill="rgb(239,76,54)" fg:x="70043" fg:w="87"/><text x="37.8739%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (586 samples, 0.31%)</title><rect x="37.6707%" y="245" width="0.3148%" height="15" fill="rgb(231,124,27)" fg:x="70130" fg:w="586"/><text x="37.9207%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (742 samples, 0.40%)</title><rect x="37.9855%" y="245" width="0.3986%" height="15" fill="rgb(249,195,6)" fg:x="70716" fg:w="742"/><text x="38.2355%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (852 samples, 0.46%)</title><rect x="38.3840%" y="245" width="0.4577%" height="15" fill="rgb(237,174,47)" fg:x="71458" fg:w="852"/><text x="38.6340%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (662 samples, 0.36%)</title><rect x="38.8417%" y="245" width="0.3556%" height="15" fill="rgb(206,201,31)" fg:x="72310" fg:w="662"/><text x="39.0917%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (108 samples, 0.06%)</title><rect x="39.1973%" y="245" width="0.0580%" height="15" fill="rgb(231,57,52)" fg:x="72972" fg:w="108"/><text x="39.4473%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (150 samples, 0.08%)</title><rect x="39.2553%" y="245" width="0.0806%" height="15" fill="rgb(248,177,22)" fg:x="73080" fg:w="150"/><text x="39.5053%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (61,964 samples, 33.28%)</title><rect x="6.0881%" y="261" width="33.2843%" height="15" fill="rgb(215,211,37)" fg:x="11334" fg:w="61964"/><text x="6.3381%" y="271.50">cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (68 samples, 0.04%)</title><rect x="39.3359%" y="245" width="0.0365%" height="15" fill="rgb(241,128,51)" fg:x="73230" fg:w="68"/><text x="39.5859%" y="255.50"></text></g><g><title>libsystem_m.dylib`log2 (49 samples, 0.03%)</title><rect x="39.3724%" y="261" width="0.0263%" height="15" fill="rgb(227,165,31)" fg:x="73298" fg:w="49"/><text x="39.6224%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (38 samples, 0.02%)</title><rect x="39.3987%" y="261" width="0.0204%" height="15" fill="rgb(228,167,24)" fg:x="73347" fg:w="38"/><text x="39.6487%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (264 samples, 0.14%)</title><rect x="39.4191%" y="261" width="0.1418%" height="15" fill="rgb(228,143,12)" fg:x="73385" fg:w="264"/><text x="39.6691%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (404 samples, 0.22%)</title><rect x="39.5609%" y="261" width="0.2170%" height="15" fill="rgb(249,149,8)" fg:x="73649" fg:w="404"/><text x="39.8109%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (432 samples, 0.23%)</title><rect x="39.7779%" y="261" width="0.2321%" height="15" fill="rgb(243,35,44)" fg:x="74053" fg:w="432"/><text x="40.0279%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (298 samples, 0.16%)</title><rect x="40.0100%" y="261" width="0.1601%" height="15" fill="rgb(246,89,9)" fg:x="74485" fg:w="298"/><text x="40.2600%" y="271.50"></text></g><g><title>libsystem_platform.dylib`__bzero (33 samples, 0.02%)</title><rect x="40.1701%" y="261" width="0.0177%" height="15" fill="rgb(233,213,13)" fg:x="74783" fg:w="33"/><text x="40.4201%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (100 samples, 0.05%)</title><rect x="40.1878%" y="261" width="0.0537%" height="15" fill="rgb(233,141,41)" fg:x="74816" fg:w="100"/><text x="40.4378%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (43 samples, 0.02%)</title><rect x="40.2415%" y="261" width="0.0231%" height="15" fill="rgb(239,167,4)" fg:x="74916" fg:w="43"/><text x="40.4915%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (89 samples, 0.05%)</title><rect x="40.2646%" y="261" width="0.0478%" height="15" fill="rgb(209,217,16)" fg:x="74959" fg:w="89"/><text x="40.5146%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (66,036 samples, 35.47%)</title><rect x="4.8607%" y="277" width="35.4716%" height="15" fill="rgb(219,88,35)" fg:x="9049" fg:w="66036"/><text x="5.1107%" y="287.50">cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cach..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (37 samples, 0.02%)</title><rect x="40.3124%" y="261" width="0.0199%" height="15" fill="rgb(220,193,23)" fg:x="75048" fg:w="37"/><text x="40.5624%" y="271.50"></text></g><g><title>libsystem_m.dylib`log2 (20 samples, 0.01%)</title><rect x="40.3323%" y="277" width="0.0107%" height="15" fill="rgb(230,90,52)" fg:x="75085" fg:w="20"/><text x="40.5823%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (144 samples, 0.08%)</title><rect x="40.3505%" y="277" width="0.0774%" height="15" fill="rgb(252,106,19)" fg:x="75119" fg:w="144"/><text x="40.6005%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (239 samples, 0.13%)</title><rect x="40.4279%" y="277" width="0.1284%" height="15" fill="rgb(206,74,20)" fg:x="75263" fg:w="239"/><text x="40.6779%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (205 samples, 0.11%)</title><rect x="40.5563%" y="277" width="0.1101%" height="15" fill="rgb(230,138,44)" fg:x="75502" fg:w="205"/><text x="40.8063%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (210 samples, 0.11%)</title><rect x="40.6664%" y="277" width="0.1128%" height="15" fill="rgb(235,182,43)" fg:x="75707" fg:w="210"/><text x="40.9164%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (106 samples, 0.06%)</title><rect x="40.7819%" y="277" width="0.0569%" height="15" fill="rgb(242,16,51)" fg:x="75922" fg:w="106"/><text x="41.0319%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (54 samples, 0.03%)</title><rect x="40.8388%" y="277" width="0.0290%" height="15" fill="rgb(248,9,4)" fg:x="76028" fg:w="54"/><text x="41.0888%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (33 samples, 0.02%)</title><rect x="40.8678%" y="277" width="0.0177%" height="15" fill="rgb(210,31,22)" fg:x="76082" fg:w="33"/><text x="41.1178%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (68,279 samples, 36.68%)</title><rect x="4.2188%" y="293" width="36.6764%" height="15" fill="rgb(239,54,39)" fg:x="7854" fg:w="68279"/><text x="4.4688%" y="303.50">cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache:..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (62 samples, 0.03%)</title><rect x="40.9103%" y="293" width="0.0333%" height="15" fill="rgb(230,99,41)" fg:x="76161" fg:w="62"/><text x="41.1603%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (100 samples, 0.05%)</title><rect x="40.9436%" y="293" width="0.0537%" height="15" fill="rgb(253,106,12)" fg:x="76223" fg:w="100"/><text x="41.1936%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (116 samples, 0.06%)</title><rect x="40.9973%" y="293" width="0.0623%" height="15" fill="rgb(213,46,41)" fg:x="76323" fg:w="116"/><text x="41.2473%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (99 samples, 0.05%)</title><rect x="41.0596%" y="293" width="0.0532%" height="15" fill="rgb(215,133,35)" fg:x="76439" fg:w="99"/><text x="41.3096%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.01%)</title><rect x="41.1155%" y="293" width="0.0124%" height="15" fill="rgb(213,28,5)" fg:x="76543" fg:w="23"/><text x="41.3655%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (24 samples, 0.01%)</title><rect x="41.1310%" y="293" width="0.0129%" height="15" fill="rgb(215,77,49)" fg:x="76572" fg:w="24"/><text x="41.3810%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (69,785 samples, 37.49%)</title><rect x="3.6634%" y="309" width="37.4854%" height="15" fill="rgb(248,100,22)" fg:x="6820" fg:w="69785"/><text x="3.9134%" y="319.50">cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (30 samples, 0.02%)</title><rect x="41.1541%" y="309" width="0.0161%" height="15" fill="rgb(208,67,9)" fg:x="76615" fg:w="30"/><text x="41.4041%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (55 samples, 0.03%)</title><rect x="41.1702%" y="309" width="0.0295%" height="15" fill="rgb(219,133,21)" fg:x="76645" fg:w="55"/><text x="41.4202%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (56 samples, 0.03%)</title><rect x="41.1998%" y="309" width="0.0301%" height="15" fill="rgb(246,46,29)" fg:x="76700" fg:w="56"/><text x="41.4498%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (88 samples, 0.05%)</title><rect x="41.2299%" y="309" width="0.0473%" height="15" fill="rgb(246,185,52)" fg:x="76756" fg:w="88"/><text x="41.4799%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.01%)</title><rect x="41.2793%" y="309" width="0.0102%" height="15" fill="rgb(252,136,11)" fg:x="76848" fg:w="19"/><text x="41.5293%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (70,879 samples, 38.07%)</title><rect x="3.2278%" y="325" width="38.0730%" height="15" fill="rgb(219,138,53)" fg:x="6009" fg:w="70879"/><text x="3.4778%" y="335.50">cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::a..</text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.02%)</title><rect x="41.3201%" y="325" width="0.0183%" height="15" fill="rgb(211,51,23)" fg:x="76924" fg:w="34"/><text x="41.5701%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (85 samples, 0.05%)</title><rect x="41.3384%" y="325" width="0.0457%" height="15" fill="rgb(247,221,28)" fg:x="76958" fg:w="85"/><text x="41.5884%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (49 samples, 0.03%)</title><rect x="41.3577%" y="309" width="0.0263%" height="15" fill="rgb(251,222,45)" fg:x="76994" fg:w="49"/><text x="41.6077%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (46 samples, 0.02%)</title><rect x="41.3840%" y="325" width="0.0247%" height="15" fill="rgb(217,162,53)" fg:x="77043" fg:w="46"/><text x="41.6340%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (60 samples, 0.03%)</title><rect x="41.4087%" y="325" width="0.0322%" height="15" fill="rgb(229,93,14)" fg:x="77089" fg:w="60"/><text x="41.6587%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (52 samples, 0.03%)</title><rect x="41.4130%" y="309" width="0.0279%" height="15" fill="rgb(209,67,49)" fg:x="77097" fg:w="52"/><text x="41.6630%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (26 samples, 0.01%)</title><rect x="41.4270%" y="293" width="0.0140%" height="15" fill="rgb(213,87,29)" fg:x="77123" fg:w="26"/><text x="41.6770%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (71,859 samples, 38.60%)</title><rect x="2.8561%" y="341" width="38.5994%" height="15" fill="rgb(205,151,52)" fg:x="5317" fg:w="71859"/><text x="3.1061%" y="351.50">cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::ad..</text></g><g><title>libsystem_malloc.dylib`free_small (53 samples, 0.03%)</title><rect x="41.4727%" y="341" width="0.0285%" height="15" fill="rgb(253,215,39)" fg:x="77208" fg:w="53"/><text x="41.7227%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.02%)</title><rect x="41.5060%" y="341" width="0.0177%" height="15" fill="rgb(221,220,41)" fg:x="77270" fg:w="33"/><text x="41.7560%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (21 samples, 0.01%)</title><rect x="41.5124%" y="325" width="0.0113%" height="15" fill="rgb(218,133,21)" fg:x="77282" fg:w="21"/><text x="41.7624%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (72,551 samples, 38.97%)</title><rect x="2.5622%" y="357" width="38.9711%" height="15" fill="rgb(221,193,43)" fg:x="4770" fg:w="72551"/><text x="2.8122%" y="367.50">cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::add..</text></g><g><title>libsystem_malloc.dylib`free_small (53 samples, 0.03%)</title><rect x="41.5393%" y="357" width="0.0285%" height="15" fill="rgb(240,128,52)" fg:x="77332" fg:w="53"/><text x="41.7893%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (20 samples, 0.01%)</title><rect x="41.5779%" y="357" width="0.0107%" height="15" fill="rgb(253,114,12)" fg:x="77404" fg:w="20"/><text x="41.8279%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (73,180 samples, 39.31%)</title><rect x="2.2818%" y="373" width="39.3090%" height="15" fill="rgb(215,223,47)" fg:x="4248" fg:w="73180"/><text x="2.5318%" y="383.50">cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::add..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 0.01%)</title><rect x="41.5957%" y="357" width="0.0113%" height="15" fill="rgb(248,225,23)" fg:x="77437" fg:w="21"/><text x="41.8457%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (75 samples, 0.04%)</title><rect x="41.6188%" y="357" width="0.0403%" height="15" fill="rgb(250,108,0)" fg:x="77480" fg:w="75"/><text x="41.8688%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 0.02%)</title><rect x="41.6682%" y="341" width="0.0177%" height="15" fill="rgb(228,208,7)" fg:x="77572" fg:w="33"/><text x="41.9182%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.02%)</title><rect x="41.6924%" y="341" width="0.0172%" height="15" fill="rgb(244,45,10)" fg:x="77617" fg:w="32"/><text x="41.9424%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (30 samples, 0.02%)</title><rect x="41.6934%" y="325" width="0.0161%" height="15" fill="rgb(207,125,25)" fg:x="77619" fg:w="30"/><text x="41.9434%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (22 samples, 0.01%)</title><rect x="41.6977%" y="309" width="0.0118%" height="15" fill="rgb(210,195,18)" fg:x="77627" fg:w="22"/><text x="41.9477%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (105 samples, 0.06%)</title><rect x="41.7101%" y="341" width="0.0564%" height="15" fill="rgb(249,80,12)" fg:x="77650" fg:w="105"/><text x="41.9601%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (55 samples, 0.03%)</title><rect x="41.7772%" y="325" width="0.0295%" height="15" fill="rgb(221,65,9)" fg:x="77775" fg:w="55"/><text x="42.0272%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (33 samples, 0.02%)</title><rect x="41.8293%" y="277" width="0.0177%" height="15" fill="rgb(235,49,36)" fg:x="77872" fg:w="33"/><text x="42.0793%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (49 samples, 0.03%)</title><rect x="41.8218%" y="309" width="0.0263%" height="15" fill="rgb(225,32,20)" fg:x="77858" fg:w="49"/><text x="42.0718%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (46 samples, 0.02%)</title><rect x="41.8234%" y="293" width="0.0247%" height="15" fill="rgb(215,141,46)" fg:x="77861" fg:w="46"/><text x="42.0734%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (57 samples, 0.03%)</title><rect x="41.8181%" y="325" width="0.0306%" height="15" fill="rgb(250,160,47)" fg:x="77851" fg:w="57"/><text x="42.0681%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (76 samples, 0.04%)</title><rect x="41.8503%" y="325" width="0.0408%" height="15" fill="rgb(216,222,40)" fg:x="77911" fg:w="76"/><text x="42.1003%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (35 samples, 0.02%)</title><rect x="41.8911%" y="325" width="0.0188%" height="15" fill="rgb(234,217,39)" fg:x="77987" fg:w="35"/><text x="42.1411%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (90 samples, 0.05%)</title><rect x="41.9276%" y="309" width="0.0483%" height="15" fill="rgb(207,178,40)" fg:x="78055" fg:w="90"/><text x="42.1776%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (44 samples, 0.02%)</title><rect x="41.9523%" y="293" width="0.0236%" height="15" fill="rgb(221,136,13)" fg:x="78101" fg:w="44"/><text x="42.2023%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (63 samples, 0.03%)</title><rect x="42.0184%" y="261" width="0.0338%" height="15" fill="rgb(249,199,10)" fg:x="78224" fg:w="63"/><text x="42.2684%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (87 samples, 0.05%)</title><rect x="42.0077%" y="293" width="0.0467%" height="15" fill="rgb(249,222,13)" fg:x="78204" fg:w="87"/><text x="42.2577%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (78 samples, 0.04%)</title><rect x="42.0125%" y="277" width="0.0419%" height="15" fill="rgb(244,185,38)" fg:x="78213" fg:w="78"/><text x="42.2625%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (101 samples, 0.05%)</title><rect x="42.0012%" y="309" width="0.0543%" height="15" fill="rgb(236,202,9)" fg:x="78192" fg:w="101"/><text x="42.2512%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (104 samples, 0.06%)</title><rect x="42.0571%" y="309" width="0.0559%" height="15" fill="rgb(250,229,37)" fg:x="78296" fg:w="104"/><text x="42.3071%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (19 samples, 0.01%)</title><rect x="42.1130%" y="309" width="0.0102%" height="15" fill="rgb(206,174,23)" fg:x="78400" fg:w="19"/><text x="42.3630%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (224 samples, 0.12%)</title><rect x="42.1667%" y="293" width="0.1203%" height="15" fill="rgb(211,33,43)" fg:x="78500" fg:w="224"/><text x="42.4167%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (95 samples, 0.05%)</title><rect x="42.2360%" y="277" width="0.0510%" height="15" fill="rgb(245,58,50)" fg:x="78629" fg:w="95"/><text x="42.4860%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (30 samples, 0.02%)</title><rect x="42.2870%" y="293" width="0.0161%" height="15" fill="rgb(244,68,36)" fg:x="78724" fg:w="30"/><text x="42.5370%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.01%)</title><rect x="42.3708%" y="229" width="0.0140%" height="15" fill="rgb(232,229,15)" fg:x="78880" fg:w="26"/><text x="42.6208%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (20 samples, 0.01%)</title><rect x="42.3848%" y="229" width="0.0107%" height="15" fill="rgb(254,30,23)" fg:x="78906" fg:w="20"/><text x="42.6348%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (35 samples, 0.02%)</title><rect x="42.3955%" y="229" width="0.0188%" height="15" fill="rgb(235,160,14)" fg:x="78926" fg:w="35"/><text x="42.6455%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (28 samples, 0.02%)</title><rect x="42.3993%" y="213" width="0.0150%" height="15" fill="rgb(212,155,44)" fg:x="78933" fg:w="28"/><text x="42.6493%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (109 samples, 0.06%)</title><rect x="42.3606%" y="245" width="0.0585%" height="15" fill="rgb(226,2,50)" fg:x="78861" fg:w="109"/><text x="42.6106%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (152 samples, 0.08%)</title><rect x="42.3412%" y="277" width="0.0816%" height="15" fill="rgb(234,177,6)" fg:x="78825" fg:w="152"/><text x="42.5912%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (130 samples, 0.07%)</title><rect x="42.3531%" y="261" width="0.0698%" height="15" fill="rgb(217,24,9)" fg:x="78847" fg:w="130"/><text x="42.6031%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (185 samples, 0.10%)</title><rect x="42.3262%" y="293" width="0.0994%" height="15" fill="rgb(220,13,46)" fg:x="78797" fg:w="185"/><text x="42.5762%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (143 samples, 0.08%)</title><rect x="42.4272%" y="293" width="0.0768%" height="15" fill="rgb(239,221,27)" fg:x="78985" fg:w="143"/><text x="42.6772%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (41 samples, 0.02%)</title><rect x="42.5040%" y="293" width="0.0220%" height="15" fill="rgb(222,198,25)" fg:x="79128" fg:w="41"/><text x="42.7540%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (341 samples, 0.18%)</title><rect x="42.5932%" y="277" width="0.1832%" height="15" fill="rgb(211,99,13)" fg:x="79294" fg:w="341"/><text x="42.8432%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (190 samples, 0.10%)</title><rect x="42.6743%" y="261" width="0.1021%" height="15" fill="rgb(232,111,31)" fg:x="79445" fg:w="190"/><text x="42.9243%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (48 samples, 0.03%)</title><rect x="42.7763%" y="277" width="0.0258%" height="15" fill="rgb(245,82,37)" fg:x="79635" fg:w="48"/><text x="43.0263%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (52 samples, 0.03%)</title><rect x="42.8021%" y="277" width="0.0279%" height="15" fill="rgb(227,149,46)" fg:x="79683" fg:w="52"/><text x="43.0521%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (50 samples, 0.03%)</title><rect x="42.8505%" y="277" width="0.0269%" height="15" fill="rgb(218,36,50)" fg:x="79773" fg:w="50"/><text x="43.1005%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (22 samples, 0.01%)</title><rect x="42.9106%" y="245" width="0.0118%" height="15" fill="rgb(226,80,48)" fg:x="79885" fg:w="22"/><text x="43.1606%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (37 samples, 0.02%)</title><rect x="42.9670%" y="213" width="0.0199%" height="15" fill="rgb(238,224,15)" fg:x="79990" fg:w="37"/><text x="43.2170%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (81 samples, 0.04%)</title><rect x="42.9509%" y="229" width="0.0435%" height="15" fill="rgb(241,136,10)" fg:x="79960" fg:w="81"/><text x="43.2009%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (178 samples, 0.10%)</title><rect x="42.9026%" y="261" width="0.0956%" height="15" fill="rgb(208,32,45)" fg:x="79870" fg:w="178"/><text x="43.1526%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (141 samples, 0.08%)</title><rect x="42.9224%" y="245" width="0.0757%" height="15" fill="rgb(207,135,9)" fg:x="79907" fg:w="141"/><text x="43.1724%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (229 samples, 0.12%)</title><rect x="42.8773%" y="277" width="0.1230%" height="15" fill="rgb(206,86,44)" fg:x="79823" fg:w="229"/><text x="43.1273%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (197 samples, 0.11%)</title><rect x="43.0009%" y="277" width="0.1058%" height="15" fill="rgb(245,177,15)" fg:x="80053" fg:w="197"/><text x="43.2509%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (69 samples, 0.04%)</title><rect x="43.1067%" y="277" width="0.0371%" height="15" fill="rgb(206,64,50)" fg:x="80250" fg:w="69"/><text x="43.3567%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (468 samples, 0.25%)</title><rect x="43.2614%" y="261" width="0.2514%" height="15" fill="rgb(234,36,40)" fg:x="80538" fg:w="468"/><text x="43.5114%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (356 samples, 0.19%)</title><rect x="43.3216%" y="245" width="0.1912%" height="15" fill="rgb(213,64,8)" fg:x="80650" fg:w="356"/><text x="43.5716%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (74 samples, 0.04%)</title><rect x="43.5128%" y="261" width="0.0397%" height="15" fill="rgb(210,75,36)" fg:x="81006" fg:w="74"/><text x="43.7628%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (75 samples, 0.04%)</title><rect x="43.5525%" y="261" width="0.0403%" height="15" fill="rgb(229,88,21)" fg:x="81080" fg:w="75"/><text x="43.8025%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (58 samples, 0.03%)</title><rect x="43.5928%" y="261" width="0.0312%" height="15" fill="rgb(252,204,47)" fg:x="81155" fg:w="58"/><text x="43.8428%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (60 samples, 0.03%)</title><rect x="43.6422%" y="261" width="0.0322%" height="15" fill="rgb(208,77,27)" fg:x="81247" fg:w="60"/><text x="43.8922%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$realloc (23 samples, 0.01%)</title><rect x="43.7024%" y="245" width="0.0124%" height="15" fill="rgb(221,76,26)" fg:x="81359" fg:w="23"/><text x="43.9524%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (67 samples, 0.04%)</title><rect x="43.7335%" y="229" width="0.0360%" height="15" fill="rgb(225,139,18)" fg:x="81417" fg:w="67"/><text x="43.9835%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (68 samples, 0.04%)</title><rect x="43.8447%" y="197" width="0.0365%" height="15" fill="rgb(230,137,11)" fg:x="81624" fg:w="68"/><text x="44.0947%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (163 samples, 0.09%)</title><rect x="43.8152%" y="213" width="0.0876%" height="15" fill="rgb(212,28,1)" fg:x="81569" fg:w="163"/><text x="44.0652%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (40 samples, 0.02%)</title><rect x="43.8813%" y="197" width="0.0215%" height="15" fill="rgb(248,164,17)" fg:x="81692" fg:w="40"/><text x="44.1313%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (364 samples, 0.20%)</title><rect x="43.7158%" y="245" width="0.1955%" height="15" fill="rgb(222,171,42)" fg:x="81384" fg:w="364"/><text x="43.9658%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (264 samples, 0.14%)</title><rect x="43.7695%" y="229" width="0.1418%" height="15" fill="rgb(243,84,45)" fg:x="81484" fg:w="264"/><text x="44.0195%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (449 samples, 0.24%)</title><rect x="43.6745%" y="261" width="0.2412%" height="15" fill="rgb(252,49,23)" fg:x="81307" fg:w="449"/><text x="43.9245%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (217 samples, 0.12%)</title><rect x="43.9189%" y="261" width="0.1166%" height="15" fill="rgb(215,19,7)" fg:x="81762" fg:w="217"/><text x="44.1689%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (118 samples, 0.06%)</title><rect x="44.0354%" y="261" width="0.0634%" height="15" fill="rgb(238,81,41)" fg:x="81979" fg:w="118"/><text x="44.2854%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (476 samples, 0.26%)</title><rect x="44.3212%" y="245" width="0.2557%" height="15" fill="rgb(210,199,37)" fg:x="82511" fg:w="476"/><text x="44.5712%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (401 samples, 0.22%)</title><rect x="44.3615%" y="229" width="0.2154%" height="15" fill="rgb(244,192,49)" fg:x="82586" fg:w="401"/><text x="44.6115%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (31 samples, 0.02%)</title><rect x="44.5769%" y="245" width="0.0167%" height="15" fill="rgb(226,211,11)" fg:x="82987" fg:w="31"/><text x="44.8269%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$realloc (40 samples, 0.02%)</title><rect x="44.6408%" y="229" width="0.0215%" height="15" fill="rgb(236,162,54)" fg:x="83106" fg:w="40"/><text x="44.8908%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (102 samples, 0.05%)</title><rect x="44.7010%" y="213" width="0.0548%" height="15" fill="rgb(220,229,9)" fg:x="83218" fg:w="102"/><text x="44.9510%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (31 samples, 0.02%)</title><rect x="44.8471%" y="197" width="0.0167%" height="15" fill="rgb(250,87,22)" fg:x="83490" fg:w="31"/><text x="45.0971%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (137 samples, 0.07%)</title><rect x="44.9207%" y="181" width="0.0736%" height="15" fill="rgb(239,43,17)" fg:x="83627" fg:w="137"/><text x="45.1707%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (340 samples, 0.18%)</title><rect x="44.8637%" y="197" width="0.1826%" height="15" fill="rgb(231,177,25)" fg:x="83521" fg:w="340"/><text x="45.1137%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (97 samples, 0.05%)</title><rect x="44.9943%" y="181" width="0.0521%" height="15" fill="rgb(219,179,1)" fg:x="83764" fg:w="97"/><text x="45.2443%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (727 samples, 0.39%)</title><rect x="44.6720%" y="229" width="0.3905%" height="15" fill="rgb(238,219,53)" fg:x="83164" fg:w="727"/><text x="44.9220%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (571 samples, 0.31%)</title><rect x="44.7558%" y="213" width="0.3067%" height="15" fill="rgb(232,167,36)" fg:x="83320" fg:w="571"/><text x="45.0058%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (30 samples, 0.02%)</title><rect x="45.0464%" y="197" width="0.0161%" height="15" fill="rgb(244,19,51)" fg:x="83861" fg:w="30"/><text x="45.2964%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (884 samples, 0.47%)</title><rect x="44.6021%" y="245" width="0.4748%" height="15" fill="rgb(224,6,22)" fg:x="83034" fg:w="884"/><text x="44.8521%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (27 samples, 0.01%)</title><rect x="45.0625%" y="229" width="0.0145%" height="15" fill="rgb(224,145,5)" fg:x="83891" fg:w="27"/><text x="45.3125%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (97 samples, 0.05%)</title><rect x="45.0840%" y="245" width="0.0521%" height="15" fill="rgb(234,130,49)" fg:x="83931" fg:w="97"/><text x="45.3340%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (22 samples, 0.01%)</title><rect x="45.1361%" y="245" width="0.0118%" height="15" fill="rgb(254,6,2)" fg:x="84028" fg:w="22"/><text x="45.3861%" y="255.50"></text></g><g><title>libsystem_m.dylib`log2 (127 samples, 0.07%)</title><rect x="45.1506%" y="245" width="0.0682%" height="15" fill="rgb(208,96,46)" fg:x="84055" fg:w="127"/><text x="45.4006%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (127 samples, 0.07%)</title><rect x="45.2188%" y="245" width="0.0682%" height="15" fill="rgb(239,3,39)" fg:x="84182" fg:w="127"/><text x="45.4688%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (763 samples, 0.41%)</title><rect x="45.2870%" y="245" width="0.4098%" height="15" fill="rgb(233,210,1)" fg:x="84309" fg:w="763"/><text x="45.5370%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (178 samples, 0.10%)</title><rect x="45.6969%" y="245" width="0.0956%" height="15" fill="rgb(244,137,37)" fg:x="85072" fg:w="178"/><text x="45.9469%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (148 samples, 0.08%)</title><rect x="45.7925%" y="245" width="0.0795%" height="15" fill="rgb(240,136,2)" fg:x="85250" fg:w="148"/><text x="46.0425%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (3,387 samples, 1.82%)</title><rect x="44.0988%" y="261" width="1.8193%" height="15" fill="rgb(239,18,37)" fg:x="82097" fg:w="3387"/><text x="44.3488%" y="271.50">c..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (86 samples, 0.05%)</title><rect x="45.8720%" y="245" width="0.0462%" height="15" fill="rgb(218,185,22)" fg:x="85398" fg:w="86"/><text x="46.1220%" y="255.50"></text></g><g><title>libsystem_m.dylib`log2 (55 samples, 0.03%)</title><rect x="45.9182%" y="261" width="0.0295%" height="15" fill="rgb(225,218,4)" fg:x="85484" fg:w="55"/><text x="46.1682%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (475 samples, 0.26%)</title><rect x="45.9477%" y="261" width="0.2551%" height="15" fill="rgb(230,182,32)" fg:x="85539" fg:w="475"/><text x="46.1977%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (500 samples, 0.27%)</title><rect x="46.2029%" y="261" width="0.2686%" height="15" fill="rgb(242,56,43)" fg:x="86014" fg:w="500"/><text x="46.4529%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (623 samples, 0.33%)</title><rect x="46.4714%" y="261" width="0.3346%" height="15" fill="rgb(233,99,24)" fg:x="86514" fg:w="623"/><text x="46.7214%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (795 samples, 0.43%)</title><rect x="46.8061%" y="261" width="0.4270%" height="15" fill="rgb(234,209,42)" fg:x="87137" fg:w="795"/><text x="47.0561%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (185 samples, 0.10%)</title><rect x="47.2331%" y="261" width="0.0994%" height="15" fill="rgb(227,7,12)" fg:x="87932" fg:w="185"/><text x="47.4831%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (99 samples, 0.05%)</title><rect x="47.3325%" y="261" width="0.0532%" height="15" fill="rgb(245,203,43)" fg:x="88117" fg:w="99"/><text x="47.5825%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (7,942 samples, 4.27%)</title><rect x="43.1438%" y="277" width="4.2661%" height="15" fill="rgb(238,205,33)" fg:x="80319" fg:w="7942"/><text x="43.3938%" y="287.50">cpu_b..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (45 samples, 0.02%)</title><rect x="47.3857%" y="261" width="0.0242%" height="15" fill="rgb(231,56,7)" fg:x="88216" fg:w="45"/><text x="47.6357%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (364 samples, 0.20%)</title><rect x="47.4195%" y="277" width="0.1955%" height="15" fill="rgb(244,186,29)" fg:x="88279" fg:w="364"/><text x="47.6695%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (249 samples, 0.13%)</title><rect x="47.6150%" y="277" width="0.1338%" height="15" fill="rgb(234,111,31)" fg:x="88643" fg:w="249"/><text x="47.8650%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (321 samples, 0.17%)</title><rect x="47.7488%" y="277" width="0.1724%" height="15" fill="rgb(241,149,10)" fg:x="88892" fg:w="321"/><text x="47.9988%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (361 samples, 0.19%)</title><rect x="47.9212%" y="277" width="0.1939%" height="15" fill="rgb(249,206,44)" fg:x="89213" fg:w="361"/><text x="48.1712%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (125 samples, 0.07%)</title><rect x="48.1151%" y="277" width="0.0671%" height="15" fill="rgb(251,153,30)" fg:x="89574" fg:w="125"/><text x="48.3651%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (41 samples, 0.02%)</title><rect x="48.1823%" y="277" width="0.0220%" height="15" fill="rgb(239,152,38)" fg:x="89699" fg:w="41"/><text x="48.4323%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (10,587 samples, 5.69%)</title><rect x="42.5260%" y="293" width="5.6869%" height="15" fill="rgb(249,139,47)" fg:x="79169" fg:w="10587"/><text x="42.7760%" y="303.50">cpu_ben..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (122 samples, 0.07%)</title><rect x="48.2220%" y="293" width="0.0655%" height="15" fill="rgb(244,64,35)" fg:x="89773" fg:w="122"/><text x="48.4720%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (130 samples, 0.07%)</title><rect x="48.2875%" y="293" width="0.0698%" height="15" fill="rgb(216,46,15)" fg:x="89895" fg:w="130"/><text x="48.5375%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (174 samples, 0.09%)</title><rect x="48.3574%" y="293" width="0.0935%" height="15" fill="rgb(250,74,19)" fg:x="90025" fg:w="174"/><text x="48.6074%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (143 samples, 0.08%)</title><rect x="48.4508%" y="293" width="0.0768%" height="15" fill="rgb(249,42,33)" fg:x="90199" fg:w="143"/><text x="48.7008%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (65 samples, 0.03%)</title><rect x="48.5293%" y="293" width="0.0349%" height="15" fill="rgb(242,149,17)" fg:x="90345" fg:w="65"/><text x="48.7793%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (22 samples, 0.01%)</title><rect x="48.5663%" y="293" width="0.0118%" height="15" fill="rgb(244,29,21)" fg:x="90414" fg:w="22"/><text x="48.8163%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (12,021 samples, 6.46%)</title><rect x="42.1232%" y="309" width="6.4571%" height="15" fill="rgb(220,130,37)" fg:x="78419" fg:w="12021"/><text x="42.3732%" y="319.50">cpu_benc..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (54 samples, 0.03%)</title><rect x="48.5857%" y="309" width="0.0290%" height="15" fill="rgb(211,67,2)" fg:x="90450" fg:w="54"/><text x="48.8357%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (68 samples, 0.04%)</title><rect x="48.6147%" y="309" width="0.0365%" height="15" fill="rgb(235,68,52)" fg:x="90504" fg:w="68"/><text x="48.8647%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (97 samples, 0.05%)</title><rect x="48.6512%" y="309" width="0.0521%" height="15" fill="rgb(246,142,3)" fg:x="90572" fg:w="97"/><text x="48.9012%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (79 samples, 0.04%)</title><rect x="48.7033%" y="309" width="0.0424%" height="15" fill="rgb(241,25,7)" fg:x="90669" fg:w="79"/><text x="48.9533%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (37 samples, 0.02%)</title><rect x="48.7468%" y="309" width="0.0199%" height="15" fill="rgb(242,119,39)" fg:x="90750" fg:w="37"/><text x="48.9968%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (12,793 samples, 6.87%)</title><rect x="41.9099%" y="325" width="6.8718%" height="15" fill="rgb(241,98,45)" fg:x="78022" fg:w="12793"/><text x="42.1599%" y="335.50">cpu_bench..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.02%)</title><rect x="48.7833%" y="325" width="0.0167%" height="15" fill="rgb(254,28,30)" fg:x="90818" fg:w="31"/><text x="49.0333%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (26 samples, 0.01%)</title><rect x="48.8000%" y="325" width="0.0140%" height="15" fill="rgb(241,142,54)" fg:x="90849" fg:w="26"/><text x="49.0500%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.02%)</title><rect x="48.8140%" y="325" width="0.0183%" height="15" fill="rgb(222,85,15)" fg:x="90875" fg:w="34"/><text x="49.0640%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (39 samples, 0.02%)</title><rect x="48.8328%" y="325" width="0.0209%" height="15" fill="rgb(210,85,47)" fg:x="90910" fg:w="39"/><text x="49.0828%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (33 samples, 0.02%)</title><rect x="48.8553%" y="325" width="0.0177%" height="15" fill="rgb(224,206,25)" fg:x="90952" fg:w="33"/><text x="49.1053%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (13,248 samples, 7.12%)</title><rect x="41.7686%" y="341" width="7.1162%" height="15" fill="rgb(243,201,19)" fg:x="77759" fg:w="13248"/><text x="42.0186%" y="351.50">cpu_bench_..</text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.01%)</title><rect x="48.8956%" y="341" width="0.0118%" height="15" fill="rgb(236,59,4)" fg:x="91027" fg:w="22"/><text x="49.1456%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.01%)</title><rect x="48.9074%" y="341" width="0.0102%" height="15" fill="rgb(254,179,45)" fg:x="91049" fg:w="19"/><text x="49.1574%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (13,528 samples, 7.27%)</title><rect x="41.6601%" y="357" width="7.2666%" height="15" fill="rgb(226,14,10)" fg:x="77557" fg:w="13528"/><text x="41.9101%" y="367.50">cpu_bench_..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (13,698 samples, 7.36%)</title><rect x="41.5908%" y="373" width="7.3579%" height="15" fill="rgb(244,27,41)" fg:x="77428" fg:w="13698"/><text x="41.8408%" y="383.50">cpu_bench_..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (87,303 samples, 46.90%)</title><rect x="2.1094%" y="389" width="46.8952%" height="15" fill="rgb(235,35,32)" fg:x="3927" fg:w="87303"/><text x="2.3594%" y="399.50">cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend</text></g><g><title>libsystem_platform.dylib`_platform_memmove (46 samples, 0.02%)</title><rect x="48.9799%" y="373" width="0.0247%" height="15" fill="rgb(218,68,31)" fg:x="91184" fg:w="46"/><text x="49.2299%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (27 samples, 0.01%)</title><rect x="49.0175%" y="389" width="0.0145%" height="15" fill="rgb(207,120,37)" fg:x="91254" fg:w="27"/><text x="49.2675%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (91,142 samples, 48.96%)</title><rect x="0.0859%" y="405" width="48.9574%" height="15" fill="rgb(227,98,0)" fg:x="160" fg:w="91142"/><text x="0.3359%" y="415.50">cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter..</text></g><g><title>libsystem_platform.dylib`_platform_memset (21 samples, 0.01%)</title><rect x="49.0320%" y="389" width="0.0113%" height="15" fill="rgb(207,7,3)" fg:x="91281" fg:w="21"/><text x="49.2820%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.01%)</title><rect x="49.0842%" y="389" width="0.0118%" height="15" fill="rgb(206,98,19)" fg:x="91378" fg:w="22"/><text x="49.3342%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (46 samples, 0.02%)</title><rect x="49.1207%" y="373" width="0.0247%" height="15" fill="rgb(217,5,26)" fg:x="91446" fg:w="46"/><text x="49.3707%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (30 samples, 0.02%)</title><rect x="49.1454%" y="373" width="0.0161%" height="15" fill="rgb(235,190,38)" fg:x="91492" fg:w="30"/><text x="49.3954%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (27 samples, 0.01%)</title><rect x="49.1696%" y="373" width="0.0145%" height="15" fill="rgb(247,86,24)" fg:x="91537" fg:w="27"/><text x="49.4196%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.01%)</title><rect x="49.1846%" y="373" width="0.0140%" height="15" fill="rgb(205,101,16)" fg:x="91565" fg:w="26"/><text x="49.4346%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (68 samples, 0.04%)</title><rect x="49.2705%" y="357" width="0.0365%" height="15" fill="rgb(246,168,33)" fg:x="91725" fg:w="68"/><text x="49.5205%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (29 samples, 0.02%)</title><rect x="49.2915%" y="341" width="0.0156%" height="15" fill="rgb(231,114,1)" fg:x="91764" fg:w="29"/><text x="49.5415%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (20 samples, 0.01%)</title><rect x="49.3076%" y="357" width="0.0107%" height="15" fill="rgb(207,184,53)" fg:x="91794" fg:w="20"/><text x="49.5576%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (76 samples, 0.04%)</title><rect x="49.3259%" y="357" width="0.0408%" height="15" fill="rgb(224,95,51)" fg:x="91828" fg:w="76"/><text x="49.5759%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (375 samples, 0.20%)</title><rect x="49.3667%" y="357" width="0.2014%" height="15" fill="rgb(212,188,45)" fg:x="91904" fg:w="375"/><text x="49.6167%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (786 samples, 0.42%)</title><rect x="49.1986%" y="373" width="0.4222%" height="15" fill="rgb(223,154,38)" fg:x="91591" fg:w="786"/><text x="49.4486%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (92 samples, 0.05%)</title><rect x="49.5714%" y="357" width="0.0494%" height="15" fill="rgb(251,22,52)" fg:x="92285" fg:w="92"/><text x="49.8214%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (40 samples, 0.02%)</title><rect x="49.6460%" y="357" width="0.0215%" height="15" fill="rgb(229,209,22)" fg:x="92424" fg:w="40"/><text x="49.8960%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (98 samples, 0.05%)</title><rect x="49.6208%" y="373" width="0.0526%" height="15" fill="rgb(234,138,34)" fg:x="92377" fg:w="98"/><text x="49.8708%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (177 samples, 0.10%)</title><rect x="49.6734%" y="373" width="0.0951%" height="15" fill="rgb(212,95,11)" fg:x="92475" fg:w="177"/><text x="49.9234%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (171 samples, 0.09%)</title><rect x="49.7685%" y="373" width="0.0919%" height="15" fill="rgb(240,179,47)" fg:x="92652" fg:w="171"/><text x="50.0185%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (297 samples, 0.16%)</title><rect x="49.8603%" y="373" width="0.1595%" height="15" fill="rgb(240,163,11)" fg:x="92823" fg:w="297"/><text x="50.1103%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (229 samples, 0.12%)</title><rect x="50.0209%" y="373" width="0.1230%" height="15" fill="rgb(236,37,12)" fg:x="93122" fg:w="229"/><text x="50.2709%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (2,021 samples, 1.09%)</title><rect x="49.0960%" y="389" width="1.0856%" height="15" fill="rgb(232,164,16)" fg:x="91400" fg:w="2021"/><text x="49.3460%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (70 samples, 0.04%)</title><rect x="50.1440%" y="373" width="0.0376%" height="15" fill="rgb(244,205,15)" fg:x="93351" fg:w="70"/><text x="50.3940%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (33 samples, 0.02%)</title><rect x="50.1885%" y="373" width="0.0177%" height="15" fill="rgb(223,117,47)" fg:x="93434" fg:w="33"/><text x="50.4385%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (100 samples, 0.05%)</title><rect x="50.1816%" y="389" width="0.0537%" height="15" fill="rgb(244,107,35)" fg:x="93421" fg:w="100"/><text x="50.4316%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (65 samples, 0.03%)</title><rect x="50.2353%" y="389" width="0.0349%" height="15" fill="rgb(205,140,8)" fg:x="93521" fg:w="65"/><text x="50.4853%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (63 samples, 0.03%)</title><rect x="50.2702%" y="389" width="0.0338%" height="15" fill="rgb(228,84,46)" fg:x="93586" fg:w="63"/><text x="50.5202%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (88 samples, 0.05%)</title><rect x="50.3040%" y="389" width="0.0473%" height="15" fill="rgb(254,188,9)" fg:x="93649" fg:w="88"/><text x="50.5540%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (64 samples, 0.03%)</title><rect x="50.3524%" y="389" width="0.0344%" height="15" fill="rgb(206,112,54)" fg:x="93739" fg:w="64"/><text x="50.6024%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (2,551 samples, 1.37%)</title><rect x="49.0482%" y="405" width="1.3703%" height="15" fill="rgb(216,84,49)" fg:x="91311" fg:w="2551"/><text x="49.2982%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (59 samples, 0.03%)</title><rect x="50.3868%" y="389" width="0.0317%" height="15" fill="rgb(214,194,35)" fg:x="93803" fg:w="59"/><text x="50.6368%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (82 samples, 0.04%)</title><rect x="52.2899%" y="341" width="0.0440%" height="15" fill="rgb(249,28,3)" fg:x="97346" fg:w="82"/><text x="52.5399%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (3,566 samples, 1.92%)</title><rect x="50.4190%" y="405" width="1.9155%" height="15" fill="rgb(222,56,52)" fg:x="93863" fg:w="3566"/><text x="50.6690%" y="415.50">c..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (91 samples, 0.05%)</title><rect x="52.2856%" y="389" width="0.0489%" height="15" fill="rgb(245,217,50)" fg:x="97338" fg:w="91"/><text x="52.5356%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (89 samples, 0.05%)</title><rect x="52.2867%" y="373" width="0.0478%" height="15" fill="rgb(213,201,24)" fg:x="97340" fg:w="89"/><text x="52.5367%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (84 samples, 0.05%)</title><rect x="52.2894%" y="357" width="0.0451%" height="15" fill="rgb(248,116,28)" fg:x="97345" fg:w="84"/><text x="52.5394%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.02%)</title><rect x="52.3484%" y="405" width="0.0188%" height="15" fill="rgb(219,72,43)" fg:x="97455" fg:w="35"/><text x="52.5984%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.01%)</title><rect x="52.3672%" y="405" width="0.0140%" height="15" fill="rgb(209,138,14)" fg:x="97490" fg:w="26"/><text x="52.6172%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (97,409 samples, 52.32%)</title><rect x="0.0843%" y="421" width="52.3237%" height="15" fill="rgb(222,18,33)" fg:x="157" fg:w="97409"/><text x="0.3343%" y="431.50">cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecF..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (48 samples, 0.03%)</title><rect x="52.3823%" y="405" width="0.0258%" height="15" fill="rgb(213,199,7)" fg:x="97518" fg:w="48"/><text x="52.6323%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`sha2::sha256::compress256 (5,198 samples, 2.79%)</title><rect x="52.4247%" y="405" width="2.7921%" height="15" fill="rgb(250,110,10)" fg:x="97597" fg:w="5198"/><text x="52.6747%" y="415.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::merkle_tree::merkelize (5,244 samples, 2.82%)</title><rect x="52.4113%" y="421" width="2.8168%" height="15" fill="rgb(248,123,6)" fg:x="97572" fg:w="5244"/><text x="52.6613%" y="431.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,898 samples, 8.54%)</title><rect x="55.2480%" y="373" width="8.5397%" height="15" fill="rgb(206,91,31)" fg:x="102853" fg:w="15898"/><text x="55.4980%" y="383.50">cpu_bench_v0..</text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1,087 samples, 0.58%)</title><rect x="63.8344%" y="325" width="0.5839%" height="15" fill="rgb(211,154,13)" fg:x="118838" fg:w="1087"/><text x="64.0844%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,114 samples, 9.19%)</title><rect x="55.2416%" y="389" width="9.1929%" height="15" fill="rgb(225,148,7)" fg:x="102841" fg:w="17114"/><text x="55.4916%" y="399.50">cpu_bench_v0-..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,199 samples, 0.64%)</title><rect x="63.7904%" y="373" width="0.6440%" height="15" fill="rgb(220,160,43)" fg:x="118756" fg:w="1199"/><text x="64.0404%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1,184 samples, 0.64%)</title><rect x="63.7984%" y="357" width="0.6360%" height="15" fill="rgb(213,52,39)" fg:x="118771" fg:w="1184"/><text x="64.0484%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1,145 samples, 0.62%)</title><rect x="63.8194%" y="341" width="0.6150%" height="15" fill="rgb(243,137,7)" fg:x="118810" fg:w="1145"/><text x="64.0694%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,151 samples, 9.21%)</title><rect x="55.2373%" y="405" width="9.2127%" height="15" fill="rgb(230,79,13)" fg:x="102833" fg:w="17151"/><text x="55.4873%" y="415.50">cpu_bench_v0-..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::xor_along_axis (29,249 samples, 15.71%)</title><rect x="64.4511%" y="405" width="15.7112%" height="15" fill="rgb(247,105,23)" fg:x="119986" fg:w="29249"/><text x="64.7011%" y="415.50">cpu_bench_v0-42868c86829..</text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (26 samples, 0.01%)</title><rect x="80.1989%" y="389" width="0.0140%" height="15" fill="rgb(223,179,41)" fg:x="149303" fg:w="26"/><text x="80.4489%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (47 samples, 0.03%)</title><rect x="80.2209%" y="389" width="0.0252%" height="15" fill="rgb(218,9,34)" fg:x="149344" fg:w="47"/><text x="80.4709%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (145 samples, 0.08%)</title><rect x="80.2493%" y="389" width="0.0779%" height="15" fill="rgb(222,106,8)" fg:x="149397" fg:w="145"/><text x="80.4993%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (135 samples, 0.07%)</title><rect x="80.2547%" y="373" width="0.0725%" height="15" fill="rgb(211,220,0)" fg:x="149407" fg:w="135"/><text x="80.5047%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (587 samples, 0.32%)</title><rect x="80.3342%" y="373" width="0.3153%" height="15" fill="rgb(229,52,16)" fg:x="149555" fg:w="587"/><text x="80.5842%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (890 samples, 0.48%)</title><rect x="80.1725%" y="405" width="0.4781%" height="15" fill="rgb(212,155,18)" fg:x="149254" fg:w="890"/><text x="80.4225%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (602 samples, 0.32%)</title><rect x="80.3272%" y="389" width="0.3234%" height="15" fill="rgb(242,21,14)" fg:x="149542" fg:w="602"/><text x="80.5772%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::computed_tprimes (47,345 samples, 25.43%)</title><rect x="55.2281%" y="421" width="25.4316%" height="15" fill="rgb(222,19,48)" fg:x="102816" fg:w="47345"/><text x="55.4781%" y="431.50">cpu_bench_v0-42868c868297afde`binius_rust..</text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (23 samples, 0.01%)</title><rect x="80.6866%" y="357" width="0.0124%" height="15" fill="rgb(232,45,27)" fg:x="150211" fg:w="23"/><text x="80.9366%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.02%)</title><rect x="80.7183%" y="357" width="0.0156%" height="15" fill="rgb(249,103,42)" fg:x="150270" fg:w="29"/><text x="80.9683%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (55 samples, 0.03%)</title><rect x="80.7596%" y="341" width="0.0295%" height="15" fill="rgb(246,81,33)" fg:x="150347" fg:w="55"/><text x="81.0096%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (43 samples, 0.02%)</title><rect x="80.7892%" y="341" width="0.0231%" height="15" fill="rgb(252,33,42)" fg:x="150402" fg:w="43"/><text x="81.0392%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (33 samples, 0.02%)</title><rect x="80.8123%" y="341" width="0.0177%" height="15" fill="rgb(209,212,41)" fg:x="150445" fg:w="33"/><text x="81.0623%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (40 samples, 0.02%)</title><rect x="80.8300%" y="341" width="0.0215%" height="15" fill="rgb(207,154,6)" fg:x="150478" fg:w="40"/><text x="81.0800%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (47 samples, 0.03%)</title><rect x="80.8515%" y="341" width="0.0252%" height="15" fill="rgb(223,64,47)" fg:x="150518" fg:w="47"/><text x="81.1015%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.01%)</title><rect x="80.8660%" y="325" width="0.0107%" height="15" fill="rgb(211,161,38)" fg:x="150545" fg:w="20"/><text x="81.1160%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (19 samples, 0.01%)</title><rect x="80.9589%" y="325" width="0.0102%" height="15" fill="rgb(219,138,40)" fg:x="150718" fg:w="19"/><text x="81.2089%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.01%)</title><rect x="80.9938%" y="309" width="0.0134%" height="15" fill="rgb(241,228,46)" fg:x="150783" fg:w="25"/><text x="81.2438%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (105 samples, 0.06%)</title><rect x="80.9740%" y="325" width="0.0564%" height="15" fill="rgb(223,209,38)" fg:x="150746" fg:w="105"/><text x="81.2240%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (43 samples, 0.02%)</title><rect x="81.0073%" y="309" width="0.0231%" height="15" fill="rgb(236,164,45)" fg:x="150808" fg:w="43"/><text x="81.2573%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (20 samples, 0.01%)</title><rect x="81.0411%" y="325" width="0.0107%" height="15" fill="rgb(231,15,5)" fg:x="150871" fg:w="20"/><text x="81.2911%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (103 samples, 0.06%)</title><rect x="81.0583%" y="325" width="0.0553%" height="15" fill="rgb(252,35,15)" fg:x="150903" fg:w="103"/><text x="81.3083%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (550 samples, 0.30%)</title><rect x="81.1136%" y="325" width="0.2954%" height="15" fill="rgb(248,181,18)" fg:x="151006" fg:w="550"/><text x="81.3636%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,122 samples, 0.60%)</title><rect x="80.8784%" y="341" width="0.6027%" height="15" fill="rgb(233,39,42)" fg:x="150568" fg:w="1122"/><text x="81.1284%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (133 samples, 0.07%)</title><rect x="81.4096%" y="325" width="0.0714%" height="15" fill="rgb(238,110,33)" fg:x="151557" fg:w="133"/><text x="81.6596%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.02%)</title><rect x="81.4939%" y="325" width="0.0167%" height="15" fill="rgb(233,195,10)" fg:x="151714" fg:w="31"/><text x="81.7439%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (67 samples, 0.04%)</title><rect x="81.5176%" y="325" width="0.0360%" height="15" fill="rgb(254,105,3)" fg:x="151758" fg:w="67"/><text x="81.7676%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (144 samples, 0.08%)</title><rect x="81.4810%" y="341" width="0.0774%" height="15" fill="rgb(221,225,9)" fg:x="151690" fg:w="144"/><text x="81.7310%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (269 samples, 0.14%)</title><rect x="81.5584%" y="341" width="0.1445%" height="15" fill="rgb(224,227,45)" fg:x="151834" fg:w="269"/><text x="81.8084%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (277 samples, 0.15%)</title><rect x="81.7029%" y="341" width="0.1488%" height="15" fill="rgb(229,198,43)" fg:x="152103" fg:w="277"/><text x="81.9529%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (496 samples, 0.27%)</title><rect x="81.8517%" y="341" width="0.2664%" height="15" fill="rgb(206,209,35)" fg:x="152380" fg:w="496"/><text x="82.1017%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (345 samples, 0.19%)</title><rect x="82.1181%" y="341" width="0.1853%" height="15" fill="rgb(245,195,53)" fg:x="152876" fg:w="345"/><text x="82.3681%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (3,035 samples, 1.63%)</title><rect x="80.7339%" y="357" width="1.6303%" height="15" fill="rgb(240,92,26)" fg:x="150299" fg:w="3035"/><text x="80.9839%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (113 samples, 0.06%)</title><rect x="82.3034%" y="341" width="0.0607%" height="15" fill="rgb(207,40,23)" fg:x="153221" fg:w="113"/><text x="82.5534%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (19 samples, 0.01%)</title><rect x="82.3856%" y="325" width="0.0102%" height="15" fill="rgb(223,111,35)" fg:x="153374" fg:w="19"/><text x="82.6356%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (49 samples, 0.03%)</title><rect x="82.3765%" y="341" width="0.0263%" height="15" fill="rgb(229,147,28)" fg:x="153357" fg:w="49"/><text x="82.6265%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (30 samples, 0.02%)</title><rect x="82.4114%" y="341" width="0.0161%" height="15" fill="rgb(211,29,28)" fg:x="153422" fg:w="30"/><text x="82.6614%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (157 samples, 0.08%)</title><rect x="82.3641%" y="357" width="0.0843%" height="15" fill="rgb(228,72,33)" fg:x="153334" fg:w="157"/><text x="82.6141%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (92 samples, 0.05%)</title><rect x="82.4485%" y="357" width="0.0494%" height="15" fill="rgb(205,214,31)" fg:x="153491" fg:w="92"/><text x="82.6985%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (91 samples, 0.05%)</title><rect x="82.4979%" y="357" width="0.0489%" height="15" fill="rgb(224,111,15)" fg:x="153583" fg:w="91"/><text x="82.7479%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (154 samples, 0.08%)</title><rect x="82.5468%" y="357" width="0.0827%" height="15" fill="rgb(253,21,26)" fg:x="153674" fg:w="154"/><text x="82.7968%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (114 samples, 0.06%)</title><rect x="82.6295%" y="357" width="0.0612%" height="15" fill="rgb(245,139,43)" fg:x="153828" fg:w="114"/><text x="82.8795%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (3,822 samples, 2.05%)</title><rect x="80.6732%" y="373" width="2.0530%" height="15" fill="rgb(252,170,7)" fg:x="150186" fg:w="3822"/><text x="80.9232%" y="383.50">c..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (66 samples, 0.04%)</title><rect x="82.6907%" y="357" width="0.0355%" height="15" fill="rgb(231,118,14)" fg:x="153942" fg:w="66"/><text x="82.9407%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (25 samples, 0.01%)</title><rect x="82.7299%" y="341" width="0.0134%" height="15" fill="rgb(238,83,0)" fg:x="154015" fg:w="25"/><text x="82.9799%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (36 samples, 0.02%)</title><rect x="82.7278%" y="357" width="0.0193%" height="15" fill="rgb(221,39,39)" fg:x="154011" fg:w="36"/><text x="82.9778%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::int_to_bigbin (40 samples, 0.02%)</title><rect x="82.7262%" y="373" width="0.0215%" height="15" fill="rgb(222,119,46)" fg:x="154008" fg:w="40"/><text x="82.9762%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.01%)</title><rect x="82.7477%" y="373" width="0.0134%" height="15" fill="rgb(222,165,49)" fg:x="154048" fg:w="25"/><text x="82.9977%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (43 samples, 0.02%)</title><rect x="82.7681%" y="373" width="0.0231%" height="15" fill="rgb(219,113,52)" fg:x="154086" fg:w="43"/><text x="83.0181%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.02%)</title><rect x="82.7917%" y="373" width="0.0161%" height="15" fill="rgb(214,7,15)" fg:x="154130" fg:w="30"/><text x="83.0417%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,004 samples, 2.15%)</title><rect x="80.6603%" y="389" width="2.1508%" height="15" fill="rgb(235,32,4)" fg:x="150162" fg:w="4004"/><text x="80.9103%" y="399.50">c..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,016 samples, 2.16%)</title><rect x="80.6603%" y="405" width="2.1572%" height="15" fill="rgb(238,90,54)" fg:x="150162" fg:w="4016"/><text x="80.9103%" y="415.50">c..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (4,047 samples, 2.17%)</title><rect x="80.6597%" y="421" width="2.1739%" height="15" fill="rgb(213,208,19)" fg:x="150161" fg:w="4047"/><text x="80.9097%" y="431.50">c..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::pack_rows (221 samples, 0.12%)</title><rect x="82.8336%" y="421" width="0.1187%" height="15" fill="rgb(233,156,4)" fg:x="154208" fg:w="221"/><text x="83.0836%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (57 samples, 0.03%)</title><rect x="84.5761%" y="341" width="0.0306%" height="15" fill="rgb(207,194,5)" fg:x="157452" fg:w="57"/><text x="84.8261%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (63 samples, 0.03%)</title><rect x="84.5740%" y="405" width="0.0338%" height="15" fill="rgb(206,111,30)" fg:x="157448" fg:w="63"/><text x="84.8240%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (62 samples, 0.03%)</title><rect x="84.5745%" y="389" width="0.0333%" height="15" fill="rgb(243,70,54)" fg:x="157449" fg:w="62"/><text x="84.8245%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (62 samples, 0.03%)</title><rect x="84.5745%" y="373" width="0.0333%" height="15" fill="rgb(242,28,8)" fg:x="157449" fg:w="62"/><text x="84.8245%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (60 samples, 0.03%)</title><rect x="84.5756%" y="357" width="0.0322%" height="15" fill="rgb(219,106,18)" fg:x="157451" fg:w="60"/><text x="84.8256%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose (3,157 samples, 1.70%)</title><rect x="82.9523%" y="421" width="1.6958%" height="15" fill="rgb(244,222,10)" fg:x="154429" fg:w="3157"/><text x="83.2023%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (71 samples, 0.04%)</title><rect x="84.6100%" y="405" width="0.0381%" height="15" fill="rgb(236,179,52)" fg:x="157515" fg:w="71"/><text x="84.8600%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (21 samples, 0.01%)</title><rect x="85.9147%" y="405" width="0.0113%" height="15" fill="rgb(213,23,39)" fg:x="159944" fg:w="21"/><text x="86.1647%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (47 samples, 0.03%)</title><rect x="85.9282%" y="405" width="0.0252%" height="15" fill="rgb(238,48,10)" fg:x="159969" fg:w="47"/><text x="86.1782%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (28 samples, 0.02%)</title><rect x="85.9384%" y="389" width="0.0150%" height="15" fill="rgb(251,196,23)" fg:x="159988" fg:w="28"/><text x="86.1884%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (28 samples, 0.02%)</title><rect x="85.9384%" y="373" width="0.0150%" height="15" fill="rgb(250,152,24)" fg:x="159988" fg:w="28"/><text x="86.1884%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_bits (2,437 samples, 1.31%)</title><rect x="84.6481%" y="421" width="1.3090%" height="15" fill="rgb(209,150,17)" fg:x="157586" fg:w="2437"/><text x="84.8981%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22 samples, 0.01%)</title><rect x="85.9636%" y="421" width="0.0118%" height="15" fill="rgb(234,202,34)" fg:x="160035" fg:w="22"/><text x="86.2136%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.02%)</title><rect x="85.9781%" y="421" width="0.0161%" height="15" fill="rgb(253,148,53)" fg:x="160062" fg:w="30"/><text x="86.2281%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (20 samples, 0.01%)</title><rect x="86.0044%" y="405" width="0.0107%" height="15" fill="rgb(218,129,16)" fg:x="160111" fg:w="20"/><text x="86.2544%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`madvise (19 samples, 0.01%)</title><rect x="86.0050%" y="389" width="0.0102%" height="15" fill="rgb(216,85,19)" fg:x="160112" fg:w="19"/><text x="86.2550%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (115 samples, 0.06%)</title><rect x="85.9974%" y="421" width="0.0618%" height="15" fill="rgb(235,228,7)" fg:x="160098" fg:w="115"/><text x="86.2474%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (82 samples, 0.04%)</title><rect x="86.0152%" y="405" width="0.0440%" height="15" fill="rgb(245,175,0)" fg:x="160131" fg:w="82"/><text x="86.2652%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`madvise (79 samples, 0.04%)</title><rect x="86.0168%" y="389" width="0.0424%" height="15" fill="rgb(208,168,36)" fg:x="160134" fg:w="79"/><text x="86.2668%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::prover::prover (160,090 samples, 85.99%)</title><rect x="0.0827%" y="437" width="85.9931%" height="15" fill="rgb(246,171,24)" fg:x="154" fg:w="160090"/><text x="0.3327%" y="447.50">cpu_bench_v0-42868c868297afde`binius_rust::prover::prover</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (20 samples, 0.01%)</title><rect x="86.0947%" y="389" width="0.0107%" height="15" fill="rgb(215,142,24)" fg:x="160279" fg:w="20"/><text x="86.3447%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.01%)</title><rect x="86.1151%" y="389" width="0.0129%" height="15" fill="rgb(250,187,7)" fg:x="160317" fg:w="24"/><text x="86.3651%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (94 samples, 0.05%)</title><rect x="86.0780%" y="405" width="0.0505%" height="15" fill="rgb(228,66,33)" fg:x="160248" fg:w="94"/><text x="86.3280%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (19 samples, 0.01%)</title><rect x="86.2338%" y="213" width="0.0102%" height="15" fill="rgb(234,215,21)" fg:x="160538" fg:w="19"/><text x="86.4838%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.01%)</title><rect x="86.2316%" y="261" width="0.0134%" height="15" fill="rgb(222,191,20)" fg:x="160534" fg:w="25"/><text x="86.4816%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (23 samples, 0.01%)</title><rect x="86.2327%" y="245" width="0.0124%" height="15" fill="rgb(245,79,54)" fg:x="160536" fg:w="23"/><text x="86.4827%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (22 samples, 0.01%)</title><rect x="86.2333%" y="229" width="0.0118%" height="15" fill="rgb(240,10,37)" fg:x="160537" fg:w="22"/><text x="86.4833%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (34 samples, 0.02%)</title><rect x="86.2730%" y="229" width="0.0183%" height="15" fill="rgb(214,192,32)" fg:x="160611" fg:w="34"/><text x="86.5230%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (28 samples, 0.02%)</title><rect x="86.2762%" y="213" width="0.0150%" height="15" fill="rgb(209,36,54)" fg:x="160617" fg:w="28"/><text x="86.5262%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (23 samples, 0.01%)</title><rect x="86.2789%" y="197" width="0.0124%" height="15" fill="rgb(220,10,11)" fg:x="160622" fg:w="23"/><text x="86.5289%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.02%)</title><rect x="86.2719%" y="245" width="0.0199%" height="15" fill="rgb(221,106,17)" fg:x="160609" fg:w="37"/><text x="86.5219%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (20 samples, 0.01%)</title><rect x="86.3525%" y="181" width="0.0107%" height="15" fill="rgb(251,142,44)" fg:x="160759" fg:w="20"/><text x="86.6025%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (51 samples, 0.03%)</title><rect x="86.3364%" y="213" width="0.0274%" height="15" fill="rgb(238,13,15)" fg:x="160729" fg:w="51"/><text x="86.5864%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (36 samples, 0.02%)</title><rect x="86.3444%" y="197" width="0.0193%" height="15" fill="rgb(208,107,27)" fg:x="160744" fg:w="36"/><text x="86.5944%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (58 samples, 0.03%)</title><rect x="86.3332%" y="229" width="0.0312%" height="15" fill="rgb(205,136,37)" fg:x="160723" fg:w="58"/><text x="86.5832%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (26 samples, 0.01%)</title><rect x="86.3686%" y="229" width="0.0140%" height="15" fill="rgb(250,205,27)" fg:x="160789" fg:w="26"/><text x="86.6186%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (69 samples, 0.04%)</title><rect x="86.4422%" y="213" width="0.0371%" height="15" fill="rgb(210,80,43)" fg:x="160926" fg:w="69"/><text x="86.6922%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (37 samples, 0.02%)</title><rect x="86.5674%" y="165" width="0.0199%" height="15" fill="rgb(247,160,36)" fg:x="161159" fg:w="37"/><text x="86.8174%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (30 samples, 0.02%)</title><rect x="86.6254%" y="133" width="0.0161%" height="15" fill="rgb(234,13,49)" fg:x="161267" fg:w="30"/><text x="86.8754%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (88 samples, 0.05%)</title><rect x="86.6093%" y="149" width="0.0473%" height="15" fill="rgb(234,122,0)" fg:x="161237" fg:w="88"/><text x="86.8593%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (28 samples, 0.02%)</title><rect x="86.6415%" y="133" width="0.0150%" height="15" fill="rgb(207,146,38)" fg:x="161297" fg:w="28"/><text x="86.8915%" y="143.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (199 samples, 0.11%)</title><rect x="86.5534%" y="181" width="0.1069%" height="15" fill="rgb(207,177,25)" fg:x="161133" fg:w="199"/><text x="86.8034%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (136 samples, 0.07%)</title><rect x="86.5872%" y="165" width="0.0731%" height="15" fill="rgb(211,178,42)" fg:x="161196" fg:w="136"/><text x="86.8372%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (235 samples, 0.13%)</title><rect x="86.5367%" y="197" width="0.1262%" height="15" fill="rgb(230,69,54)" fg:x="161102" fg:w="235"/><text x="86.7867%" y="207.50"></text></g><g><title>libsystem_m.dylib`log2 (20 samples, 0.01%)</title><rect x="86.6769%" y="197" width="0.0107%" height="15" fill="rgb(214,135,41)" fg:x="161363" fg:w="20"/><text x="86.9269%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (62 samples, 0.03%)</title><rect x="86.6877%" y="197" width="0.0333%" height="15" fill="rgb(237,67,25)" fg:x="161383" fg:w="62"/><text x="86.9377%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (150 samples, 0.08%)</title><rect x="86.7210%" y="197" width="0.0806%" height="15" fill="rgb(222,189,50)" fg:x="161445" fg:w="150"/><text x="86.9710%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (62 samples, 0.03%)</title><rect x="86.8016%" y="197" width="0.0333%" height="15" fill="rgb(245,148,34)" fg:x="161595" fg:w="62"/><text x="87.0516%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (45 samples, 0.02%)</title><rect x="86.8349%" y="197" width="0.0242%" height="15" fill="rgb(222,29,6)" fg:x="161657" fg:w="45"/><text x="87.0849%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (722 samples, 0.39%)</title><rect x="86.4793%" y="213" width="0.3878%" height="15" fill="rgb(221,189,43)" fg:x="160995" fg:w="722"/><text x="86.7293%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (66 samples, 0.04%)</title><rect x="86.8746%" y="213" width="0.0355%" height="15" fill="rgb(207,36,27)" fg:x="161731" fg:w="66"/><text x="87.1246%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (89 samples, 0.05%)</title><rect x="86.9101%" y="213" width="0.0478%" height="15" fill="rgb(217,90,24)" fg:x="161797" fg:w="89"/><text x="87.1601%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (106 samples, 0.06%)</title><rect x="86.9579%" y="213" width="0.0569%" height="15" fill="rgb(224,66,35)" fg:x="161886" fg:w="106"/><text x="87.2079%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (143 samples, 0.08%)</title><rect x="87.0148%" y="213" width="0.0768%" height="15" fill="rgb(221,13,50)" fg:x="161992" fg:w="143"/><text x="87.2648%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (20 samples, 0.01%)</title><rect x="87.0981%" y="213" width="0.0107%" height="15" fill="rgb(236,68,49)" fg:x="162147" fg:w="20"/><text x="87.3481%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (1,361 samples, 0.73%)</title><rect x="86.3826%" y="229" width="0.7311%" height="15" fill="rgb(229,146,28)" fg:x="160815" fg:w="1361"/><text x="86.6326%" y="239.50"></text></g><g><title>libsystem_m.dylib`log2 (25 samples, 0.01%)</title><rect x="87.1137%" y="229" width="0.0134%" height="15" fill="rgb(225,31,38)" fg:x="162176" fg:w="25"/><text x="87.3637%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (35 samples, 0.02%)</title><rect x="87.1271%" y="229" width="0.0188%" height="15" fill="rgb(250,208,3)" fg:x="162201" fg:w="35"/><text x="87.3771%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (46 samples, 0.02%)</title><rect x="87.1459%" y="229" width="0.0247%" height="15" fill="rgb(246,54,23)" fg:x="162236" fg:w="46"/><text x="87.3959%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (58 samples, 0.03%)</title><rect x="87.1706%" y="229" width="0.0312%" height="15" fill="rgb(243,76,11)" fg:x="162282" fg:w="58"/><text x="87.4206%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (42 samples, 0.02%)</title><rect x="87.2017%" y="229" width="0.0226%" height="15" fill="rgb(245,21,50)" fg:x="162340" fg:w="42"/><text x="87.4517%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (1,737 samples, 0.93%)</title><rect x="86.3025%" y="245" width="0.9330%" height="15" fill="rgb(228,9,43)" fg:x="160666" fg:w="1737"/><text x="86.5525%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.01%)</title><rect x="87.2399%" y="245" width="0.0118%" height="15" fill="rgb(208,100,47)" fg:x="162411" fg:w="22"/><text x="87.4899%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.01%)</title><rect x="87.2517%" y="245" width="0.0107%" height="15" fill="rgb(232,26,8)" fg:x="162433" fg:w="20"/><text x="87.5017%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.01%)</title><rect x="87.2624%" y="245" width="0.0102%" height="15" fill="rgb(216,166,38)" fg:x="162453" fg:w="19"/><text x="87.5124%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (1,912 samples, 1.03%)</title><rect x="86.2553%" y="261" width="1.0270%" height="15" fill="rgb(251,202,51)" fg:x="160578" fg:w="1912"/><text x="86.5053%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (21 samples, 0.01%)</title><rect x="87.2861%" y="261" width="0.0113%" height="15" fill="rgb(254,216,34)" fg:x="162497" fg:w="21"/><text x="87.5361%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (2,056 samples, 1.10%)</title><rect x="86.2118%" y="277" width="1.1044%" height="15" fill="rgb(251,32,27)" fg:x="160497" fg:w="2056"/><text x="86.4618%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (2,135 samples, 1.15%)</title><rect x="86.1876%" y="293" width="1.1468%" height="15" fill="rgb(208,127,28)" fg:x="160452" fg:w="2135"/><text x="86.4376%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (2,182 samples, 1.17%)</title><rect x="86.1709%" y="309" width="1.1721%" height="15" fill="rgb(224,137,22)" fg:x="160421" fg:w="2182"/><text x="86.4209%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (2,211 samples, 1.19%)</title><rect x="86.1618%" y="325" width="1.1876%" height="15" fill="rgb(254,70,32)" fg:x="160404" fg:w="2211"/><text x="86.4118%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (2,240 samples, 1.20%)</title><rect x="86.1511%" y="341" width="1.2032%" height="15" fill="rgb(229,75,37)" fg:x="160384" fg:w="2240"/><text x="86.4011%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (2,262 samples, 1.22%)</title><rect x="86.1409%" y="357" width="1.2150%" height="15" fill="rgb(252,64,23)" fg:x="160365" fg:w="2262"/><text x="86.3909%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (2,280 samples, 1.22%)</title><rect x="86.1328%" y="373" width="1.2247%" height="15" fill="rgb(232,162,48)" fg:x="160350" fg:w="2280"/><text x="86.3828%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.01%)</title><rect x="87.3940%" y="277" width="0.0102%" height="15" fill="rgb(246,160,12)" fg:x="162698" fg:w="19"/><text x="87.6440%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (40 samples, 0.02%)</title><rect x="87.4193%" y="261" width="0.0215%" height="15" fill="rgb(247,166,0)" fg:x="162745" fg:w="40"/><text x="87.6693%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (37 samples, 0.02%)</title><rect x="87.4209%" y="245" width="0.0199%" height="15" fill="rgb(249,219,21)" fg:x="162748" fg:w="37"/><text x="87.6709%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (31 samples, 0.02%)</title><rect x="87.4241%" y="229" width="0.0167%" height="15" fill="rgb(205,209,3)" fg:x="162754" fg:w="31"/><text x="87.6741%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.01%)</title><rect x="87.4564%" y="245" width="0.0124%" height="15" fill="rgb(243,44,1)" fg:x="162814" fg:w="23"/><text x="87.7064%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (26 samples, 0.01%)</title><rect x="87.4752%" y="245" width="0.0140%" height="15" fill="rgb(206,159,16)" fg:x="162849" fg:w="26"/><text x="87.7252%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (93 samples, 0.05%)</title><rect x="87.4472%" y="261" width="0.0500%" height="15" fill="rgb(244,77,30)" fg:x="162797" fg:w="93"/><text x="87.6972%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.01%)</title><rect x="87.5085%" y="261" width="0.0107%" height="15" fill="rgb(218,69,12)" fg:x="162911" fg:w="20"/><text x="87.7585%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.01%)</title><rect x="87.5192%" y="261" width="0.0102%" height="15" fill="rgb(212,87,7)" fg:x="162931" fg:w="19"/><text x="87.7692%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (242 samples, 0.13%)</title><rect x="87.4091%" y="277" width="0.1300%" height="15" fill="rgb(245,114,25)" fg:x="162726" fg:w="242"/><text x="87.6591%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (321 samples, 0.17%)</title><rect x="87.3865%" y="293" width="0.1724%" height="15" fill="rgb(210,61,42)" fg:x="162684" fg:w="321"/><text x="87.6365%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (350 samples, 0.19%)</title><rect x="87.3785%" y="309" width="0.1880%" height="15" fill="rgb(211,52,33)" fg:x="162669" fg:w="350"/><text x="87.6285%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (376 samples, 0.20%)</title><rect x="87.3720%" y="325" width="0.2020%" height="15" fill="rgb(234,58,33)" fg:x="162657" fg:w="376"/><text x="87.6220%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (395 samples, 0.21%)</title><rect x="87.3656%" y="341" width="0.2122%" height="15" fill="rgb(220,115,36)" fg:x="162645" fg:w="395"/><text x="87.6156%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (410 samples, 0.22%)</title><rect x="87.3597%" y="357" width="0.2202%" height="15" fill="rgb(243,153,54)" fg:x="162634" fg:w="410"/><text x="87.6097%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (2,702 samples, 1.45%)</title><rect x="86.1290%" y="389" width="1.4514%" height="15" fill="rgb(251,47,18)" fg:x="160343" fg:w="2702"/><text x="86.3790%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (415 samples, 0.22%)</title><rect x="87.3575%" y="373" width="0.2229%" height="15" fill="rgb(242,102,42)" fg:x="162630" fg:w="415"/><text x="87.6075%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,704 samples, 1.45%)</title><rect x="86.1285%" y="405" width="1.4525%" height="15" fill="rgb(234,31,38)" fg:x="160342" fg:w="2704"/><text x="86.3785%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (22 samples, 0.01%)</title><rect x="87.6277%" y="373" width="0.0118%" height="15" fill="rgb(221,117,51)" fg:x="163133" fg:w="22"/><text x="87.8777%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.02%)</title><rect x="87.6884%" y="357" width="0.0199%" height="15" fill="rgb(212,20,18)" fg:x="163246" fg:w="37"/><text x="87.9384%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.01%)</title><rect x="87.6981%" y="341" width="0.0102%" height="15" fill="rgb(245,133,36)" fg:x="163264" fg:w="19"/><text x="87.9481%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (37 samples, 0.02%)</title><rect x="87.7180%" y="357" width="0.0199%" height="15" fill="rgb(212,6,19)" fg:x="163301" fg:w="37"/><text x="87.9680%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (180 samples, 0.10%)</title><rect x="87.7378%" y="357" width="0.0967%" height="15" fill="rgb(218,1,36)" fg:x="163338" fg:w="180"/><text x="87.9878%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (384 samples, 0.21%)</title><rect x="87.6567%" y="373" width="0.2063%" height="15" fill="rgb(246,84,54)" fg:x="163187" fg:w="384"/><text x="87.9067%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (53 samples, 0.03%)</title><rect x="87.8345%" y="357" width="0.0285%" height="15" fill="rgb(242,110,6)" fg:x="163518" fg:w="53"/><text x="88.0845%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.01%)</title><rect x="87.8769%" y="357" width="0.0107%" height="15" fill="rgb(214,47,5)" fg:x="163597" fg:w="20"/><text x="88.1269%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (50 samples, 0.03%)</title><rect x="87.8630%" y="373" width="0.0269%" height="15" fill="rgb(218,159,25)" fg:x="163571" fg:w="50"/><text x="88.1130%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (89 samples, 0.05%)</title><rect x="87.8898%" y="373" width="0.0478%" height="15" fill="rgb(215,211,28)" fg:x="163621" fg:w="89"/><text x="88.1398%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (88 samples, 0.05%)</title><rect x="87.9376%" y="373" width="0.0473%" height="15" fill="rgb(238,59,32)" fg:x="163710" fg:w="88"/><text x="88.1876%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (139 samples, 0.07%)</title><rect x="87.9849%" y="373" width="0.0747%" height="15" fill="rgb(226,82,3)" fg:x="163798" fg:w="139"/><text x="88.2349%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (99 samples, 0.05%)</title><rect x="88.0596%" y="373" width="0.0532%" height="15" fill="rgb(240,164,32)" fg:x="163937" fg:w="99"/><text x="88.3096%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (989 samples, 0.53%)</title><rect x="87.6030%" y="389" width="0.5312%" height="15" fill="rgb(232,46,7)" fg:x="163087" fg:w="989"/><text x="87.8530%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (40 samples, 0.02%)</title><rect x="88.1128%" y="373" width="0.0215%" height="15" fill="rgb(229,129,53)" fg:x="164036" fg:w="40"/><text x="88.3628%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (45 samples, 0.02%)</title><rect x="88.1342%" y="389" width="0.0242%" height="15" fill="rgb(234,188,29)" fg:x="164076" fg:w="45"/><text x="88.3842%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (35 samples, 0.02%)</title><rect x="88.1584%" y="389" width="0.0188%" height="15" fill="rgb(246,141,4)" fg:x="164121" fg:w="35"/><text x="88.4084%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (26 samples, 0.01%)</title><rect x="88.1772%" y="389" width="0.0140%" height="15" fill="rgb(229,23,39)" fg:x="164156" fg:w="26"/><text x="88.4272%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (60 samples, 0.03%)</title><rect x="88.1912%" y="389" width="0.0322%" height="15" fill="rgb(206,12,3)" fg:x="164182" fg:w="60"/><text x="88.4412%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (56 samples, 0.03%)</title><rect x="88.2234%" y="389" width="0.0301%" height="15" fill="rgb(252,226,20)" fg:x="164242" fg:w="56"/><text x="88.4734%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,262 samples, 0.68%)</title><rect x="87.5880%" y="405" width="0.6779%" height="15" fill="rgb(216,123,35)" fg:x="163059" fg:w="1262"/><text x="87.8380%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.01%)</title><rect x="88.2535%" y="389" width="0.0124%" height="15" fill="rgb(212,68,40)" fg:x="164298" fg:w="23"/><text x="88.5035%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (99 samples, 0.05%)</title><rect x="88.2658%" y="405" width="0.0532%" height="15" fill="rgb(254,125,32)" fg:x="164321" fg:w="99"/><text x="88.5158%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.01%)</title><rect x="88.3282%" y="405" width="0.0129%" height="15" fill="rgb(253,97,22)" fg:x="164437" fg:w="24"/><text x="88.5782%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.02%)</title><rect x="88.3443%" y="405" width="0.0156%" height="15" fill="rgb(241,101,14)" fg:x="164467" fg:w="29"/><text x="88.5943%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.01%)</title><rect x="88.3599%" y="405" width="0.0134%" height="15" fill="rgb(238,103,29)" fg:x="164496" fg:w="25"/><text x="88.6099%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,275 samples, 2.30%)</title><rect x="86.0780%" y="421" width="2.2963%" height="15" fill="rgb(233,195,47)" fg:x="160248" fg:w="4275"/><text x="86.3280%" y="431.50">c..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::_&lt;impl core::iter::traits::collect::FromIterator&lt;binius_rust::binary_field16::BinaryFieldElement16&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from_iter (25 samples, 0.01%)</title><rect x="88.3744%" y="421" width="0.0134%" height="15" fill="rgb(246,218,30)" fg:x="164523" fg:w="25"/><text x="88.6244%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`sha2::sha256::compress256 (56 samples, 0.03%)</title><rect x="88.3883%" y="405" width="0.0301%" height="15" fill="rgb(219,145,47)" fg:x="164549" fg:w="56"/><text x="88.6383%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::merkle_tree::verify_branch (60 samples, 0.03%)</title><rect x="88.3878%" y="421" width="0.0322%" height="15" fill="rgb(243,12,26)" fg:x="164548" fg:w="60"/><text x="88.6378%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (25 samples, 0.01%)</title><rect x="88.4753%" y="341" width="0.0134%" height="15" fill="rgb(214,87,16)" fg:x="164711" fg:w="25"/><text x="88.7253%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (20 samples, 0.01%)</title><rect x="88.5060%" y="341" width="0.0107%" height="15" fill="rgb(208,99,42)" fg:x="164768" fg:w="20"/><text x="88.7560%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.01%)</title><rect x="88.5178%" y="341" width="0.0113%" height="15" fill="rgb(253,99,2)" fg:x="164790" fg:w="21"/><text x="88.7678%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (45 samples, 0.02%)</title><rect x="88.5881%" y="325" width="0.0242%" height="15" fill="rgb(220,168,23)" fg:x="164921" fg:w="45"/><text x="88.8381%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.01%)</title><rect x="88.6021%" y="309" width="0.0102%" height="15" fill="rgb(242,38,24)" fg:x="164947" fg:w="19"/><text x="88.8521%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.02%)</title><rect x="88.6263%" y="325" width="0.0209%" height="15" fill="rgb(225,182,9)" fg:x="164992" fg:w="39"/><text x="88.8763%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (272 samples, 0.15%)</title><rect x="88.6472%" y="325" width="0.1461%" height="15" fill="rgb(243,178,37)" fg:x="165031" fg:w="272"/><text x="88.8972%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (569 samples, 0.31%)</title><rect x="88.5296%" y="341" width="0.3056%" height="15" fill="rgb(232,139,19)" fg:x="164812" fg:w="569"/><text x="88.7796%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (78 samples, 0.04%)</title><rect x="88.7933%" y="325" width="0.0419%" height="15" fill="rgb(225,201,24)" fg:x="165303" fg:w="78"/><text x="89.0433%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (26 samples, 0.01%)</title><rect x="88.8535%" y="325" width="0.0140%" height="15" fill="rgb(221,47,46)" fg:x="165415" fg:w="26"/><text x="89.1035%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (66 samples, 0.04%)</title><rect x="88.8352%" y="341" width="0.0355%" height="15" fill="rgb(249,23,13)" fg:x="165381" fg:w="66"/><text x="89.0852%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (122 samples, 0.07%)</title><rect x="88.8707%" y="341" width="0.0655%" height="15" fill="rgb(219,9,5)" fg:x="165447" fg:w="122"/><text x="89.1207%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (143 samples, 0.08%)</title><rect x="88.9362%" y="341" width="0.0768%" height="15" fill="rgb(254,171,16)" fg:x="165569" fg:w="143"/><text x="89.1862%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (243 samples, 0.13%)</title><rect x="89.0130%" y="341" width="0.1305%" height="15" fill="rgb(230,171,20)" fg:x="165712" fg:w="243"/><text x="89.2630%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (198 samples, 0.11%)</title><rect x="89.1436%" y="341" width="0.1064%" height="15" fill="rgb(210,71,41)" fg:x="165955" fg:w="198"/><text x="89.3936%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,535 samples, 0.82%)</title><rect x="88.4598%" y="357" width="0.8245%" height="15" fill="rgb(206,173,20)" fg:x="164682" fg:w="1535"/><text x="88.7098%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (64 samples, 0.03%)</title><rect x="89.2499%" y="341" width="0.0344%" height="15" fill="rgb(233,88,34)" fg:x="166153" fg:w="64"/><text x="89.4999%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (23 samples, 0.01%)</title><rect x="89.2907%" y="341" width="0.0124%" height="15" fill="rgb(223,209,46)" fg:x="166229" fg:w="23"/><text x="89.5407%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (66 samples, 0.04%)</title><rect x="89.2843%" y="357" width="0.0355%" height="15" fill="rgb(250,43,18)" fg:x="166217" fg:w="66"/><text x="89.5343%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (54 samples, 0.03%)</title><rect x="89.3197%" y="357" width="0.0290%" height="15" fill="rgb(208,13,10)" fg:x="166283" fg:w="54"/><text x="89.5697%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (49 samples, 0.03%)</title><rect x="89.3488%" y="357" width="0.0263%" height="15" fill="rgb(212,200,36)" fg:x="166337" fg:w="49"/><text x="89.5988%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (72 samples, 0.04%)</title><rect x="89.3751%" y="357" width="0.0387%" height="15" fill="rgb(225,90,30)" fg:x="166386" fg:w="72"/><text x="89.6251%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (47 samples, 0.03%)</title><rect x="89.4137%" y="357" width="0.0252%" height="15" fill="rgb(236,182,39)" fg:x="166458" fg:w="47"/><text x="89.6637%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,920 samples, 1.03%)</title><rect x="88.4248%" y="373" width="1.0313%" height="15" fill="rgb(212,144,35)" fg:x="164617" fg:w="1920"/><text x="88.6748%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (32 samples, 0.02%)</title><rect x="89.4390%" y="357" width="0.0172%" height="15" fill="rgb(228,63,44)" fg:x="166505" fg:w="32"/><text x="89.6890%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,998 samples, 1.07%)</title><rect x="88.4205%" y="389" width="1.0732%" height="15" fill="rgb(228,109,6)" fg:x="164609" fg:w="1998"/><text x="88.6705%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,008 samples, 1.08%)</title><rect x="88.4205%" y="405" width="1.0786%" height="15" fill="rgb(238,117,24)" fg:x="164609" fg:w="2008"/><text x="88.6705%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (2,021 samples, 1.09%)</title><rect x="88.4200%" y="421" width="1.0856%" height="15" fill="rgb(242,26,26)" fg:x="164608" fg:w="2021"/><text x="88.6700%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (108 samples, 0.06%)</title><rect x="89.5824%" y="389" width="0.0580%" height="15" fill="rgb(221,92,48)" fg:x="166772" fg:w="108"/><text x="89.8324%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (155 samples, 0.08%)</title><rect x="89.5765%" y="405" width="0.0833%" height="15" fill="rgb(209,209,32)" fg:x="166761" fg:w="155"/><text x="89.8265%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (35 samples, 0.02%)</title><rect x="89.6410%" y="389" width="0.0188%" height="15" fill="rgb(221,70,22)" fg:x="166881" fg:w="35"/><text x="89.8910%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (35 samples, 0.02%)</title><rect x="89.6410%" y="373" width="0.0188%" height="15" fill="rgb(248,145,5)" fg:x="166881" fg:w="35"/><text x="89.8910%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (35 samples, 0.02%)</title><rect x="89.6410%" y="357" width="0.0188%" height="15" fill="rgb(226,116,26)" fg:x="166881" fg:w="35"/><text x="89.8910%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (60 samples, 0.03%)</title><rect x="89.6850%" y="357" width="0.0322%" height="15" fill="rgb(244,5,17)" fg:x="166963" fg:w="60"/><text x="89.9350%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (29 samples, 0.02%)</title><rect x="89.7017%" y="341" width="0.0156%" height="15" fill="rgb(252,159,33)" fg:x="166994" fg:w="29"/><text x="89.9517%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (64 samples, 0.03%)</title><rect x="89.7366%" y="357" width="0.0344%" height="15" fill="rgb(206,71,0)" fg:x="167059" fg:w="64"/><text x="89.9866%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (89 samples, 0.05%)</title><rect x="89.7720%" y="357" width="0.0478%" height="15" fill="rgb(233,118,54)" fg:x="167125" fg:w="89"/><text x="90.0220%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (21 samples, 0.01%)</title><rect x="89.8204%" y="341" width="0.0113%" height="15" fill="rgb(234,83,48)" fg:x="167215" fg:w="21"/><text x="90.0704%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (21 samples, 0.01%)</title><rect x="89.8204%" y="325" width="0.0113%" height="15" fill="rgb(228,3,54)" fg:x="167215" fg:w="21"/><text x="90.0704%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (20 samples, 0.01%)</title><rect x="89.8209%" y="309" width="0.0107%" height="15" fill="rgb(226,155,13)" fg:x="167216" fg:w="20"/><text x="90.0709%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.01%)</title><rect x="89.8198%" y="357" width="0.0124%" height="15" fill="rgb(241,28,37)" fg:x="167214" fg:w="23"/><text x="90.0698%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (349 samples, 0.19%)</title><rect x="89.6598%" y="373" width="0.1875%" height="15" fill="rgb(233,93,10)" fg:x="166916" fg:w="349"/><text x="89.9098%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (28 samples, 0.02%)</title><rect x="89.8322%" y="357" width="0.0150%" height="15" fill="rgb(225,113,19)" fg:x="167237" fg:w="28"/><text x="90.0822%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (352 samples, 0.19%)</title><rect x="89.6598%" y="405" width="0.1891%" height="15" fill="rgb(241,2,18)" fg:x="166916" fg:w="352"/><text x="89.9098%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (352 samples, 0.19%)</title><rect x="89.6598%" y="389" width="0.1891%" height="15" fill="rgb(228,207,21)" fg:x="166916" fg:w="352"/><text x="89.9098%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (71 samples, 0.04%)</title><rect x="89.8633%" y="405" width="0.0381%" height="15" fill="rgb(213,211,35)" fg:x="167295" fg:w="71"/><text x="90.1133%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::multisubset (740 samples, 0.40%)</title><rect x="89.5056%" y="421" width="0.3975%" height="15" fill="rgb(209,83,10)" fg:x="166629" fg:w="740"/><text x="89.7556%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_3d (133 samples, 0.07%)</title><rect x="89.9031%" y="421" width="0.0714%" height="15" fill="rgb(209,164,1)" fg:x="167369" fg:w="133"/><text x="90.1531%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_bits (50 samples, 0.03%)</title><rect x="89.9745%" y="421" width="0.0269%" height="15" fill="rgb(213,184,43)" fg:x="167502" fg:w="50"/><text x="90.2245%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (43 samples, 0.02%)</title><rect x="90.0041%" y="421" width="0.0231%" height="15" fill="rgb(231,61,34)" fg:x="167557" fg:w="43"/><text x="90.2541%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (27 samples, 0.01%)</title><rect x="90.0379%" y="389" width="0.0145%" height="15" fill="rgb(235,75,3)" fg:x="167620" fg:w="27"/><text x="90.2879%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (40 samples, 0.02%)</title><rect x="90.0315%" y="421" width="0.0215%" height="15" fill="rgb(220,106,47)" fg:x="167608" fg:w="40"/><text x="90.2815%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (30 samples, 0.02%)</title><rect x="90.0368%" y="405" width="0.0161%" height="15" fill="rgb(210,196,33)" fg:x="167618" fg:w="30"/><text x="90.2868%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::verifier::verifier (7,418 samples, 3.98%)</title><rect x="86.0759%" y="437" width="3.9846%" height="15" fill="rgb(229,154,42)" fg:x="160244" fg:w="7418"/><text x="86.3259%" y="447.50">cpu_..</text></g><g><title>libsystem_malloc.dylib`free (43 samples, 0.02%)</title><rect x="90.0653%" y="437" width="0.0231%" height="15" fill="rgb(228,114,26)" fg:x="167671" fg:w="43"/><text x="90.3153%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_small (44 samples, 0.02%)</title><rect x="90.0884%" y="437" width="0.0236%" height="15" fill="rgb(208,144,1)" fg:x="167714" fg:w="44"/><text x="90.3384%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (33 samples, 0.02%)</title><rect x="90.0943%" y="421" width="0.0177%" height="15" fill="rgb(239,112,37)" fg:x="167725" fg:w="33"/><text x="90.3443%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (33 samples, 0.02%)</title><rect x="90.0943%" y="405" width="0.0177%" height="15" fill="rgb(210,96,50)" fg:x="167725" fg:w="33"/><text x="90.3443%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::bencher::Bencher&lt;M&gt;::iter (167,626 samples, 90.04%)</title><rect x="0.0774%" y="453" width="90.0411%" height="15" fill="rgb(222,178,2)" fg:x="144" fg:w="167626"/><text x="0.3274%" y="463.50">cpu_bench_v0-42868c868297afde`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (167,630 samples, 90.04%)</title><rect x="0.0774%" y="469" width="90.0433%" height="15" fill="rgb(226,74,18)" fg:x="144" fg:w="167630"/><text x="0.3274%" y="479.50">cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (20 samples, 0.01%)</title><rect x="90.2501%" y="357" width="0.0107%" height="15" fill="rgb(225,67,54)" fg:x="168015" fg:w="20"/><text x="90.5001%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (20 samples, 0.01%)</title><rect x="90.2501%" y="341" width="0.0107%" height="15" fill="rgb(251,92,32)" fg:x="168015" fg:w="20"/><text x="90.5001%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.01%)</title><rect x="90.2496%" y="373" width="0.0118%" height="15" fill="rgb(228,149,22)" fg:x="168014" fg:w="22"/><text x="90.4996%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::_&lt;impl core::iter::traits::collect::FromIterator&lt;binius_rust::binary_field16::BinaryFieldElement16&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from_iter (264 samples, 0.14%)</title><rect x="90.1212%" y="389" width="0.1418%" height="15" fill="rgb(243,54,13)" fg:x="167775" fg:w="264"/><text x="90.3712%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (21 samples, 0.01%)</title><rect x="90.2829%" y="357" width="0.0113%" height="15" fill="rgb(243,180,28)" fg:x="168076" fg:w="21"/><text x="90.5329%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (23 samples, 0.01%)</title><rect x="90.3199%" y="325" width="0.0124%" height="15" fill="rgb(208,167,24)" fg:x="168145" fg:w="23"/><text x="90.5699%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (21 samples, 0.01%)</title><rect x="90.3484%" y="309" width="0.0113%" height="15" fill="rgb(245,73,45)" fg:x="168198" fg:w="21"/><text x="90.5984%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (33 samples, 0.02%)</title><rect x="90.3817%" y="293" width="0.0177%" height="15" fill="rgb(237,203,48)" fg:x="168260" fg:w="33"/><text x="90.6317%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (25 samples, 0.01%)</title><rect x="90.4166%" y="261" width="0.0134%" height="15" fill="rgb(211,197,16)" fg:x="168325" fg:w="25"/><text x="90.6666%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (20 samples, 0.01%)</title><rect x="90.4193%" y="245" width="0.0107%" height="15" fill="rgb(243,99,51)" fg:x="168330" fg:w="20"/><text x="90.6693%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.02%)</title><rect x="90.4139%" y="277" width="0.0172%" height="15" fill="rgb(215,123,29)" fg:x="168320" fg:w="32"/><text x="90.6639%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (19 samples, 0.01%)</title><rect x="90.4317%" y="277" width="0.0102%" height="15" fill="rgb(239,186,37)" fg:x="168353" fg:w="19"/><text x="90.6817%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (33 samples, 0.02%)</title><rect x="90.4940%" y="213" width="0.0177%" height="15" fill="rgb(252,136,39)" fg:x="168469" fg:w="33"/><text x="90.7440%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (19 samples, 0.01%)</title><rect x="90.5015%" y="197" width="0.0102%" height="15" fill="rgb(223,213,32)" fg:x="168483" fg:w="19"/><text x="90.7515%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (46 samples, 0.02%)</title><rect x="90.4875%" y="245" width="0.0247%" height="15" fill="rgb(233,115,5)" fg:x="168457" fg:w="46"/><text x="90.7375%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (39 samples, 0.02%)</title><rect x="90.4913%" y="229" width="0.0209%" height="15" fill="rgb(207,226,44)" fg:x="168464" fg:w="39"/><text x="90.7413%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (52 samples, 0.03%)</title><rect x="90.4848%" y="261" width="0.0279%" height="15" fill="rgb(208,126,0)" fg:x="168452" fg:w="52"/><text x="90.7348%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (22 samples, 0.01%)</title><rect x="90.5133%" y="261" width="0.0118%" height="15" fill="rgb(244,66,21)" fg:x="168505" fg:w="22"/><text x="90.7633%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (22 samples, 0.01%)</title><rect x="90.6105%" y="181" width="0.0118%" height="15" fill="rgb(222,97,12)" fg:x="168686" fg:w="22"/><text x="90.8605%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (19 samples, 0.01%)</title><rect x="90.6121%" y="165" width="0.0102%" height="15" fill="rgb(219,213,19)" fg:x="168689" fg:w="19"/><text x="90.8621%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (66 samples, 0.04%)</title><rect x="90.5885%" y="197" width="0.0355%" height="15" fill="rgb(252,169,30)" fg:x="168645" fg:w="66"/><text x="90.8385%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (97 samples, 0.05%)</title><rect x="90.5740%" y="229" width="0.0521%" height="15" fill="rgb(206,32,51)" fg:x="168618" fg:w="97"/><text x="90.8240%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (84 samples, 0.05%)</title><rect x="90.5810%" y="213" width="0.0451%" height="15" fill="rgb(250,172,42)" fg:x="168631" fg:w="84"/><text x="90.8310%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (103 samples, 0.06%)</title><rect x="90.5713%" y="245" width="0.0553%" height="15" fill="rgb(209,34,43)" fg:x="168613" fg:w="103"/><text x="90.8213%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (22 samples, 0.01%)</title><rect x="90.6374%" y="245" width="0.0118%" height="15" fill="rgb(223,11,35)" fg:x="168736" fg:w="22"/><text x="90.8874%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (23 samples, 0.01%)</title><rect x="90.6820%" y="229" width="0.0124%" height="15" fill="rgb(251,219,26)" fg:x="168819" fg:w="23"/><text x="90.9320%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (25 samples, 0.01%)</title><rect x="90.7271%" y="197" width="0.0134%" height="15" fill="rgb(231,119,3)" fg:x="168903" fg:w="25"/><text x="90.9771%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (22 samples, 0.01%)</title><rect x="90.7609%" y="165" width="0.0118%" height="15" fill="rgb(216,97,11)" fg:x="168966" fg:w="22"/><text x="91.0109%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (58 samples, 0.03%)</title><rect x="90.7497%" y="181" width="0.0312%" height="15" fill="rgb(223,59,9)" fg:x="168945" fg:w="58"/><text x="90.9997%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (113 samples, 0.06%)</title><rect x="90.7223%" y="213" width="0.0607%" height="15" fill="rgb(233,93,31)" fg:x="168894" fg:w="113"/><text x="90.9723%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (79 samples, 0.04%)</title><rect x="90.7405%" y="197" width="0.0424%" height="15" fill="rgb(239,81,33)" fg:x="168928" fg:w="79"/><text x="90.9905%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (132 samples, 0.07%)</title><rect x="90.7142%" y="229" width="0.0709%" height="15" fill="rgb(213,120,34)" fg:x="168879" fg:w="132"/><text x="90.9642%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (78 samples, 0.04%)</title><rect x="90.7964%" y="229" width="0.0419%" height="15" fill="rgb(243,49,53)" fg:x="169032" fg:w="78"/><text x="91.0464%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (32 samples, 0.02%)</title><rect x="90.8963%" y="213" width="0.0172%" height="15" fill="rgb(247,216,33)" fg:x="169218" fg:w="32"/><text x="91.1463%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (21 samples, 0.01%)</title><rect x="90.9135%" y="213" width="0.0113%" height="15" fill="rgb(226,26,14)" fg:x="169250" fg:w="21"/><text x="91.1635%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::WiEvalCache::get_Wi_eval (171 samples, 0.09%)</title><rect x="90.9597%" y="213" width="0.0919%" height="15" fill="rgb(215,49,53)" fg:x="169336" fg:w="171"/><text x="91.2097%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$realloc (21 samples, 0.01%)</title><rect x="91.1890%" y="181" width="0.0113%" height="15" fill="rgb(245,162,40)" fg:x="169763" fg:w="21"/><text x="91.4390%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (73 samples, 0.04%)</title><rect x="91.2256%" y="165" width="0.0392%" height="15" fill="rgb(229,68,17)" fg:x="169831" fg:w="73"/><text x="91.4756%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (62 samples, 0.03%)</title><rect x="91.3432%" y="133" width="0.0333%" height="15" fill="rgb(213,182,10)" fg:x="170050" fg:w="62"/><text x="91.5932%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (168 samples, 0.09%)</title><rect x="91.3121%" y="149" width="0.0902%" height="15" fill="rgb(245,125,30)" fg:x="169992" fg:w="168"/><text x="91.5621%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (48 samples, 0.03%)</title><rect x="91.3765%" y="133" width="0.0258%" height="15" fill="rgb(232,202,2)" fg:x="170112" fg:w="48"/><text x="91.6265%" y="143.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (388 samples, 0.21%)</title><rect x="91.2035%" y="181" width="0.2084%" height="15" fill="rgb(237,140,51)" fg:x="169790" fg:w="388"/><text x="91.4535%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (274 samples, 0.15%)</title><rect x="91.2648%" y="165" width="0.1472%" height="15" fill="rgb(236,157,25)" fg:x="169904" fg:w="274"/><text x="91.5148%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (464 samples, 0.25%)</title><rect x="91.1697%" y="197" width="0.2492%" height="15" fill="rgb(219,209,0)" fg:x="169727" fg:w="464"/><text x="91.4197%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (38 samples, 0.02%)</title><rect x="91.4302%" y="197" width="0.0204%" height="15" fill="rgb(240,116,54)" fg:x="170212" fg:w="38"/><text x="91.6802%" y="207.50"></text></g><g><title>libsystem_m.dylib`log2 (43 samples, 0.02%)</title><rect x="91.4506%" y="197" width="0.0231%" height="15" fill="rgb(216,10,36)" fg:x="170250" fg:w="43"/><text x="91.7006%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (115 samples, 0.06%)</title><rect x="91.4737%" y="197" width="0.0618%" height="15" fill="rgb(222,72,44)" fg:x="170293" fg:w="115"/><text x="91.7237%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (318 samples, 0.17%)</title><rect x="91.5355%" y="197" width="0.1708%" height="15" fill="rgb(232,159,9)" fg:x="170408" fg:w="318"/><text x="91.7855%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (222 samples, 0.12%)</title><rect x="91.7063%" y="197" width="0.1192%" height="15" fill="rgb(210,39,32)" fg:x="170726" fg:w="222"/><text x="91.9563%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (78 samples, 0.04%)</title><rect x="91.8256%" y="197" width="0.0419%" height="15" fill="rgb(216,194,45)" fg:x="170948" fg:w="78"/><text x="92.0756%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (1,564 samples, 0.84%)</title><rect x="91.0515%" y="213" width="0.8401%" height="15" fill="rgb(218,18,35)" fg:x="169507" fg:w="1564"/><text x="91.3015%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (45 samples, 0.02%)</title><rect x="91.8675%" y="197" width="0.0242%" height="15" fill="rgb(207,83,51)" fg:x="171026" fg:w="45"/><text x="92.1175%" y="207.50"></text></g><g><title>libsystem_m.dylib`log2 (19 samples, 0.01%)</title><rect x="91.8916%" y="213" width="0.0102%" height="15" fill="rgb(225,63,43)" fg:x="171071" fg:w="19"/><text x="92.1416%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (156 samples, 0.08%)</title><rect x="91.9019%" y="213" width="0.0838%" height="15" fill="rgb(207,57,36)" fg:x="171090" fg:w="156"/><text x="92.1519%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (210 samples, 0.11%)</title><rect x="91.9856%" y="213" width="0.1128%" height="15" fill="rgb(216,99,33)" fg:x="171246" fg:w="210"/><text x="92.2356%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (271 samples, 0.15%)</title><rect x="92.0984%" y="213" width="0.1456%" height="15" fill="rgb(225,42,16)" fg:x="171456" fg:w="271"/><text x="92.3484%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (331 samples, 0.18%)</title><rect x="92.2440%" y="213" width="0.1778%" height="15" fill="rgb(220,201,45)" fg:x="171727" fg:w="331"/><text x="92.4940%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (32 samples, 0.02%)</title><rect x="92.4218%" y="213" width="0.0172%" height="15" fill="rgb(225,33,4)" fg:x="172058" fg:w="32"/><text x="92.6718%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (40 samples, 0.02%)</title><rect x="92.4390%" y="213" width="0.0215%" height="15" fill="rgb(224,33,50)" fg:x="172090" fg:w="40"/><text x="92.6890%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (3,046 samples, 1.64%)</title><rect x="90.8383%" y="229" width="1.6362%" height="15" fill="rgb(246,198,51)" fg:x="169110" fg:w="3046"/><text x="91.0883%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (26 samples, 0.01%)</title><rect x="92.4605%" y="213" width="0.0140%" height="15" fill="rgb(205,22,4)" fg:x="172130" fg:w="26"/><text x="92.7105%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (86 samples, 0.05%)</title><rect x="92.4831%" y="229" width="0.0462%" height="15" fill="rgb(206,3,8)" fg:x="172172" fg:w="86"/><text x="92.7331%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (101 samples, 0.05%)</title><rect x="92.5292%" y="229" width="0.0543%" height="15" fill="rgb(251,23,15)" fg:x="172258" fg:w="101"/><text x="92.7792%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (117 samples, 0.06%)</title><rect x="92.5835%" y="229" width="0.0628%" height="15" fill="rgb(252,88,28)" fg:x="172359" fg:w="117"/><text x="92.8335%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (108 samples, 0.06%)</title><rect x="92.6463%" y="229" width="0.0580%" height="15" fill="rgb(212,127,14)" fg:x="172476" fg:w="108"/><text x="92.8963%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.01%)</title><rect x="92.7044%" y="229" width="0.0124%" height="15" fill="rgb(247,145,37)" fg:x="172584" fg:w="23"/><text x="92.9544%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (37 samples, 0.02%)</title><rect x="92.7167%" y="229" width="0.0199%" height="15" fill="rgb(209,117,53)" fg:x="172607" fg:w="37"/><text x="92.9667%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (3,897 samples, 2.09%)</title><rect x="90.6492%" y="245" width="2.0933%" height="15" fill="rgb(212,90,42)" fg:x="168758" fg:w="3897"/><text x="90.8992%" y="255.50">c..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (33 samples, 0.02%)</title><rect x="92.7452%" y="245" width="0.0177%" height="15" fill="rgb(218,164,37)" fg:x="172660" fg:w="33"/><text x="92.9952%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (55 samples, 0.03%)</title><rect x="92.7629%" y="245" width="0.0295%" height="15" fill="rgb(246,65,34)" fg:x="172693" fg:w="55"/><text x="93.0129%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (61 samples, 0.03%)</title><rect x="92.7925%" y="245" width="0.0328%" height="15" fill="rgb(231,100,33)" fg:x="172748" fg:w="61"/><text x="93.0425%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (33 samples, 0.02%)</title><rect x="92.8252%" y="245" width="0.0177%" height="15" fill="rgb(228,126,14)" fg:x="172809" fg:w="33"/><text x="93.0752%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (4,335 samples, 2.33%)</title><rect x="90.5278%" y="261" width="2.3286%" height="15" fill="rgb(215,173,21)" fg:x="168532" fg:w="4335"/><text x="90.7778%" y="271.50">c..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (31 samples, 0.02%)</title><rect x="92.8671%" y="261" width="0.0167%" height="15" fill="rgb(210,6,40)" fg:x="172887" fg:w="31"/><text x="93.1171%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.02%)</title><rect x="92.8838%" y="261" width="0.0177%" height="15" fill="rgb(212,48,18)" fg:x="172918" fg:w="33"/><text x="93.1338%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (27 samples, 0.01%)</title><rect x="92.9015%" y="261" width="0.0145%" height="15" fill="rgb(230,214,11)" fg:x="172951" fg:w="27"/><text x="93.1515%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (4,610 samples, 2.48%)</title><rect x="90.4467%" y="277" width="2.4763%" height="15" fill="rgb(254,105,39)" fg:x="168381" fg:w="4610"/><text x="90.6967%" y="287.50">cp..</text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.01%)</title><rect x="92.9391%" y="277" width="0.0102%" height="15" fill="rgb(245,158,5)" fg:x="173021" fg:w="19"/><text x="93.1891%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (4,779 samples, 2.57%)</title><rect x="90.3994%" y="293" width="2.5671%" height="15" fill="rgb(249,208,11)" fg:x="168293" fg:w="4779"/><text x="90.6494%" y="303.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (4,882 samples, 2.62%)</title><rect x="90.3602%" y="309" width="2.6224%" height="15" fill="rgb(210,39,28)" fg:x="168220" fg:w="4882"/><text x="90.6102%" y="319.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (4,949 samples, 2.66%)</title><rect x="90.3323%" y="325" width="2.6584%" height="15" fill="rgb(211,56,53)" fg:x="168168" fg:w="4949"/><text x="90.5823%" y="335.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (5,007 samples, 2.69%)</title><rect x="90.3113%" y="341" width="2.6895%" height="15" fill="rgb(226,201,30)" fg:x="168129" fg:w="5007"/><text x="90.5613%" y="351.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (5,048 samples, 2.71%)</title><rect x="90.2947%" y="357" width="2.7116%" height="15" fill="rgb(239,101,34)" fg:x="168098" fg:w="5048"/><text x="90.5447%" y="367.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (5,092 samples, 2.74%)</title><rect x="90.2721%" y="373" width="2.7352%" height="15" fill="rgb(226,209,5)" fg:x="168056" fg:w="5092"/><text x="90.5221%" y="383.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.01%)</title><rect x="93.0600%" y="277" width="0.0102%" height="15" fill="rgb(250,105,47)" fg:x="173246" fg:w="19"/><text x="93.3100%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.01%)</title><rect x="93.1062%" y="261" width="0.0124%" height="15" fill="rgb(230,72,3)" fg:x="173332" fg:w="23"/><text x="93.3562%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (28 samples, 0.02%)</title><rect x="93.1319%" y="245" width="0.0150%" height="15" fill="rgb(232,218,39)" fg:x="173380" fg:w="28"/><text x="93.3819%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.02%)</title><rect x="93.1266%" y="261" width="0.0209%" height="15" fill="rgb(248,166,6)" fg:x="173370" fg:w="39"/><text x="93.3766%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (20 samples, 0.01%)</title><rect x="93.1481%" y="261" width="0.0107%" height="15" fill="rgb(247,89,20)" fg:x="173410" fg:w="20"/><text x="93.3981%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 0.02%)</title><rect x="93.1717%" y="245" width="0.0188%" height="15" fill="rgb(248,130,54)" fg:x="173454" fg:w="35"/><text x="93.4217%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (30 samples, 0.02%)</title><rect x="93.1744%" y="229" width="0.0161%" height="15" fill="rgb(234,196,4)" fg:x="173459" fg:w="30"/><text x="93.4244%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (23 samples, 0.01%)</title><rect x="93.2190%" y="197" width="0.0124%" height="15" fill="rgb(250,143,31)" fg:x="173542" fg:w="23"/><text x="93.4690%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (56 samples, 0.03%)</title><rect x="93.2018%" y="229" width="0.0301%" height="15" fill="rgb(211,110,34)" fg:x="173510" fg:w="56"/><text x="93.4518%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (38 samples, 0.02%)</title><rect x="93.2114%" y="213" width="0.0204%" height="15" fill="rgb(215,124,48)" fg:x="173528" fg:w="38"/><text x="93.4614%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (74 samples, 0.04%)</title><rect x="93.1937%" y="245" width="0.0397%" height="15" fill="rgb(216,46,13)" fg:x="173495" fg:w="74"/><text x="93.4437%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (68 samples, 0.04%)</title><rect x="93.2539%" y="245" width="0.0365%" height="15" fill="rgb(205,184,25)" fg:x="173607" fg:w="68"/><text x="93.5039%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (263 samples, 0.14%)</title><rect x="93.1647%" y="261" width="0.1413%" height="15" fill="rgb(228,1,10)" fg:x="173441" fg:w="263"/><text x="93.4147%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (35 samples, 0.02%)</title><rect x="93.3065%" y="261" width="0.0188%" height="15" fill="rgb(213,116,27)" fg:x="173705" fg:w="35"/><text x="93.5565%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (38 samples, 0.02%)</title><rect x="93.3253%" y="261" width="0.0204%" height="15" fill="rgb(241,95,50)" fg:x="173740" fg:w="38"/><text x="93.5753%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (44 samples, 0.02%)</title><rect x="93.3457%" y="261" width="0.0236%" height="15" fill="rgb(238,48,32)" fg:x="173778" fg:w="44"/><text x="93.5957%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (60 samples, 0.03%)</title><rect x="93.3694%" y="261" width="0.0322%" height="15" fill="rgb(235,113,49)" fg:x="173822" fg:w="60"/><text x="93.6194%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (599 samples, 0.32%)</title><rect x="93.0933%" y="277" width="0.3218%" height="15" fill="rgb(205,127,43)" fg:x="173308" fg:w="599"/><text x="93.3433%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.01%)</title><rect x="93.4161%" y="277" width="0.0113%" height="15" fill="rgb(250,162,2)" fg:x="173909" fg:w="21"/><text x="93.6661%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22 samples, 0.01%)</title><rect x="93.4274%" y="277" width="0.0118%" height="15" fill="rgb(220,13,41)" fg:x="173930" fg:w="22"/><text x="93.6774%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.01%)</title><rect x="93.4392%" y="277" width="0.0102%" height="15" fill="rgb(249,221,25)" fg:x="173952" fg:w="19"/><text x="93.6892%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (764 samples, 0.41%)</title><rect x="93.0567%" y="293" width="0.4104%" height="15" fill="rgb(215,208,19)" fg:x="173240" fg:w="764"/><text x="93.3067%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (839 samples, 0.45%)</title><rect x="93.0395%" y="309" width="0.4507%" height="15" fill="rgb(236,175,2)" fg:x="173208" fg:w="839"/><text x="93.2895%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (893 samples, 0.48%)</title><rect x="93.0256%" y="325" width="0.4797%" height="15" fill="rgb(241,52,2)" fg:x="173182" fg:w="893"/><text x="93.2756%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (920 samples, 0.49%)</title><rect x="93.0148%" y="341" width="0.4942%" height="15" fill="rgb(248,140,14)" fg:x="173162" fg:w="920"/><text x="93.2648%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (936 samples, 0.50%)</title><rect x="93.0111%" y="357" width="0.5028%" height="15" fill="rgb(253,22,42)" fg:x="173155" fg:w="936"/><text x="93.2611%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (949 samples, 0.51%)</title><rect x="93.0073%" y="373" width="0.5098%" height="15" fill="rgb(234,61,47)" fg:x="173148" fg:w="949"/><text x="93.2573%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (6,068 samples, 3.26%)</title><rect x="90.2630%" y="389" width="3.2595%" height="15" fill="rgb(208,226,15)" fg:x="168039" fg:w="6068"/><text x="90.5130%" y="399.50">cpu..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,342 samples, 3.41%)</title><rect x="90.1212%" y="405" width="3.4066%" height="15" fill="rgb(217,221,4)" fg:x="167775" fg:w="6342"/><text x="90.3712%" y="415.50">cpu..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (27 samples, 0.01%)</title><rect x="93.5509%" y="357" width="0.0145%" height="15" fill="rgb(212,174,34)" fg:x="174160" fg:w="27"/><text x="93.8009%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (53 samples, 0.03%)</title><rect x="93.5391%" y="373" width="0.0285%" height="15" fill="rgb(253,83,4)" fg:x="174138" fg:w="53"/><text x="93.7891%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.01%)</title><rect x="93.5815%" y="373" width="0.0118%" height="15" fill="rgb(250,195,49)" fg:x="174217" fg:w="22"/><text x="93.8315%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (21 samples, 0.01%)</title><rect x="93.5934%" y="373" width="0.0113%" height="15" fill="rgb(241,192,25)" fg:x="174239" fg:w="21"/><text x="93.8434%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (140 samples, 0.08%)</title><rect x="93.5316%" y="389" width="0.0752%" height="15" fill="rgb(208,124,10)" fg:x="174124" fg:w="140"/><text x="93.7816%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (176 samples, 0.09%)</title><rect x="93.5284%" y="405" width="0.0945%" height="15" fill="rgb(222,33,0)" fg:x="174118" fg:w="176"/><text x="93.7784%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (247 samples, 0.13%)</title><rect x="93.6229%" y="405" width="0.1327%" height="15" fill="rgb(234,209,28)" fg:x="174294" fg:w="247"/><text x="93.8729%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,776 samples, 3.64%)</title><rect x="90.1212%" y="421" width="3.6398%" height="15" fill="rgb(224,11,23)" fg:x="167775" fg:w="6776"/><text x="90.3712%" y="431.50">cpu_..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::merkle_tree::merkelize (370 samples, 0.20%)</title><rect x="93.7609%" y="421" width="0.1987%" height="15" fill="rgb(232,99,1)" fg:x="174551" fg:w="370"/><text x="94.0109%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`sha2::sha256::compress256 (368 samples, 0.20%)</title><rect x="93.7620%" y="405" width="0.1977%" height="15" fill="rgb(237,95,45)" fg:x="174553" fg:w="368"/><text x="94.0120%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,120 samples, 0.60%)</title><rect x="93.9608%" y="373" width="0.6016%" height="15" fill="rgb(208,109,11)" fg:x="174923" fg:w="1120"/><text x="94.2108%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (63 samples, 0.03%)</title><rect x="94.5672%" y="325" width="0.0338%" height="15" fill="rgb(216,190,48)" fg:x="176052" fg:w="63"/><text x="94.8172%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,195 samples, 0.64%)</title><rect x="93.9608%" y="389" width="0.6419%" height="15" fill="rgb(251,171,36)" fg:x="174923" fg:w="1195"/><text x="94.2108%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (75 samples, 0.04%)</title><rect x="94.5624%" y="373" width="0.0403%" height="15" fill="rgb(230,62,22)" fg:x="176043" fg:w="75"/><text x="94.8124%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (74 samples, 0.04%)</title><rect x="94.5629%" y="357" width="0.0397%" height="15" fill="rgb(225,114,35)" fg:x="176044" fg:w="74"/><text x="94.8129%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (70 samples, 0.04%)</title><rect x="94.5651%" y="341" width="0.0376%" height="15" fill="rgb(215,118,42)" fg:x="176048" fg:w="70"/><text x="94.8151%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,198 samples, 0.64%)</title><rect x="93.9597%" y="405" width="0.6435%" height="15" fill="rgb(243,119,21)" fg:x="174921" fg:w="1198"/><text x="94.2097%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::xor_along_axis (1,496 samples, 0.80%)</title><rect x="94.6032%" y="405" width="0.8036%" height="15" fill="rgb(252,177,53)" fg:x="176119" fg:w="1496"/><text x="94.8532%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::computed_tprimes (2,761 samples, 1.48%)</title><rect x="93.9597%" y="421" width="1.4831%" height="15" fill="rgb(237,209,29)" fg:x="174921" fg:w="2761"/><text x="94.2097%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_small (66 samples, 0.04%)</title><rect x="95.4073%" y="405" width="0.0355%" height="15" fill="rgb(212,65,23)" fg:x="177616" fg:w="66"/><text x="95.6573%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (38 samples, 0.02%)</title><rect x="95.4224%" y="389" width="0.0204%" height="15" fill="rgb(230,222,46)" fg:x="177644" fg:w="38"/><text x="95.6724%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (37 samples, 0.02%)</title><rect x="95.4229%" y="373" width="0.0199%" height="15" fill="rgb(215,135,32)" fg:x="177645" fg:w="37"/><text x="95.6729%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (35 samples, 0.02%)</title><rect x="95.4766%" y="325" width="0.0188%" height="15" fill="rgb(246,101,22)" fg:x="177745" fg:w="35"/><text x="95.7266%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (75 samples, 0.04%)</title><rect x="95.4589%" y="341" width="0.0403%" height="15" fill="rgb(206,107,13)" fg:x="177712" fg:w="75"/><text x="95.7089%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.02%)</title><rect x="95.5239%" y="341" width="0.0156%" height="15" fill="rgb(250,100,44)" fg:x="177833" fg:w="29"/><text x="95.7739%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (34 samples, 0.02%)</title><rect x="95.5395%" y="341" width="0.0183%" height="15" fill="rgb(231,147,38)" fg:x="177862" fg:w="34"/><text x="95.7895%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (205 samples, 0.11%)</title><rect x="95.4508%" y="357" width="0.1101%" height="15" fill="rgb(229,8,40)" fg:x="177697" fg:w="205"/><text x="95.7008%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (260 samples, 0.14%)</title><rect x="95.4455%" y="373" width="0.1397%" height="15" fill="rgb(221,135,30)" fg:x="177687" fg:w="260"/><text x="95.6955%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (277 samples, 0.15%)</title><rect x="95.4428%" y="389" width="0.1488%" height="15" fill="rgb(249,193,18)" fg:x="177682" fg:w="277"/><text x="95.6928%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (278 samples, 0.15%)</title><rect x="95.4428%" y="405" width="0.1493%" height="15" fill="rgb(209,133,39)" fg:x="177682" fg:w="278"/><text x="95.6928%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (279 samples, 0.15%)</title><rect x="95.4428%" y="421" width="0.1499%" height="15" fill="rgb(232,100,14)" fg:x="177682" fg:w="279"/><text x="95.6928%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose (218 samples, 0.12%)</title><rect x="95.6012%" y="421" width="0.1171%" height="15" fill="rgb(224,185,1)" fg:x="177977" fg:w="218"/><text x="95.8512%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_bits (170 samples, 0.09%)</title><rect x="95.7183%" y="421" width="0.0913%" height="15" fill="rgb(223,139,8)" fg:x="178195" fg:w="170"/><text x="95.9683%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::prover::prover (10,606 samples, 5.70%)</title><rect x="90.1206%" y="437" width="5.6971%" height="15" fill="rgb(232,213,38)" fg:x="167774" fg:w="10606"/><text x="90.3706%" y="447.50">cpu_ben..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (44 samples, 0.02%)</title><rect x="95.8510%" y="213" width="0.0236%" height="15" fill="rgb(207,94,22)" fg:x="178442" fg:w="44"/><text x="96.1010%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (80 samples, 0.04%)</title><rect x="95.8462%" y="229" width="0.0430%" height="15" fill="rgb(219,183,54)" fg:x="178433" fg:w="80"/><text x="96.0962%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (114 samples, 0.06%)</title><rect x="95.8365%" y="245" width="0.0612%" height="15" fill="rgb(216,185,54)" fg:x="178415" fg:w="114"/><text x="96.0865%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (138 samples, 0.07%)</title><rect x="95.8322%" y="261" width="0.0741%" height="15" fill="rgb(254,217,39)" fg:x="178407" fg:w="138"/><text x="96.0822%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (146 samples, 0.08%)</title><rect x="95.8290%" y="277" width="0.0784%" height="15" fill="rgb(240,178,23)" fg:x="178401" fg:w="146"/><text x="96.0790%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (153 samples, 0.08%)</title><rect x="95.8268%" y="309" width="0.0822%" height="15" fill="rgb(218,11,47)" fg:x="178397" fg:w="153"/><text x="96.0768%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (153 samples, 0.08%)</title><rect x="95.8268%" y="293" width="0.0822%" height="15" fill="rgb(218,51,51)" fg:x="178397" fg:w="153"/><text x="96.0768%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (156 samples, 0.08%)</title><rect x="95.8258%" y="325" width="0.0838%" height="15" fill="rgb(238,126,27)" fg:x="178395" fg:w="156"/><text x="96.0758%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (163 samples, 0.09%)</title><rect x="95.8225%" y="373" width="0.0876%" height="15" fill="rgb(249,202,22)" fg:x="178389" fg:w="163"/><text x="96.0725%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (163 samples, 0.09%)</title><rect x="95.8225%" y="357" width="0.0876%" height="15" fill="rgb(254,195,49)" fg:x="178389" fg:w="163"/><text x="96.0725%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::additive_ntt (160 samples, 0.09%)</title><rect x="95.8242%" y="341" width="0.0859%" height="15" fill="rgb(208,123,14)" fg:x="178392" fg:w="160"/><text x="96.0742%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (22 samples, 0.01%)</title><rect x="95.9112%" y="293" width="0.0118%" height="15" fill="rgb(224,200,8)" fg:x="178554" fg:w="22"/><text x="96.1612%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (188 samples, 0.10%)</title><rect x="95.8225%" y="389" width="0.1010%" height="15" fill="rgb(217,61,36)" fg:x="178389" fg:w="188"/><text x="96.0725%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (25 samples, 0.01%)</title><rect x="95.9101%" y="373" width="0.0134%" height="15" fill="rgb(206,35,45)" fg:x="178552" fg:w="25"/><text x="96.1601%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (25 samples, 0.01%)</title><rect x="95.9101%" y="357" width="0.0134%" height="15" fill="rgb(217,65,33)" fg:x="178552" fg:w="25"/><text x="96.1601%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (25 samples, 0.01%)</title><rect x="95.9101%" y="341" width="0.0134%" height="15" fill="rgb(222,158,48)" fg:x="178552" fg:w="25"/><text x="96.1601%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (25 samples, 0.01%)</title><rect x="95.9101%" y="325" width="0.0134%" height="15" fill="rgb(254,2,54)" fg:x="178552" fg:w="25"/><text x="96.1601%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::inv_additive_ntt (25 samples, 0.01%)</title><rect x="95.9101%" y="309" width="0.0134%" height="15" fill="rgb(250,143,38)" fg:x="178552" fg:w="25"/><text x="96.1601%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (189 samples, 0.10%)</title><rect x="95.8225%" y="405" width="0.1015%" height="15" fill="rgb(248,25,0)" fg:x="178389" fg:w="189"/><text x="96.0725%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (66 samples, 0.04%)</title><rect x="95.9268%" y="389" width="0.0355%" height="15" fill="rgb(206,152,27)" fg:x="178583" fg:w="66"/><text x="96.1768%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (87 samples, 0.05%)</title><rect x="95.9241%" y="405" width="0.0467%" height="15" fill="rgb(240,77,30)" fg:x="178578" fg:w="87"/><text x="96.1741%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (300 samples, 0.16%)</title><rect x="95.8177%" y="421" width="0.1611%" height="15" fill="rgb(231,5,3)" fg:x="178380" fg:w="300"/><text x="96.0677%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.01%)</title><rect x="95.9955%" y="325" width="0.0107%" height="15" fill="rgb(207,226,32)" fg:x="178711" fg:w="20"/><text x="96.2455%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (40 samples, 0.02%)</title><rect x="95.9869%" y="341" width="0.0215%" height="15" fill="rgb(222,207,47)" fg:x="178695" fg:w="40"/><text x="96.2369%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (99 samples, 0.05%)</title><rect x="95.9848%" y="357" width="0.0532%" height="15" fill="rgb(229,115,45)" fg:x="178691" fg:w="99"/><text x="96.2348%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (131 samples, 0.07%)</title><rect x="95.9826%" y="373" width="0.0704%" height="15" fill="rgb(224,191,6)" fg:x="178687" fg:w="131"/><text x="96.2326%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (138 samples, 0.07%)</title><rect x="95.9821%" y="389" width="0.0741%" height="15" fill="rgb(230,227,24)" fg:x="178686" fg:w="138"/><text x="96.2321%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (139 samples, 0.07%)</title><rect x="95.9821%" y="405" width="0.0747%" height="15" fill="rgb(228,80,19)" fg:x="178686" fg:w="139"/><text x="96.2321%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (140 samples, 0.08%)</title><rect x="95.9821%" y="421" width="0.0752%" height="15" fill="rgb(247,229,0)" fg:x="178686" fg:w="140"/><text x="96.2321%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.01%)</title><rect x="96.0675%" y="405" width="0.0134%" height="15" fill="rgb(237,194,15)" fg:x="178845" fg:w="25"/><text x="96.3175%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.01%)</title><rect x="96.0675%" y="389" width="0.0134%" height="15" fill="rgb(219,203,20)" fg:x="178845" fg:w="25"/><text x="96.3175%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.01%)</title><rect x="96.0675%" y="373" width="0.0134%" height="15" fill="rgb(234,128,8)" fg:x="178845" fg:w="25"/><text x="96.3175%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::multisubset (52 samples, 0.03%)</title><rect x="96.0573%" y="421" width="0.0279%" height="15" fill="rgb(248,202,8)" fg:x="178826" fg:w="52"/><text x="96.3073%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::verifier::verifier (520 samples, 0.28%)</title><rect x="95.8177%" y="437" width="0.2793%" height="15" fill="rgb(206,104,37)" fg:x="178380" fg:w="520"/><text x="96.0677%" y="447.50"></text></g><g><title>dyld`start (178,904 samples, 96.10%)</title><rect x="0.0000%" y="613" width="96.0992%" height="15" fill="rgb(223,8,27)" fg:x="0" fg:w="178904"/><text x="0.2500%" y="623.50">dyld`start</text></g><g><title>cpu_bench_v0-42868c868297afde`main (178,904 samples, 96.10%)</title><rect x="0.0000%" y="597" width="96.0992%" height="15" fill="rgb(216,217,28)" fg:x="0" fg:w="178904"/><text x="0.2500%" y="607.50">cpu_bench_v0-42868c868297afde`main</text></g><g><title>cpu_bench_v0-42868c868297afde`std::rt::lang_start_internal (178,904 samples, 96.10%)</title><rect x="0.0000%" y="581" width="96.0992%" height="15" fill="rgb(249,199,1)" fg:x="0" fg:w="178904"/><text x="0.2500%" y="591.50">cpu_bench_v0-42868c868297afde`std::rt::lang_start_internal</text></g><g><title>cpu_bench_v0-42868c868297afde`std::rt::lang_start::_{{closure}} (178,904 samples, 96.10%)</title><rect x="0.0000%" y="565" width="96.0992%" height="15" fill="rgb(240,85,17)" fg:x="0" fg:w="178904"/><text x="0.2500%" y="575.50">cpu_bench_v0-42868c868297afde`std::rt::lang_start::_{{closure}}</text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys_common::backtrace::__rust_begin_short_backtrace (178,904 samples, 96.10%)</title><rect x="0.0000%" y="549" width="96.0992%" height="15" fill="rgb(206,108,45)" fg:x="0" fg:w="178904"/><text x="0.2500%" y="559.50">cpu_bench_v0-42868c868297afde`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>cpu_bench_v0-42868c868297afde`cpu_bench_v0::main (178,904 samples, 96.10%)</title><rect x="0.0000%" y="533" width="96.0992%" height="15" fill="rgb(245,210,41)" fg:x="0" fg:w="178904"/><text x="0.2500%" y="543.50">cpu_bench_v0-42868c868297afde`cpu_bench_v0::main</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (178,786 samples, 96.04%)</title><rect x="0.0634%" y="517" width="96.0358%" height="15" fill="rgb(206,13,37)" fg:x="118" fg:w="178786"/><text x="0.3134%" y="527.50">cpu_bench_v0-42868c868297afde`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::common (178,786 samples, 96.04%)</title><rect x="0.0634%" y="501" width="96.0358%" height="15" fill="rgb(250,61,18)" fg:x="118" fg:w="178786"/><text x="0.3134%" y="511.50">cpu_bench_v0-42868c868297afde`criterion::analysis::common</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::routine::Routine::sample (178,760 samples, 96.02%)</title><rect x="0.0774%" y="485" width="96.0218%" height="15" fill="rgb(235,172,48)" fg:x="144" fg:w="178760"/><text x="0.3274%" y="495.50">cpu_bench_v0-42868c868297afde`criterion::routine::Routine::sample</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (11,130 samples, 5.98%)</title><rect x="90.1206%" y="469" width="5.9785%" height="15" fill="rgb(249,201,17)" fg:x="167774" fg:w="11130"/><text x="90.3706%" y="479.50">cpu_benc..</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::bencher::Bencher&lt;M&gt;::iter (11,130 samples, 5.98%)</title><rect x="90.1206%" y="453" width="5.9785%" height="15" fill="rgb(219,208,6)" fg:x="167774" fg:w="11130"/><text x="90.3706%" y="463.50">cpu_benc..</text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (23 samples, 0.01%)</title><rect x="96.1201%" y="357" width="0.0124%" height="15" fill="rgb(248,31,23)" fg:x="178943" fg:w="23"/><text x="96.3701%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (176 samples, 0.09%)</title><rect x="96.1620%" y="325" width="0.0945%" height="15" fill="rgb(245,15,42)" fg:x="179021" fg:w="176"/><text x="96.4120%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (20 samples, 0.01%)</title><rect x="96.5359%" y="277" width="0.0107%" height="15" fill="rgb(222,217,39)" fg:x="179717" fg:w="20"/><text x="96.7859%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.01%)</title><rect x="96.5359%" y="309" width="0.0124%" height="15" fill="rgb(210,219,27)" fg:x="179717" fg:w="23"/><text x="96.7859%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (23 samples, 0.01%)</title><rect x="96.5359%" y="293" width="0.0124%" height="15" fill="rgb(252,166,36)" fg:x="179717" fg:w="23"/><text x="96.7859%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (540 samples, 0.29%)</title><rect x="96.5708%" y="261" width="0.2901%" height="15" fill="rgb(245,132,34)" fg:x="179782" fg:w="540"/><text x="96.8208%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (325 samples, 0.17%)</title><rect x="96.6863%" y="245" width="0.1746%" height="15" fill="rgb(236,54,3)" fg:x="179997" fg:w="325"/><text x="96.9363%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (70 samples, 0.04%)</title><rect x="96.8233%" y="229" width="0.0376%" height="15" fill="rgb(241,173,43)" fg:x="180252" fg:w="70"/><text x="97.0733%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (606 samples, 0.33%)</title><rect x="96.5525%" y="277" width="0.3255%" height="15" fill="rgb(215,190,9)" fg:x="179748" fg:w="606"/><text x="96.8025%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (56 samples, 0.03%)</title><rect x="96.8845%" y="277" width="0.0301%" height="15" fill="rgb(242,101,16)" fg:x="180366" fg:w="56"/><text x="97.1345%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (696 samples, 0.37%)</title><rect x="96.5482%" y="293" width="0.3739%" height="15" fill="rgb(223,190,21)" fg:x="179740" fg:w="696"/><text x="96.7982%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (32 samples, 0.02%)</title><rect x="96.9452%" y="277" width="0.0172%" height="15" fill="rgb(215,228,25)" fg:x="180479" fg:w="32"/><text x="97.1952%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (868 samples, 0.47%)</title><rect x="96.5482%" y="309" width="0.4663%" height="15" fill="rgb(225,36,22)" fg:x="179740" fg:w="868"/><text x="96.7982%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (172 samples, 0.09%)</title><rect x="96.9221%" y="293" width="0.0924%" height="15" fill="rgb(251,106,46)" fg:x="180436" fg:w="172"/><text x="97.1721%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (97 samples, 0.05%)</title><rect x="96.9624%" y="277" width="0.0521%" height="15" fill="rgb(208,90,1)" fg:x="180511" fg:w="97"/><text x="97.2124%" y="287.50"></text></g><g><title>libsystem_m.dylib`exp (1,941 samples, 1.04%)</title><rect x="97.0150%" y="309" width="1.0426%" height="15" fill="rgb(243,10,4)" fg:x="180609" fg:w="1941"/><text x="97.2650%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (3,354 samples, 1.80%)</title><rect x="96.2566%" y="325" width="1.8016%" height="15" fill="rgb(212,137,27)" fg:x="179197" fg:w="3354"/><text x="96.5066%" y="335.50">c..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (23 samples, 0.01%)</title><rect x="98.0593%" y="245" width="0.0124%" height="15" fill="rgb(231,220,49)" fg:x="182553" fg:w="23"/><text x="98.3093%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (26 samples, 0.01%)</title><rect x="98.0587%" y="261" width="0.0140%" height="15" fill="rgb(237,96,20)" fg:x="182552" fg:w="26"/><text x="98.3087%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (32 samples, 0.02%)</title><rect x="98.0582%" y="325" width="0.0172%" height="15" fill="rgb(239,229,30)" fg:x="182551" fg:w="32"/><text x="98.3082%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.02%)</title><rect x="98.0582%" y="309" width="0.0172%" height="15" fill="rgb(219,65,33)" fg:x="182551" fg:w="32"/><text x="98.3082%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 0.02%)</title><rect x="98.0582%" y="293" width="0.0172%" height="15" fill="rgb(243,134,7)" fg:x="182551" fg:w="32"/><text x="98.3082%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (32 samples, 0.02%)</title><rect x="98.0582%" y="277" width="0.0172%" height="15" fill="rgb(216,177,54)" fg:x="182551" fg:w="32"/><text x="98.3082%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.01%)</title><rect x="98.0786%" y="165" width="0.0140%" height="15" fill="rgb(211,160,20)" fg:x="182589" fg:w="26"/><text x="98.3286%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (31 samples, 0.02%)</title><rect x="98.0775%" y="181" width="0.0167%" height="15" fill="rgb(239,85,39)" fg:x="182587" fg:w="31"/><text x="98.3275%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.02%)</title><rect x="98.0770%" y="197" width="0.0204%" height="15" fill="rgb(232,125,22)" fg:x="182586" fg:w="38"/><text x="98.3270%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (52 samples, 0.03%)</title><rect x="98.0764%" y="213" width="0.0279%" height="15" fill="rgb(244,57,34)" fg:x="182585" fg:w="52"/><text x="98.3264%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (54 samples, 0.03%)</title><rect x="98.0759%" y="229" width="0.0290%" height="15" fill="rgb(214,203,32)" fg:x="182584" fg:w="54"/><text x="98.3259%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (56 samples, 0.03%)</title><rect x="98.0754%" y="261" width="0.0301%" height="15" fill="rgb(207,58,43)" fg:x="182583" fg:w="56"/><text x="98.3254%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (55 samples, 0.03%)</title><rect x="98.0759%" y="245" width="0.0295%" height="15" fill="rgb(215,193,15)" fg:x="182584" fg:w="55"/><text x="98.3259%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (81 samples, 0.04%)</title><rect x="98.0754%" y="277" width="0.0435%" height="15" fill="rgb(232,15,44)" fg:x="182583" fg:w="81"/><text x="98.3254%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 0.01%)</title><rect x="98.1055%" y="261" width="0.0134%" height="15" fill="rgb(212,3,48)" fg:x="182639" fg:w="25"/><text x="98.3555%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.01%)</title><rect x="98.1055%" y="245" width="0.0134%" height="15" fill="rgb(218,128,7)" fg:x="182639" fg:w="25"/><text x="98.3555%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.01%)</title><rect x="98.1055%" y="229" width="0.0134%" height="15" fill="rgb(226,216,39)" fg:x="182639" fg:w="25"/><text x="98.3555%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (24 samples, 0.01%)</title><rect x="98.1060%" y="213" width="0.0129%" height="15" fill="rgb(243,47,51)" fg:x="182640" fg:w="24"/><text x="98.3560%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (82 samples, 0.04%)</title><rect x="98.0754%" y="309" width="0.0440%" height="15" fill="rgb(241,183,40)" fg:x="182583" fg:w="82"/><text x="98.3254%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (82 samples, 0.04%)</title><rect x="98.0754%" y="293" width="0.0440%" height="15" fill="rgb(231,217,32)" fg:x="182583" fg:w="82"/><text x="98.3254%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (85 samples, 0.05%)</title><rect x="98.0754%" y="325" width="0.0457%" height="15" fill="rgb(229,61,38)" fg:x="182583" fg:w="85"/><text x="98.3254%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (3,803 samples, 2.04%)</title><rect x="96.1620%" y="341" width="2.0428%" height="15" fill="rgb(225,210,5)" fg:x="179021" fg:w="3803"/><text x="96.4120%" y="351.50">c..</text></g><g><title>libsystem_m.dylib`exp (156 samples, 0.08%)</title><rect x="98.1210%" y="325" width="0.0838%" height="15" fill="rgb(231,79,45)" fg:x="182668" fg:w="156"/><text x="98.3710%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (4,031 samples, 2.17%)</title><rect x="96.1330%" y="357" width="2.1653%" height="15" fill="rgb(224,100,7)" fg:x="178967" fg:w="4031"/><text x="96.3830%" y="367.50">c..</text></g><g><title>libsystem_m.dylib`exp (174 samples, 0.09%)</title><rect x="98.2048%" y="341" width="0.0935%" height="15" fill="rgb(241,198,18)" fg:x="182824" fg:w="174"/><text x="98.4548%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (19 samples, 0.01%)</title><rect x="98.3026%" y="261" width="0.0102%" height="15" fill="rgb(252,97,53)" fg:x="183006" fg:w="19"/><text x="98.5526%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.01%)</title><rect x="98.3026%" y="309" width="0.0129%" height="15" fill="rgb(220,88,7)" fg:x="183006" fg:w="24"/><text x="98.5526%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.01%)</title><rect x="98.3026%" y="293" width="0.0129%" height="15" fill="rgb(213,176,14)" fg:x="183006" fg:w="24"/><text x="98.5526%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (24 samples, 0.01%)</title><rect x="98.3026%" y="277" width="0.0129%" height="15" fill="rgb(246,73,7)" fg:x="183006" fg:w="24"/><text x="98.5526%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (26 samples, 0.01%)</title><rect x="98.3160%" y="229" width="0.0140%" height="15" fill="rgb(245,64,36)" fg:x="183031" fg:w="26"/><text x="98.5660%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (28 samples, 0.02%)</title><rect x="98.3155%" y="245" width="0.0150%" height="15" fill="rgb(245,80,10)" fg:x="183030" fg:w="28"/><text x="98.5655%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (31 samples, 0.02%)</title><rect x="98.3155%" y="261" width="0.0167%" height="15" fill="rgb(232,107,50)" fg:x="183030" fg:w="31"/><text x="98.5655%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (64 samples, 0.03%)</title><rect x="98.2983%" y="357" width="0.0344%" height="15" fill="rgb(253,3,0)" fg:x="182998" fg:w="64"/><text x="98.5483%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (64 samples, 0.03%)</title><rect x="98.2983%" y="341" width="0.0344%" height="15" fill="rgb(212,99,53)" fg:x="182998" fg:w="64"/><text x="98.5483%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (56 samples, 0.03%)</title><rect x="98.3026%" y="325" width="0.0301%" height="15" fill="rgb(249,111,54)" fg:x="183006" fg:w="56"/><text x="98.5526%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (32 samples, 0.02%)</title><rect x="98.3155%" y="309" width="0.0172%" height="15" fill="rgb(249,55,30)" fg:x="183030" fg:w="32"/><text x="98.5655%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.02%)</title><rect x="98.3155%" y="293" width="0.0172%" height="15" fill="rgb(237,47,42)" fg:x="183030" fg:w="32"/><text x="98.5655%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 0.02%)</title><rect x="98.3155%" y="277" width="0.0172%" height="15" fill="rgb(211,20,18)" fg:x="183030" fg:w="32"/><text x="98.5655%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (52 samples, 0.03%)</title><rect x="98.3391%" y="165" width="0.0279%" height="15" fill="rgb(231,203,46)" fg:x="183074" fg:w="52"/><text x="98.5891%" y="175.50"></text></g><g><title>libsystem_m.dylib`exp (37 samples, 0.02%)</title><rect x="98.3472%" y="149" width="0.0199%" height="15" fill="rgb(237,142,3)" fg:x="183089" fg:w="37"/><text x="98.5972%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (58 samples, 0.03%)</title><rect x="98.3380%" y="181" width="0.0312%" height="15" fill="rgb(241,107,1)" fg:x="183072" fg:w="58"/><text x="98.5880%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (79 samples, 0.04%)</title><rect x="98.3359%" y="197" width="0.0424%" height="15" fill="rgb(229,83,13)" fg:x="183068" fg:w="79"/><text x="98.5859%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (81 samples, 0.04%)</title><rect x="98.3354%" y="213" width="0.0435%" height="15" fill="rgb(241,91,40)" fg:x="183067" fg:w="81"/><text x="98.5854%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (86 samples, 0.05%)</title><rect x="98.3354%" y="229" width="0.0462%" height="15" fill="rgb(225,3,45)" fg:x="183067" fg:w="86"/><text x="98.5854%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (88 samples, 0.05%)</title><rect x="98.3348%" y="245" width="0.0473%" height="15" fill="rgb(244,223,14)" fg:x="183066" fg:w="88"/><text x="98.5848%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (98 samples, 0.05%)</title><rect x="98.3332%" y="261" width="0.0526%" height="15" fill="rgb(224,124,37)" fg:x="183063" fg:w="98"/><text x="98.5832%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (111 samples, 0.06%)</title><rect x="98.3327%" y="277" width="0.0596%" height="15" fill="rgb(251,171,30)" fg:x="183062" fg:w="111"/><text x="98.5827%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (115 samples, 0.06%)</title><rect x="98.3327%" y="293" width="0.0618%" height="15" fill="rgb(236,46,54)" fg:x="183062" fg:w="115"/><text x="98.5827%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (130 samples, 0.07%)</title><rect x="98.3327%" y="309" width="0.0698%" height="15" fill="rgb(245,213,5)" fg:x="183062" fg:w="130"/><text x="98.5827%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (131 samples, 0.07%)</title><rect x="98.3327%" y="341" width="0.0704%" height="15" fill="rgb(230,144,27)" fg:x="183062" fg:w="131"/><text x="98.5827%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (131 samples, 0.07%)</title><rect x="98.3327%" y="325" width="0.0704%" height="15" fill="rgb(220,86,6)" fg:x="183062" fg:w="131"/><text x="98.5827%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (132 samples, 0.07%)</title><rect x="98.3327%" y="357" width="0.0709%" height="15" fill="rgb(240,20,13)" fg:x="183062" fg:w="132"/><text x="98.5827%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (4,268 samples, 2.29%)</title><rect x="96.1201%" y="373" width="2.2926%" height="15" fill="rgb(217,89,34)" fg:x="178943" fg:w="4268"/><text x="96.3701%" y="383.50">c..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (4,341 samples, 2.33%)</title><rect x="96.1121%" y="389" width="2.3318%" height="15" fill="rgb(229,13,5)" fg:x="178928" fg:w="4341"/><text x="96.3621%" y="399.50">c..</text></g><g><title>libsystem_m.dylib`exp (58 samples, 0.03%)</title><rect x="98.4127%" y="373" width="0.0312%" height="15" fill="rgb(244,67,35)" fg:x="183211" fg:w="58"/><text x="98.6627%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (20 samples, 0.01%)</title><rect x="98.4498%" y="261" width="0.0107%" height="15" fill="rgb(221,40,2)" fg:x="183280" fg:w="20"/><text x="98.6998%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (20 samples, 0.01%)</title><rect x="98.4498%" y="245" width="0.0107%" height="15" fill="rgb(237,157,21)" fg:x="183280" fg:w="20"/><text x="98.6998%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.01%)</title><rect x="98.4498%" y="309" width="0.0134%" height="15" fill="rgb(222,94,11)" fg:x="183280" fg:w="25"/><text x="98.6998%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.01%)</title><rect x="98.4498%" y="293" width="0.0134%" height="15" fill="rgb(249,113,6)" fg:x="183280" fg:w="25"/><text x="98.6998%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (25 samples, 0.01%)</title><rect x="98.4498%" y="277" width="0.0134%" height="15" fill="rgb(238,137,36)" fg:x="183280" fg:w="25"/><text x="98.6998%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (19 samples, 0.01%)</title><rect x="98.4643%" y="229" width="0.0102%" height="15" fill="rgb(210,102,26)" fg:x="183307" fg:w="19"/><text x="98.7143%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (22 samples, 0.01%)</title><rect x="98.4632%" y="245" width="0.0118%" height="15" fill="rgb(218,30,30)" fg:x="183305" fg:w="22"/><text x="98.7132%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (67 samples, 0.04%)</title><rect x="98.4449%" y="341" width="0.0360%" height="15" fill="rgb(214,67,26)" fg:x="183271" fg:w="67"/><text x="98.6949%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (58 samples, 0.03%)</title><rect x="98.4498%" y="325" width="0.0312%" height="15" fill="rgb(251,9,53)" fg:x="183280" fg:w="58"/><text x="98.6998%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (33 samples, 0.02%)</title><rect x="98.4632%" y="309" width="0.0177%" height="15" fill="rgb(228,204,25)" fg:x="183305" fg:w="33"/><text x="98.7132%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (33 samples, 0.02%)</title><rect x="98.4632%" y="293" width="0.0177%" height="15" fill="rgb(207,153,8)" fg:x="183305" fg:w="33"/><text x="98.7132%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.02%)</title><rect x="98.4632%" y="277" width="0.0177%" height="15" fill="rgb(242,9,16)" fg:x="183305" fg:w="33"/><text x="98.7132%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (33 samples, 0.02%)</title><rect x="98.4632%" y="261" width="0.0177%" height="15" fill="rgb(217,211,10)" fg:x="183305" fg:w="33"/><text x="98.7132%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (19 samples, 0.01%)</title><rect x="98.4820%" y="229" width="0.0102%" height="15" fill="rgb(219,228,52)" fg:x="183340" fg:w="19"/><text x="98.7320%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (23 samples, 0.01%)</title><rect x="98.4809%" y="245" width="0.0124%" height="15" fill="rgb(231,92,29)" fg:x="183338" fg:w="23"/><text x="98.7309%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.02%)</title><rect x="98.4809%" y="293" width="0.0167%" height="15" fill="rgb(232,8,23)" fg:x="183338" fg:w="31"/><text x="98.7309%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.02%)</title><rect x="98.4809%" y="277" width="0.0167%" height="15" fill="rgb(216,211,34)" fg:x="183338" fg:w="31"/><text x="98.7309%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (31 samples, 0.02%)</title><rect x="98.4809%" y="261" width="0.0167%" height="15" fill="rgb(236,151,0)" fg:x="183338" fg:w="31"/><text x="98.7309%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (27 samples, 0.01%)</title><rect x="98.4976%" y="213" width="0.0145%" height="15" fill="rgb(209,168,3)" fg:x="183369" fg:w="27"/><text x="98.7476%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (20 samples, 0.01%)</title><rect x="98.5013%" y="197" width="0.0107%" height="15" fill="rgb(208,129,28)" fg:x="183376" fg:w="20"/><text x="98.7513%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (28 samples, 0.02%)</title><rect x="98.4976%" y="229" width="0.0150%" height="15" fill="rgb(229,78,22)" fg:x="183369" fg:w="28"/><text x="98.7476%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (31 samples, 0.02%)</title><rect x="98.4976%" y="293" width="0.0167%" height="15" fill="rgb(228,187,13)" fg:x="183369" fg:w="31"/><text x="98.7476%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.02%)</title><rect x="98.4976%" y="277" width="0.0167%" height="15" fill="rgb(240,119,24)" fg:x="183369" fg:w="31"/><text x="98.7476%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.02%)</title><rect x="98.4976%" y="261" width="0.0167%" height="15" fill="rgb(209,194,42)" fg:x="183369" fg:w="31"/><text x="98.7476%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (31 samples, 0.02%)</title><rect x="98.4976%" y="245" width="0.0167%" height="15" fill="rgb(247,200,46)" fg:x="183369" fg:w="31"/><text x="98.7476%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (133 samples, 0.07%)</title><rect x="98.4439%" y="389" width="0.0714%" height="15" fill="rgb(218,76,16)" fg:x="183269" fg:w="133"/><text x="98.6939%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (133 samples, 0.07%)</title><rect x="98.4439%" y="373" width="0.0714%" height="15" fill="rgb(225,21,48)" fg:x="183269" fg:w="133"/><text x="98.6939%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (131 samples, 0.07%)</title><rect x="98.4449%" y="357" width="0.0704%" height="15" fill="rgb(239,223,50)" fg:x="183271" fg:w="131"/><text x="98.6949%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (64 samples, 0.03%)</title><rect x="98.4809%" y="341" width="0.0344%" height="15" fill="rgb(244,45,21)" fg:x="183338" fg:w="64"/><text x="98.7309%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (64 samples, 0.03%)</title><rect x="98.4809%" y="325" width="0.0344%" height="15" fill="rgb(232,33,43)" fg:x="183338" fg:w="64"/><text x="98.7309%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (64 samples, 0.03%)</title><rect x="98.4809%" y="309" width="0.0344%" height="15" fill="rgb(209,8,3)" fg:x="183338" fg:w="64"/><text x="98.7309%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (77 samples, 0.04%)</title><rect x="98.5341%" y="197" width="0.0414%" height="15" fill="rgb(214,25,53)" fg:x="183437" fg:w="77"/><text x="98.7841%" y="207.50"></text></g><g><title>libsystem_m.dylib`exp (53 samples, 0.03%)</title><rect x="98.5470%" y="181" width="0.0285%" height="15" fill="rgb(254,186,54)" fg:x="183461" fg:w="53"/><text x="98.7970%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (90 samples, 0.05%)</title><rect x="98.5303%" y="213" width="0.0483%" height="15" fill="rgb(208,174,49)" fg:x="183430" fg:w="90"/><text x="98.7803%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (122 samples, 0.07%)</title><rect x="98.5223%" y="229" width="0.0655%" height="15" fill="rgb(233,191,51)" fg:x="183415" fg:w="122"/><text x="98.7723%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (134 samples, 0.07%)</title><rect x="98.5207%" y="245" width="0.0720%" height="15" fill="rgb(222,134,10)" fg:x="183412" fg:w="134"/><text x="98.7707%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (140 samples, 0.08%)</title><rect x="98.5207%" y="261" width="0.0752%" height="15" fill="rgb(230,226,20)" fg:x="183412" fg:w="140"/><text x="98.7707%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (143 samples, 0.08%)</title><rect x="98.5207%" y="277" width="0.0768%" height="15" fill="rgb(251,111,25)" fg:x="183412" fg:w="143"/><text x="98.7707%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (159 samples, 0.09%)</title><rect x="98.5180%" y="293" width="0.0854%" height="15" fill="rgb(224,40,46)" fg:x="183407" fg:w="159"/><text x="98.7680%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (166 samples, 0.09%)</title><rect x="98.5175%" y="309" width="0.0892%" height="15" fill="rgb(236,108,47)" fg:x="183406" fg:w="166"/><text x="98.7675%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (173 samples, 0.09%)</title><rect x="98.5169%" y="325" width="0.0929%" height="15" fill="rgb(234,93,0)" fg:x="183405" fg:w="173"/><text x="98.7669%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (26 samples, 0.01%)</title><rect x="98.6125%" y="149" width="0.0140%" height="15" fill="rgb(224,213,32)" fg:x="183583" fg:w="26"/><text x="98.8625%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.01%)</title><rect x="98.6136%" y="133" width="0.0129%" height="15" fill="rgb(251,11,48)" fg:x="183585" fg:w="24"/><text x="98.8636%" y="143.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (30 samples, 0.02%)</title><rect x="98.6115%" y="181" width="0.0161%" height="15" fill="rgb(236,173,5)" fg:x="183581" fg:w="30"/><text x="98.8615%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.02%)</title><rect x="98.6115%" y="165" width="0.0161%" height="15" fill="rgb(230,95,12)" fg:x="183581" fg:w="30"/><text x="98.8615%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (32 samples, 0.02%)</title><rect x="98.6115%" y="213" width="0.0172%" height="15" fill="rgb(232,209,1)" fg:x="183581" fg:w="32"/><text x="98.8615%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.02%)</title><rect x="98.6115%" y="197" width="0.0172%" height="15" fill="rgb(232,6,1)" fg:x="183581" fg:w="32"/><text x="98.8615%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.02%)</title><rect x="98.6115%" y="229" width="0.0183%" height="15" fill="rgb(210,224,50)" fg:x="183581" fg:w="34"/><text x="98.8615%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (52 samples, 0.03%)</title><rect x="98.6109%" y="245" width="0.0279%" height="15" fill="rgb(228,127,35)" fg:x="183580" fg:w="52"/><text x="98.8609%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (53 samples, 0.03%)</title><rect x="98.6109%" y="261" width="0.0285%" height="15" fill="rgb(245,102,45)" fg:x="183580" fg:w="53"/><text x="98.8609%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (61 samples, 0.03%)</title><rect x="98.6104%" y="277" width="0.0328%" height="15" fill="rgb(214,1,49)" fg:x="183579" fg:w="61"/><text x="98.8604%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (63 samples, 0.03%)</title><rect x="98.6098%" y="309" width="0.0338%" height="15" fill="rgb(226,163,40)" fg:x="183578" fg:w="63"/><text x="98.8598%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (63 samples, 0.03%)</title><rect x="98.6098%" y="293" width="0.0338%" height="15" fill="rgb(239,212,28)" fg:x="183578" fg:w="63"/><text x="98.8598%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (240 samples, 0.13%)</title><rect x="98.5158%" y="341" width="0.1289%" height="15" fill="rgb(220,20,13)" fg:x="183403" fg:w="240"/><text x="98.7658%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (65 samples, 0.03%)</title><rect x="98.6098%" y="325" width="0.0349%" height="15" fill="rgb(210,164,35)" fg:x="183578" fg:w="65"/><text x="98.8598%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (242 samples, 0.13%)</title><rect x="98.5153%" y="373" width="0.1300%" height="15" fill="rgb(248,109,41)" fg:x="183402" fg:w="242"/><text x="98.7653%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (241 samples, 0.13%)</title><rect x="98.5158%" y="357" width="0.1295%" height="15" fill="rgb(238,23,50)" fg:x="183403" fg:w="241"/><text x="98.7658%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (243 samples, 0.13%)</title><rect x="98.5153%" y="389" width="0.1305%" height="15" fill="rgb(211,48,49)" fg:x="183402" fg:w="243"/><text x="98.7653%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (4,724 samples, 2.54%)</title><rect x="96.1110%" y="405" width="2.5375%" height="15" fill="rgb(223,36,21)" fg:x="178926" fg:w="4724"/><text x="96.3610%" y="415.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (4,735 samples, 2.54%)</title><rect x="96.1083%" y="421" width="2.5434%" height="15" fill="rgb(207,123,46)" fg:x="178921" fg:w="4735"/><text x="96.3583%" y="431.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.02%)</title><rect x="98.6555%" y="341" width="0.0172%" height="15" fill="rgb(240,218,32)" fg:x="183663" fg:w="32"/><text x="98.9055%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.01%)</title><rect x="98.6603%" y="325" width="0.0124%" height="15" fill="rgb(252,5,43)" fg:x="183672" fg:w="23"/><text x="98.9103%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (68 samples, 0.04%)</title><rect x="98.6550%" y="373" width="0.0365%" height="15" fill="rgb(252,84,19)" fg:x="183662" fg:w="68"/><text x="98.9050%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (67 samples, 0.04%)</title><rect x="98.6555%" y="357" width="0.0360%" height="15" fill="rgb(243,152,39)" fg:x="183663" fg:w="67"/><text x="98.9055%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (35 samples, 0.02%)</title><rect x="98.6727%" y="341" width="0.0188%" height="15" fill="rgb(234,160,15)" fg:x="183695" fg:w="35"/><text x="98.9227%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.02%)</title><rect x="98.6727%" y="325" width="0.0188%" height="15" fill="rgb(237,34,20)" fg:x="183695" fg:w="35"/><text x="98.9227%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (28 samples, 0.02%)</title><rect x="98.6765%" y="309" width="0.0150%" height="15" fill="rgb(229,97,13)" fg:x="183702" fg:w="28"/><text x="98.9265%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.01%)</title><rect x="98.6915%" y="325" width="0.0107%" height="15" fill="rgb(234,71,50)" fg:x="183730" fg:w="20"/><text x="98.9415%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (22 samples, 0.01%)</title><rect x="98.7022%" y="325" width="0.0118%" height="15" fill="rgb(253,155,4)" fg:x="183750" fg:w="22"/><text x="98.9522%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.01%)</title><rect x="98.7022%" y="309" width="0.0118%" height="15" fill="rgb(222,185,37)" fg:x="183750" fg:w="22"/><text x="98.9522%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (21 samples, 0.01%)</title><rect x="98.7028%" y="293" width="0.0113%" height="15" fill="rgb(251,177,13)" fg:x="183751" fg:w="21"/><text x="98.9528%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.03%)</title><rect x="98.6915%" y="373" width="0.0258%" height="15" fill="rgb(250,179,40)" fg:x="183730" fg:w="48"/><text x="98.9415%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.03%)</title><rect x="98.6915%" y="357" width="0.0258%" height="15" fill="rgb(242,44,2)" fg:x="183730" fg:w="48"/><text x="98.9415%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (48 samples, 0.03%)</title><rect x="98.6915%" y="341" width="0.0258%" height="15" fill="rgb(216,177,13)" fg:x="183730" fg:w="48"/><text x="98.9415%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.01%)</title><rect x="98.7173%" y="309" width="0.0129%" height="15" fill="rgb(216,106,43)" fg:x="183778" fg:w="24"/><text x="98.9673%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.01%)</title><rect x="98.7178%" y="293" width="0.0124%" height="15" fill="rgb(216,183,2)" fg:x="183779" fg:w="23"/><text x="98.9678%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (161 samples, 0.09%)</title><rect x="98.6517%" y="421" width="0.0865%" height="15" fill="rgb(249,75,3)" fg:x="183656" fg:w="161"/><text x="98.9017%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (161 samples, 0.09%)</title><rect x="98.6517%" y="405" width="0.0865%" height="15" fill="rgb(219,67,39)" fg:x="183656" fg:w="161"/><text x="98.9017%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (155 samples, 0.08%)</title><rect x="98.6550%" y="389" width="0.0833%" height="15" fill="rgb(253,228,2)" fg:x="183662" fg:w="155"/><text x="98.9050%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (39 samples, 0.02%)</title><rect x="98.7173%" y="373" width="0.0209%" height="15" fill="rgb(235,138,27)" fg:x="183778" fg:w="39"/><text x="98.9673%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (39 samples, 0.02%)</title><rect x="98.7173%" y="357" width="0.0209%" height="15" fill="rgb(236,97,51)" fg:x="183778" fg:w="39"/><text x="98.9673%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.02%)</title><rect x="98.7173%" y="341" width="0.0209%" height="15" fill="rgb(240,80,30)" fg:x="183778" fg:w="39"/><text x="98.9673%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (39 samples, 0.02%)</title><rect x="98.7173%" y="325" width="0.0209%" height="15" fill="rgb(230,178,19)" fg:x="183778" fg:w="39"/><text x="98.9673%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.01%)</title><rect x="98.7801%" y="197" width="0.0113%" height="15" fill="rgb(210,190,27)" fg:x="183895" fg:w="21"/><text x="99.0301%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (31 samples, 0.02%)</title><rect x="98.7801%" y="213" width="0.0167%" height="15" fill="rgb(222,107,31)" fg:x="183895" fg:w="31"/><text x="99.0301%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (146 samples, 0.08%)</title><rect x="98.7683%" y="229" width="0.0784%" height="15" fill="rgb(216,127,34)" fg:x="183873" fg:w="146"/><text x="99.0183%" y="239.50"></text></g><g><title>libsystem_m.dylib`exp (93 samples, 0.05%)</title><rect x="98.7968%" y="213" width="0.0500%" height="15" fill="rgb(234,116,52)" fg:x="183926" fg:w="93"/><text x="99.0468%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (157 samples, 0.08%)</title><rect x="98.7656%" y="245" width="0.0843%" height="15" fill="rgb(222,124,15)" fg:x="183868" fg:w="157"/><text x="99.0156%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (244 samples, 0.13%)</title><rect x="98.7554%" y="261" width="0.1311%" height="15" fill="rgb(231,179,28)" fg:x="183849" fg:w="244"/><text x="99.0054%" y="271.50"></text></g><g><title>libsystem_m.dylib`exp (68 samples, 0.04%)</title><rect x="98.8500%" y="245" width="0.0365%" height="15" fill="rgb(226,93,45)" fg:x="184025" fg:w="68"/><text x="99.1000%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (272 samples, 0.15%)</title><rect x="98.7527%" y="277" width="0.1461%" height="15" fill="rgb(215,8,51)" fg:x="183844" fg:w="272"/><text x="99.0027%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (306 samples, 0.16%)</title><rect x="98.7495%" y="293" width="0.1644%" height="15" fill="rgb(223,106,5)" fg:x="183838" fg:w="306"/><text x="98.9995%" y="303.50"></text></g><g><title>libsystem_m.dylib`exp (28 samples, 0.02%)</title><rect x="98.8988%" y="277" width="0.0150%" height="15" fill="rgb(250,191,5)" fg:x="184116" fg:w="28"/><text x="99.1488%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.01%)</title><rect x="98.9171%" y="197" width="0.0124%" height="15" fill="rgb(242,132,44)" fg:x="184150" fg:w="23"/><text x="99.1671%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (41 samples, 0.02%)</title><rect x="98.9171%" y="213" width="0.0220%" height="15" fill="rgb(251,152,29)" fg:x="184150" fg:w="41"/><text x="99.1671%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (43 samples, 0.02%)</title><rect x="98.9171%" y="229" width="0.0231%" height="15" fill="rgb(218,179,5)" fg:x="184150" fg:w="43"/><text x="99.1671%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (47 samples, 0.03%)</title><rect x="98.9171%" y="245" width="0.0252%" height="15" fill="rgb(227,67,19)" fg:x="184150" fg:w="47"/><text x="99.1671%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (49 samples, 0.03%)</title><rect x="98.9166%" y="293" width="0.0263%" height="15" fill="rgb(233,119,31)" fg:x="184149" fg:w="49"/><text x="99.1666%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (49 samples, 0.03%)</title><rect x="98.9166%" y="277" width="0.0263%" height="15" fill="rgb(241,120,22)" fg:x="184149" fg:w="49"/><text x="99.1666%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.03%)</title><rect x="98.9166%" y="261" width="0.0263%" height="15" fill="rgb(224,102,30)" fg:x="184149" fg:w="49"/><text x="99.1666%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (366 samples, 0.20%)</title><rect x="98.7484%" y="309" width="0.1966%" height="15" fill="rgb(210,164,37)" fg:x="183836" fg:w="366"/><text x="98.9984%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (384 samples, 0.21%)</title><rect x="98.7441%" y="325" width="0.2063%" height="15" fill="rgb(226,191,16)" fg:x="183828" fg:w="384"/><text x="98.9941%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.01%)</title><rect x="98.9542%" y="261" width="0.0107%" height="15" fill="rgb(214,40,45)" fg:x="184219" fg:w="20"/><text x="99.2042%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.01%)</title><rect x="98.9547%" y="245" width="0.0102%" height="15" fill="rgb(244,29,26)" fg:x="184220" fg:w="19"/><text x="99.2047%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (22 samples, 0.01%)</title><rect x="98.9542%" y="277" width="0.0118%" height="15" fill="rgb(216,16,5)" fg:x="184219" fg:w="22"/><text x="99.2042%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (23 samples, 0.01%)</title><rect x="98.9542%" y="309" width="0.0124%" height="15" fill="rgb(249,76,35)" fg:x="184219" fg:w="23"/><text x="99.2042%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.01%)</title><rect x="98.9542%" y="293" width="0.0124%" height="15" fill="rgb(207,11,44)" fg:x="184219" fg:w="23"/><text x="99.2042%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (418 samples, 0.22%)</title><rect x="98.7425%" y="341" width="0.2245%" height="15" fill="rgb(228,190,49)" fg:x="183825" fg:w="418"/><text x="98.9925%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (24 samples, 0.01%)</title><rect x="98.9542%" y="325" width="0.0129%" height="15" fill="rgb(214,173,12)" fg:x="184219" fg:w="24"/><text x="99.2042%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (426 samples, 0.23%)</title><rect x="98.7404%" y="357" width="0.2288%" height="15" fill="rgb(218,26,35)" fg:x="183821" fg:w="426"/><text x="98.9904%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.01%)</title><rect x="98.9783%" y="181" width="0.0102%" height="15" fill="rgb(220,200,19)" fg:x="184264" fg:w="19"/><text x="99.2283%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.03%)</title><rect x="98.9751%" y="197" width="0.0263%" height="15" fill="rgb(239,95,49)" fg:x="184258" fg:w="49"/><text x="99.2251%" y="207.50"></text></g><g><title>libsystem_m.dylib`exp (24 samples, 0.01%)</title><rect x="98.9885%" y="181" width="0.0129%" height="15" fill="rgb(235,85,53)" fg:x="184283" fg:w="24"/><text x="99.2385%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (53 samples, 0.03%)</title><rect x="98.9735%" y="213" width="0.0285%" height="15" fill="rgb(233,133,31)" fg:x="184255" fg:w="53"/><text x="99.2235%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (60 samples, 0.03%)</title><rect x="98.9724%" y="229" width="0.0322%" height="15" fill="rgb(218,25,20)" fg:x="184253" fg:w="60"/><text x="99.2224%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (65 samples, 0.03%)</title><rect x="98.9724%" y="245" width="0.0349%" height="15" fill="rgb(252,210,38)" fg:x="184253" fg:w="65"/><text x="99.2224%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (72 samples, 0.04%)</title><rect x="98.9713%" y="261" width="0.0387%" height="15" fill="rgb(242,134,21)" fg:x="184251" fg:w="72"/><text x="99.2213%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (80 samples, 0.04%)</title><rect x="98.9713%" y="277" width="0.0430%" height="15" fill="rgb(213,28,48)" fg:x="184251" fg:w="80"/><text x="99.2213%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (88 samples, 0.05%)</title><rect x="98.9692%" y="293" width="0.0473%" height="15" fill="rgb(250,196,2)" fg:x="184247" fg:w="88"/><text x="99.2192%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.01%)</title><rect x="99.0165%" y="229" width="0.0107%" height="15" fill="rgb(227,5,17)" fg:x="184335" fg:w="20"/><text x="99.2665%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.01%)</title><rect x="99.0170%" y="213" width="0.0102%" height="15" fill="rgb(221,226,24)" fg:x="184336" fg:w="19"/><text x="99.2670%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (118 samples, 0.06%)</title><rect x="98.9692%" y="309" width="0.0634%" height="15" fill="rgb(211,5,48)" fg:x="184247" fg:w="118"/><text x="99.2192%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (30 samples, 0.02%)</title><rect x="99.0165%" y="293" width="0.0161%" height="15" fill="rgb(219,150,6)" fg:x="184335" fg:w="30"/><text x="99.2665%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (30 samples, 0.02%)</title><rect x="99.0165%" y="277" width="0.0161%" height="15" fill="rgb(251,46,16)" fg:x="184335" fg:w="30"/><text x="99.2665%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.02%)</title><rect x="99.0165%" y="261" width="0.0161%" height="15" fill="rgb(220,204,40)" fg:x="184335" fg:w="30"/><text x="99.2665%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (30 samples, 0.02%)</title><rect x="99.0165%" y="245" width="0.0161%" height="15" fill="rgb(211,85,2)" fg:x="184335" fg:w="30"/><text x="99.2665%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (120 samples, 0.06%)</title><rect x="98.9692%" y="341" width="0.0645%" height="15" fill="rgb(229,17,7)" fg:x="184247" fg:w="120"/><text x="99.2192%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (120 samples, 0.06%)</title><rect x="98.9692%" y="325" width="0.0645%" height="15" fill="rgb(239,72,28)" fg:x="184247" fg:w="120"/><text x="99.2192%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (551 samples, 0.30%)</title><rect x="98.7404%" y="373" width="0.2960%" height="15" fill="rgb(230,47,54)" fg:x="183821" fg:w="551"/><text x="98.9904%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (125 samples, 0.07%)</title><rect x="98.9692%" y="357" width="0.0671%" height="15" fill="rgb(214,50,8)" fg:x="184247" fg:w="125"/><text x="99.2192%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (558 samples, 0.30%)</title><rect x="98.7382%" y="405" width="0.2997%" height="15" fill="rgb(216,198,43)" fg:x="183817" fg:w="558"/><text x="98.9882%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (557 samples, 0.30%)</title><rect x="98.7388%" y="389" width="0.2992%" height="15" fill="rgb(234,20,35)" fg:x="183818" fg:w="557"/><text x="98.9888%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (559 samples, 0.30%)</title><rect x="98.7382%" y="421" width="0.3003%" height="15" fill="rgb(254,45,19)" fg:x="183817" fg:w="559"/><text x="98.9882%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (5,459 samples, 2.93%)</title><rect x="96.1078%" y="437" width="2.9323%" height="15" fill="rgb(219,14,44)" fg:x="178920" fg:w="5459"/><text x="96.3578%" y="447.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (5,468 samples, 2.94%)</title><rect x="96.1046%" y="453" width="2.9372%" height="15" fill="rgb(217,220,26)" fg:x="178914" fg:w="5468"/><text x="96.3546%" y="463.50">cp..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (36 samples, 0.02%)</title><rect x="99.0417%" y="405" width="0.0193%" height="15" fill="rgb(213,158,28)" fg:x="184382" fg:w="36"/><text x="99.2917%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (30 samples, 0.02%)</title><rect x="99.0449%" y="389" width="0.0161%" height="15" fill="rgb(252,51,52)" fg:x="184388" fg:w="30"/><text x="99.2949%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (29 samples, 0.02%)</title><rect x="99.0611%" y="405" width="0.0156%" height="15" fill="rgb(246,89,16)" fg:x="184418" fg:w="29"/><text x="99.3111%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.02%)</title><rect x="99.0611%" y="389" width="0.0156%" height="15" fill="rgb(216,158,49)" fg:x="184418" fg:w="29"/><text x="99.3111%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (29 samples, 0.02%)</title><rect x="99.0611%" y="373" width="0.0156%" height="15" fill="rgb(236,107,19)" fg:x="184418" fg:w="29"/><text x="99.3111%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (28 samples, 0.02%)</title><rect x="99.0766%" y="309" width="0.0150%" height="15" fill="rgb(228,185,30)" fg:x="184447" fg:w="28"/><text x="99.3266%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (27 samples, 0.01%)</title><rect x="99.0772%" y="293" width="0.0145%" height="15" fill="rgb(246,134,8)" fg:x="184448" fg:w="27"/><text x="99.3272%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.02%)</title><rect x="99.0766%" y="341" width="0.0188%" height="15" fill="rgb(214,143,50)" fg:x="184447" fg:w="35"/><text x="99.3266%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (35 samples, 0.02%)</title><rect x="99.0766%" y="325" width="0.0188%" height="15" fill="rgb(228,75,8)" fg:x="184447" fg:w="35"/><text x="99.3266%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (102 samples, 0.05%)</title><rect x="99.0417%" y="453" width="0.0548%" height="15" fill="rgb(207,175,4)" fg:x="184382" fg:w="102"/><text x="99.2917%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (102 samples, 0.05%)</title><rect x="99.0417%" y="437" width="0.0548%" height="15" fill="rgb(205,108,24)" fg:x="184382" fg:w="102"/><text x="99.2917%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (102 samples, 0.05%)</title><rect x="99.0417%" y="421" width="0.0548%" height="15" fill="rgb(244,120,49)" fg:x="184382" fg:w="102"/><text x="99.2917%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (37 samples, 0.02%)</title><rect x="99.0766%" y="405" width="0.0199%" height="15" fill="rgb(223,47,38)" fg:x="184447" fg:w="37"/><text x="99.3266%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (37 samples, 0.02%)</title><rect x="99.0766%" y="389" width="0.0199%" height="15" fill="rgb(229,179,11)" fg:x="184447" fg:w="37"/><text x="99.3266%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.02%)</title><rect x="99.0766%" y="373" width="0.0199%" height="15" fill="rgb(231,122,1)" fg:x="184447" fg:w="37"/><text x="99.3266%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (37 samples, 0.02%)</title><rect x="99.0766%" y="357" width="0.0199%" height="15" fill="rgb(245,119,9)" fg:x="184447" fg:w="37"/><text x="99.3266%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (70 samples, 0.04%)</title><rect x="99.1588%" y="197" width="0.0376%" height="15" fill="rgb(241,163,25)" fg:x="184600" fg:w="70"/><text x="99.4088%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (41 samples, 0.02%)</title><rect x="99.1744%" y="181" width="0.0220%" height="15" fill="rgb(217,214,3)" fg:x="184629" fg:w="41"/><text x="99.4244%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (83 samples, 0.04%)</title><rect x="99.1540%" y="213" width="0.0446%" height="15" fill="rgb(240,86,28)" fg:x="184591" fg:w="83"/><text x="99.4040%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (90 samples, 0.05%)</title><rect x="99.1534%" y="229" width="0.0483%" height="15" fill="rgb(215,47,9)" fg:x="184590" fg:w="90"/><text x="99.4034%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (128 samples, 0.07%)</title><rect x="99.1534%" y="245" width="0.0688%" height="15" fill="rgb(252,25,45)" fg:x="184590" fg:w="128"/><text x="99.4034%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (38 samples, 0.02%)</title><rect x="99.2018%" y="229" width="0.0204%" height="15" fill="rgb(251,164,9)" fg:x="184680" fg:w="38"/><text x="99.4518%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (25 samples, 0.01%)</title><rect x="99.2088%" y="213" width="0.0134%" height="15" fill="rgb(233,194,0)" fg:x="184693" fg:w="25"/><text x="99.4588%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (291 samples, 0.16%)</title><rect x="99.1293%" y="261" width="0.1563%" height="15" fill="rgb(249,111,24)" fg:x="184545" fg:w="291"/><text x="99.3793%" y="271.50"></text></g><g><title>libsystem_m.dylib`exp (118 samples, 0.06%)</title><rect x="99.2222%" y="245" width="0.0634%" height="15" fill="rgb(250,223,3)" fg:x="184718" fg:w="118"/><text x="99.4722%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (322 samples, 0.17%)</title><rect x="99.1218%" y="277" width="0.1730%" height="15" fill="rgb(236,178,37)" fg:x="184531" fg:w="322"/><text x="99.3718%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (364 samples, 0.20%)</title><rect x="99.1148%" y="293" width="0.1955%" height="15" fill="rgb(241,158,50)" fg:x="184518" fg:w="364"/><text x="99.3648%" y="303.50"></text></g><g><title>libsystem_m.dylib`exp (29 samples, 0.02%)</title><rect x="99.2947%" y="277" width="0.0156%" height="15" fill="rgb(213,121,41)" fg:x="184853" fg:w="29"/><text x="99.5447%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (391 samples, 0.21%)</title><rect x="99.1137%" y="309" width="0.2100%" height="15" fill="rgb(240,92,3)" fg:x="184516" fg:w="391"/><text x="99.3637%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (436 samples, 0.23%)</title><rect x="99.1099%" y="325" width="0.2342%" height="15" fill="rgb(205,123,3)" fg:x="184509" fg:w="436"/><text x="99.3599%" y="335.50"></text></g><g><title>libsystem_m.dylib`exp (38 samples, 0.02%)</title><rect x="99.3237%" y="309" width="0.0204%" height="15" fill="rgb(205,97,47)" fg:x="184907" fg:w="38"/><text x="99.5737%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.01%)</title><rect x="99.3490%" y="261" width="0.0102%" height="15" fill="rgb(247,152,14)" fg:x="184954" fg:w="19"/><text x="99.5990%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (22 samples, 0.01%)</title><rect x="99.3490%" y="277" width="0.0118%" height="15" fill="rgb(248,195,53)" fg:x="184954" fg:w="22"/><text x="99.5990%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 0.01%)</title><rect x="99.3490%" y="325" width="0.0134%" height="15" fill="rgb(226,201,16)" fg:x="184954" fg:w="25"/><text x="99.5990%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.01%)</title><rect x="99.3490%" y="309" width="0.0134%" height="15" fill="rgb(205,98,0)" fg:x="184954" fg:w="25"/><text x="99.5990%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.01%)</title><rect x="99.3490%" y="293" width="0.0134%" height="15" fill="rgb(214,191,48)" fg:x="184954" fg:w="25"/><text x="99.5990%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (476 samples, 0.26%)</title><rect x="99.1078%" y="341" width="0.2557%" height="15" fill="rgb(237,112,39)" fg:x="184505" fg:w="476"/><text x="99.3578%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (493 samples, 0.26%)</title><rect x="99.1046%" y="357" width="0.2648%" height="15" fill="rgb(247,203,27)" fg:x="184499" fg:w="493"/><text x="99.3546%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.01%)</title><rect x="99.3790%" y="165" width="0.0124%" height="15" fill="rgb(235,124,28)" fg:x="185010" fg:w="23"/><text x="99.6290%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (25 samples, 0.01%)</title><rect x="99.3790%" y="181" width="0.0134%" height="15" fill="rgb(208,207,46)" fg:x="185010" fg:w="25"/><text x="99.6290%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (26 samples, 0.01%)</title><rect x="99.3790%" y="213" width="0.0140%" height="15" fill="rgb(234,176,4)" fg:x="185010" fg:w="26"/><text x="99.6290%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.01%)</title><rect x="99.3790%" y="197" width="0.0140%" height="15" fill="rgb(230,133,28)" fg:x="185010" fg:w="26"/><text x="99.6290%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.02%)</title><rect x="99.3774%" y="229" width="0.0161%" height="15" fill="rgb(211,137,40)" fg:x="185007" fg:w="30"/><text x="99.6274%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (32 samples, 0.02%)</title><rect x="99.3774%" y="245" width="0.0172%" height="15" fill="rgb(254,35,13)" fg:x="185007" fg:w="32"/><text x="99.6274%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.02%)</title><rect x="99.3769%" y="261" width="0.0183%" height="15" fill="rgb(225,49,51)" fg:x="185006" fg:w="34"/><text x="99.6269%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (62 samples, 0.03%)</title><rect x="99.3769%" y="277" width="0.0333%" height="15" fill="rgb(251,10,15)" fg:x="185006" fg:w="62"/><text x="99.6269%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (28 samples, 0.02%)</title><rect x="99.3952%" y="261" width="0.0150%" height="15" fill="rgb(228,207,15)" fg:x="185040" fg:w="28"/><text x="99.6452%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (28 samples, 0.02%)</title><rect x="99.3952%" y="245" width="0.0150%" height="15" fill="rgb(241,99,19)" fg:x="185040" fg:w="28"/><text x="99.6452%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (28 samples, 0.02%)</title><rect x="99.3952%" y="229" width="0.0150%" height="15" fill="rgb(207,104,49)" fg:x="185040" fg:w="28"/><text x="99.6452%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (28 samples, 0.02%)</title><rect x="99.3952%" y="213" width="0.0150%" height="15" fill="rgb(234,99,18)" fg:x="185040" fg:w="28"/><text x="99.6452%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (64 samples, 0.03%)</title><rect x="99.3769%" y="293" width="0.0344%" height="15" fill="rgb(213,191,49)" fg:x="185006" fg:w="64"/><text x="99.6269%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (68 samples, 0.04%)</title><rect x="99.3769%" y="341" width="0.0365%" height="15" fill="rgb(210,226,19)" fg:x="185006" fg:w="68"/><text x="99.6269%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (68 samples, 0.04%)</title><rect x="99.3769%" y="325" width="0.0365%" height="15" fill="rgb(229,97,18)" fg:x="185006" fg:w="68"/><text x="99.6269%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (68 samples, 0.04%)</title><rect x="99.3769%" y="309" width="0.0365%" height="15" fill="rgb(211,167,15)" fg:x="185006" fg:w="68"/><text x="99.6269%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (69 samples, 0.04%)</title><rect x="99.3769%" y="357" width="0.0371%" height="15" fill="rgb(210,169,34)" fg:x="185006" fg:w="69"/><text x="99.6269%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (580 samples, 0.31%)</title><rect x="99.1030%" y="373" width="0.3115%" height="15" fill="rgb(241,121,31)" fg:x="184496" fg:w="580"/><text x="99.3530%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (597 samples, 0.32%)</title><rect x="99.0981%" y="389" width="0.3207%" height="15" fill="rgb(232,40,11)" fg:x="184487" fg:w="597"/><text x="99.3481%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (31 samples, 0.02%)</title><rect x="99.4258%" y="277" width="0.0167%" height="15" fill="rgb(205,86,26)" fg:x="185097" fg:w="31"/><text x="99.6758%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.02%)</title><rect x="99.4263%" y="261" width="0.0161%" height="15" fill="rgb(231,126,28)" fg:x="185098" fg:w="30"/><text x="99.6763%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.02%)</title><rect x="99.4252%" y="293" width="0.0199%" height="15" fill="rgb(219,221,18)" fg:x="185096" fg:w="37"/><text x="99.6752%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (43 samples, 0.02%)</title><rect x="99.4252%" y="309" width="0.0231%" height="15" fill="rgb(211,40,0)" fg:x="185096" fg:w="43"/><text x="99.6752%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.03%)</title><rect x="99.4242%" y="325" width="0.0258%" height="15" fill="rgb(239,85,43)" fg:x="185094" fg:w="48"/><text x="99.6742%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (20 samples, 0.01%)</title><rect x="99.4500%" y="325" width="0.0107%" height="15" fill="rgb(231,55,21)" fg:x="185142" fg:w="20"/><text x="99.7000%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (20 samples, 0.01%)</title><rect x="99.4500%" y="309" width="0.0107%" height="15" fill="rgb(225,184,43)" fg:x="185142" fg:w="20"/><text x="99.7000%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.01%)</title><rect x="99.4500%" y="293" width="0.0107%" height="15" fill="rgb(251,158,41)" fg:x="185142" fg:w="20"/><text x="99.7000%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.01%)</title><rect x="99.4505%" y="277" width="0.0102%" height="15" fill="rgb(234,159,37)" fg:x="185143" fg:w="19"/><text x="99.7005%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.01%)</title><rect x="99.4505%" y="261" width="0.0102%" height="15" fill="rgb(216,204,22)" fg:x="185143" fg:w="19"/><text x="99.7005%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.01%)</title><rect x="99.4505%" y="245" width="0.0102%" height="15" fill="rgb(214,17,3)" fg:x="185143" fg:w="19"/><text x="99.7005%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (69 samples, 0.04%)</title><rect x="99.4242%" y="341" width="0.0371%" height="15" fill="rgb(212,111,17)" fg:x="185094" fg:w="69"/><text x="99.6742%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (72 samples, 0.04%)</title><rect x="99.4236%" y="373" width="0.0387%" height="15" fill="rgb(221,157,24)" fg:x="185093" fg:w="72"/><text x="99.6736%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (72 samples, 0.04%)</title><rect x="99.4236%" y="357" width="0.0387%" height="15" fill="rgb(252,16,13)" fg:x="185093" fg:w="72"/><text x="99.6736%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (74 samples, 0.04%)</title><rect x="99.4236%" y="389" width="0.0397%" height="15" fill="rgb(221,62,2)" fg:x="185093" fg:w="74"/><text x="99.6736%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (684 samples, 0.37%)</title><rect x="99.0970%" y="405" width="0.3674%" height="15" fill="rgb(247,87,22)" fg:x="184485" fg:w="684"/><text x="99.3470%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (686 samples, 0.37%)</title><rect x="99.0965%" y="437" width="0.3685%" height="15" fill="rgb(215,73,9)" fg:x="184484" fg:w="686"/><text x="99.3465%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (685 samples, 0.37%)</title><rect x="99.0970%" y="421" width="0.3680%" height="15" fill="rgb(207,175,33)" fg:x="184485" fg:w="685"/><text x="99.3470%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (688 samples, 0.37%)</title><rect x="99.0965%" y="453" width="0.3696%" height="15" fill="rgb(243,129,54)" fg:x="184484" fg:w="688"/><text x="99.3465%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (6,262 samples, 3.36%)</title><rect x="96.1029%" y="469" width="3.3637%" height="15" fill="rgb(227,119,45)" fg:x="178911" fg:w="6262"/><text x="96.3529%" y="479.50">cpu..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (6,268 samples, 3.37%)</title><rect x="96.1013%" y="485" width="3.3669%" height="15" fill="rgb(205,109,36)" fg:x="178908" fg:w="6268"/><text x="96.3513%" y="495.50">cpu..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (22 samples, 0.01%)</title><rect x="99.4725%" y="453" width="0.0118%" height="15" fill="rgb(205,6,39)" fg:x="185184" fg:w="22"/><text x="99.7225%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (34 samples, 0.02%)</title><rect x="99.4682%" y="485" width="0.0183%" height="15" fill="rgb(221,32,16)" fg:x="185176" fg:w="34"/><text x="99.7182%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (26 samples, 0.01%)</title><rect x="99.4725%" y="469" width="0.0140%" height="15" fill="rgb(228,144,50)" fg:x="185184" fg:w="26"/><text x="99.7225%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (24 samples, 0.01%)</title><rect x="99.4870%" y="309" width="0.0129%" height="15" fill="rgb(229,201,53)" fg:x="185211" fg:w="24"/><text x="99.7370%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (45 samples, 0.02%)</title><rect x="99.5461%" y="245" width="0.0242%" height="15" fill="rgb(249,153,27)" fg:x="185321" fg:w="45"/><text x="99.7961%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (28 samples, 0.02%)</title><rect x="99.5552%" y="229" width="0.0150%" height="15" fill="rgb(227,106,25)" fg:x="185338" fg:w="28"/><text x="99.8052%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (53 samples, 0.03%)</title><rect x="99.5429%" y="261" width="0.0285%" height="15" fill="rgb(230,65,29)" fg:x="185315" fg:w="53"/><text x="99.7929%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (61 samples, 0.03%)</title><rect x="99.5429%" y="277" width="0.0328%" height="15" fill="rgb(221,57,46)" fg:x="185315" fg:w="61"/><text x="99.7929%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (83 samples, 0.04%)</title><rect x="99.5429%" y="293" width="0.0446%" height="15" fill="rgb(229,161,17)" fg:x="185315" fg:w="83"/><text x="99.7929%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (22 samples, 0.01%)</title><rect x="99.5756%" y="277" width="0.0118%" height="15" fill="rgb(222,213,11)" fg:x="185376" fg:w="22"/><text x="99.8256%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (433 samples, 0.23%)</title><rect x="99.4999%" y="309" width="0.2326%" height="15" fill="rgb(235,35,13)" fg:x="185235" fg:w="433"/><text x="99.7499%" y="319.50"></text></g><g><title>libsystem_m.dylib`exp (270 samples, 0.15%)</title><rect x="99.5875%" y="293" width="0.1450%" height="15" fill="rgb(233,158,34)" fg:x="185398" fg:w="270"/><text x="99.8375%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (41 samples, 0.02%)</title><rect x="99.7406%" y="69" width="0.0220%" height="15" fill="rgb(215,151,48)" fg:x="185683" fg:w="41"/><text x="99.9906%" y="79.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (40 samples, 0.02%)</title><rect x="99.7411%" y="53" width="0.0215%" height="15" fill="rgb(229,84,14)" fg:x="185684" fg:w="40"/><text x="99.9911%" y="63.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (22 samples, 0.01%)</title><rect x="99.7508%" y="37" width="0.0118%" height="15" fill="rgb(229,68,14)" fg:x="185702" fg:w="22"/><text x="100.0008%" y="47.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 0.03%)</title><rect x="99.7406%" y="85" width="0.0274%" height="15" fill="rgb(243,106,26)" fg:x="185683" fg:w="51"/><text x="99.9906%" y="95.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (52 samples, 0.03%)</title><rect x="99.7406%" y="101" width="0.0279%" height="15" fill="rgb(206,45,38)" fg:x="185683" fg:w="52"/><text x="99.9906%" y="111.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (76 samples, 0.04%)</title><rect x="99.7373%" y="149" width="0.0408%" height="15" fill="rgb(226,6,15)" fg:x="185677" fg:w="76"/><text x="99.9873%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (76 samples, 0.04%)</title><rect x="99.7373%" y="133" width="0.0408%" height="15" fill="rgb(232,22,54)" fg:x="185677" fg:w="76"/><text x="99.9873%" y="143.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (75 samples, 0.04%)</title><rect x="99.7379%" y="117" width="0.0403%" height="15" fill="rgb(229,222,32)" fg:x="185678" fg:w="75"/><text x="99.9879%" y="127.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (84 samples, 0.05%)</title><rect x="99.7373%" y="213" width="0.0451%" height="15" fill="rgb(228,62,29)" fg:x="185677" fg:w="84"/><text x="99.9873%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (84 samples, 0.05%)</title><rect x="99.7373%" y="197" width="0.0451%" height="15" fill="rgb(251,103,34)" fg:x="185677" fg:w="84"/><text x="99.9873%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (84 samples, 0.05%)</title><rect x="99.7373%" y="181" width="0.0451%" height="15" fill="rgb(233,12,30)" fg:x="185677" fg:w="84"/><text x="99.9873%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (84 samples, 0.05%)</title><rect x="99.7373%" y="165" width="0.0451%" height="15" fill="rgb(238,52,0)" fg:x="185677" fg:w="84"/><text x="99.9873%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (85 samples, 0.05%)</title><rect x="99.7373%" y="245" width="0.0457%" height="15" fill="rgb(223,98,5)" fg:x="185677" fg:w="85"/><text x="99.9873%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (85 samples, 0.05%)</title><rect x="99.7373%" y="229" width="0.0457%" height="15" fill="rgb(228,75,37)" fg:x="185677" fg:w="85"/><text x="99.9873%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (89 samples, 0.05%)</title><rect x="99.7373%" y="309" width="0.0478%" height="15" fill="rgb(205,115,49)" fg:x="185677" fg:w="89"/><text x="99.9873%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (89 samples, 0.05%)</title><rect x="99.7373%" y="293" width="0.0478%" height="15" fill="rgb(250,154,43)" fg:x="185677" fg:w="89"/><text x="99.9873%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (89 samples, 0.05%)</title><rect x="99.7373%" y="277" width="0.0478%" height="15" fill="rgb(226,43,29)" fg:x="185677" fg:w="89"/><text x="99.9873%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (89 samples, 0.05%)</title><rect x="99.7373%" y="261" width="0.0478%" height="15" fill="rgb(249,228,39)" fg:x="185677" fg:w="89"/><text x="99.9873%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (573 samples, 0.31%)</title><rect x="99.4870%" y="341" width="0.3078%" height="15" fill="rgb(216,79,43)" fg:x="185211" fg:w="573"/><text x="99.7370%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (573 samples, 0.31%)</title><rect x="99.4870%" y="325" width="0.3078%" height="15" fill="rgb(228,95,12)" fg:x="185211" fg:w="573"/><text x="99.7370%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.01%)</title><rect x="99.8088%" y="149" width="0.0140%" height="15" fill="rgb(249,221,15)" fg:x="185810" fg:w="26"/><text x="100.0588%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (37 samples, 0.02%)</title><rect x="99.8061%" y="165" width="0.0199%" height="15" fill="rgb(233,34,13)" fg:x="185805" fg:w="37"/><text x="100.0561%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.02%)</title><rect x="99.8061%" y="181" width="0.0204%" height="15" fill="rgb(214,103,39)" fg:x="185805" fg:w="38"/><text x="100.0561%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (43 samples, 0.02%)</title><rect x="99.8050%" y="197" width="0.0231%" height="15" fill="rgb(251,126,39)" fg:x="185803" fg:w="43"/><text x="100.0550%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.02%)</title><rect x="99.8050%" y="213" width="0.0236%" height="15" fill="rgb(214,216,36)" fg:x="185803" fg:w="44"/><text x="100.0550%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (53 samples, 0.03%)</title><rect x="99.8045%" y="229" width="0.0285%" height="15" fill="rgb(220,221,8)" fg:x="185802" fg:w="53"/><text x="100.0545%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (58 samples, 0.03%)</title><rect x="99.8039%" y="245" width="0.0312%" height="15" fill="rgb(240,216,3)" fg:x="185801" fg:w="58"/><text x="100.0539%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (23 samples, 0.01%)</title><rect x="99.8351%" y="245" width="0.0124%" height="15" fill="rgb(232,218,17)" fg:x="185859" fg:w="23"/><text x="100.0851%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.01%)</title><rect x="99.8351%" y="229" width="0.0124%" height="15" fill="rgb(229,163,45)" fg:x="185859" fg:w="23"/><text x="100.0851%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.01%)</title><rect x="99.8351%" y="213" width="0.0124%" height="15" fill="rgb(231,110,42)" fg:x="185859" fg:w="23"/><text x="100.0851%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (86 samples, 0.05%)</title><rect x="99.8029%" y="277" width="0.0462%" height="15" fill="rgb(208,170,48)" fg:x="185799" fg:w="86"/><text x="100.0529%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (85 samples, 0.05%)</title><rect x="99.8034%" y="261" width="0.0457%" height="15" fill="rgb(239,116,25)" fg:x="185800" fg:w="85"/><text x="100.0534%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (90 samples, 0.05%)</title><rect x="99.8023%" y="341" width="0.0483%" height="15" fill="rgb(219,200,50)" fg:x="185798" fg:w="90"/><text x="100.0523%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (90 samples, 0.05%)</title><rect x="99.8023%" y="325" width="0.0483%" height="15" fill="rgb(245,200,0)" fg:x="185798" fg:w="90"/><text x="100.0523%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (90 samples, 0.05%)</title><rect x="99.8023%" y="309" width="0.0483%" height="15" fill="rgb(245,119,33)" fg:x="185798" fg:w="90"/><text x="100.0523%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (90 samples, 0.05%)</title><rect x="99.8023%" y="293" width="0.0483%" height="15" fill="rgb(231,125,12)" fg:x="185798" fg:w="90"/><text x="100.0523%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (678 samples, 0.36%)</title><rect x="99.4870%" y="373" width="0.3642%" height="15" fill="rgb(216,96,41)" fg:x="185211" fg:w="678"/><text x="99.7370%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (678 samples, 0.36%)</title><rect x="99.4870%" y="357" width="0.3642%" height="15" fill="rgb(248,43,45)" fg:x="185211" fg:w="678"/><text x="99.7370%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (80 samples, 0.04%)</title><rect x="99.8587%" y="181" width="0.0430%" height="15" fill="rgb(217,222,7)" fg:x="185903" fg:w="80"/><text x="100.1087%" y="191.50"></text></g><g><title>libsystem_m.dylib`exp (50 samples, 0.03%)</title><rect x="99.8748%" y="165" width="0.0269%" height="15" fill="rgb(233,28,6)" fg:x="185933" fg:w="50"/><text x="100.1248%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (89 samples, 0.05%)</title><rect x="99.8571%" y="197" width="0.0478%" height="15" fill="rgb(231,218,15)" fg:x="185900" fg:w="89"/><text x="100.1071%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (105 samples, 0.06%)</title><rect x="99.8555%" y="213" width="0.0564%" height="15" fill="rgb(226,171,48)" fg:x="185897" fg:w="105"/><text x="100.1055%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (109 samples, 0.06%)</title><rect x="99.8539%" y="229" width="0.0585%" height="15" fill="rgb(235,201,9)" fg:x="185894" fg:w="109"/><text x="100.1039%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (121 samples, 0.06%)</title><rect x="99.8523%" y="245" width="0.0650%" height="15" fill="rgb(217,80,15)" fg:x="185891" fg:w="121"/><text x="100.1023%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (125 samples, 0.07%)</title><rect x="99.8512%" y="261" width="0.0671%" height="15" fill="rgb(219,152,8)" fg:x="185889" fg:w="125"/><text x="100.1012%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (126 samples, 0.07%)</title><rect x="99.8512%" y="277" width="0.0677%" height="15" fill="rgb(243,107,38)" fg:x="185889" fg:w="126"/><text x="100.1012%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (148 samples, 0.08%)</title><rect x="99.8512%" y="293" width="0.0795%" height="15" fill="rgb(231,17,5)" fg:x="185889" fg:w="148"/><text x="100.1012%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (20 samples, 0.01%)</title><rect x="99.9200%" y="277" width="0.0107%" height="15" fill="rgb(209,25,54)" fg:x="186017" fg:w="20"/><text x="100.1700%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (20 samples, 0.01%)</title><rect x="99.9200%" y="261" width="0.0107%" height="15" fill="rgb(219,0,2)" fg:x="186017" fg:w="20"/><text x="100.1700%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.01%)</title><rect x="99.9200%" y="245" width="0.0107%" height="15" fill="rgb(246,9,5)" fg:x="186017" fg:w="20"/><text x="100.1700%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.01%)</title><rect x="99.9200%" y="229" width="0.0107%" height="15" fill="rgb(226,159,4)" fg:x="186017" fg:w="20"/><text x="100.1700%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (149 samples, 0.08%)</title><rect x="99.8512%" y="309" width="0.0800%" height="15" fill="rgb(219,175,34)" fg:x="185889" fg:w="149"/><text x="100.1012%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (19 samples, 0.01%)</title><rect x="99.9312%" y="309" width="0.0102%" height="15" fill="rgb(236,10,46)" fg:x="186038" fg:w="19"/><text x="100.1812%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.01%)</title><rect x="99.9312%" y="293" width="0.0102%" height="15" fill="rgb(240,211,16)" fg:x="186038" fg:w="19"/><text x="100.1812%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.01%)</title><rect x="99.9312%" y="277" width="0.0102%" height="15" fill="rgb(205,3,43)" fg:x="186038" fg:w="19"/><text x="100.1812%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (184 samples, 0.10%)</title><rect x="99.8512%" y="325" width="0.0988%" height="15" fill="rgb(245,7,22)" fg:x="185889" fg:w="184"/><text x="100.1012%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (863 samples, 0.46%)</title><rect x="99.4870%" y="405" width="0.4636%" height="15" fill="rgb(239,132,32)" fg:x="185211" fg:w="863"/><text x="99.7370%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (863 samples, 0.46%)</title><rect x="99.4870%" y="389" width="0.4636%" height="15" fill="rgb(228,202,34)" fg:x="185211" fg:w="863"/><text x="99.7370%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (185 samples, 0.10%)</title><rect x="99.8512%" y="373" width="0.0994%" height="15" fill="rgb(254,200,22)" fg:x="185889" fg:w="185"/><text x="100.1012%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (185 samples, 0.10%)</title><rect x="99.8512%" y="357" width="0.0994%" height="15" fill="rgb(219,10,39)" fg:x="185889" fg:w="185"/><text x="100.1012%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (185 samples, 0.10%)</title><rect x="99.8512%" y="341" width="0.0994%" height="15" fill="rgb(226,210,39)" fg:x="185889" fg:w="185"/><text x="100.1012%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (21 samples, 0.01%)</title><rect x="99.9506%" y="325" width="0.0113%" height="15" fill="rgb(208,219,16)" fg:x="186074" fg:w="21"/><text x="100.2006%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.01%)</title><rect x="99.9506%" y="309" width="0.0113%" height="15" fill="rgb(216,158,51)" fg:x="186074" fg:w="21"/><text x="100.2006%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (21 samples, 0.01%)</title><rect x="99.9506%" y="293" width="0.0113%" height="15" fill="rgb(233,14,44)" fg:x="186074" fg:w="21"/><text x="100.2006%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.01%)</title><rect x="99.9506%" y="341" width="0.0118%" height="15" fill="rgb(237,97,39)" fg:x="186074" fg:w="22"/><text x="100.2006%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (886 samples, 0.48%)</title><rect x="99.4870%" y="437" width="0.4759%" height="15" fill="rgb(218,198,43)" fg:x="185211" fg:w="886"/><text x="99.7370%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (886 samples, 0.48%)</title><rect x="99.4870%" y="421" width="0.4759%" height="15" fill="rgb(231,104,20)" fg:x="185211" fg:w="886"/><text x="99.7370%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (23 samples, 0.01%)</title><rect x="99.9506%" y="405" width="0.0124%" height="15" fill="rgb(254,36,13)" fg:x="186074" fg:w="23"/><text x="100.2006%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (23 samples, 0.01%)</title><rect x="99.9506%" y="389" width="0.0124%" height="15" fill="rgb(248,14,50)" fg:x="186074" fg:w="23"/><text x="100.2006%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.01%)</title><rect x="99.9506%" y="373" width="0.0124%" height="15" fill="rgb(217,107,29)" fg:x="186074" fg:w="23"/><text x="100.2006%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.01%)</title><rect x="99.9506%" y="357" width="0.0124%" height="15" fill="rgb(251,169,33)" fg:x="186074" fg:w="23"/><text x="100.2006%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (902 samples, 0.48%)</title><rect x="99.4865%" y="469" width="0.4845%" height="15" fill="rgb(217,108,32)" fg:x="185210" fg:w="902"/><text x="99.7365%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (901 samples, 0.48%)</title><rect x="99.4870%" y="453" width="0.4840%" height="15" fill="rgb(219,66,42)" fg:x="185211" fg:w="901"/><text x="99.7370%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (7,211 samples, 3.87%)</title><rect x="96.1013%" y="501" width="3.8734%" height="15" fill="rgb(206,180,7)" fg:x="178908" fg:w="7211"/><text x="96.3513%" y="511.50">cpu_..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (909 samples, 0.49%)</title><rect x="99.4865%" y="485" width="0.4883%" height="15" fill="rgb(208,226,31)" fg:x="185210" fg:w="909"/><text x="99.7365%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (37 samples, 0.02%)</title><rect x="99.9796%" y="501" width="0.0199%" height="15" fill="rgb(218,26,49)" fg:x="186128" fg:w="37"/><text x="100.2296%" y="511.50"></text></g><g><title>all (186,166 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(233,197,48)" fg:x="0" fg:w="186166"/><text x="0.2500%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (7,260 samples, 3.90%)</title><rect x="96.1003%" y="613" width="3.8997%" height="15" fill="rgb(252,181,51)" fg:x="178906" fg:w="7260"/><text x="96.3503%" y="623.50">libs..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (7,260 samples, 3.90%)</title><rect x="96.1003%" y="597" width="3.8997%" height="15" fill="rgb(253,90,19)" fg:x="178906" fg:w="7260"/><text x="96.3503%" y="607.50">libs..</text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys::unix::thread::Thread::new::thread_start (7,260 samples, 3.90%)</title><rect x="96.1003%" y="581" width="3.8997%" height="15" fill="rgb(215,171,30)" fg:x="178906" fg:w="7260"/><text x="96.3503%" y="591.50">cpu_..</text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::FnOnce::call_once{{vtable.shim}} (7,260 samples, 3.90%)</title><rect x="96.1003%" y="565" width="3.8997%" height="15" fill="rgb(214,222,9)" fg:x="178906" fg:w="7260"/><text x="96.3503%" y="575.50">cpu_..</text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys_common::backtrace::__rust_begin_short_backtrace (7,260 samples, 3.90%)</title><rect x="96.1003%" y="549" width="3.8997%" height="15" fill="rgb(223,3,22)" fg:x="178906" fg:w="7260"/><text x="96.3503%" y="559.50">cpu_..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::ThreadBuilder::run (7,260 samples, 3.90%)</title><rect x="96.1003%" y="533" width="3.8997%" height="15" fill="rgb(225,196,46)" fg:x="178906" fg:w="7260"/><text x="96.3503%" y="543.50">cpu_..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (7,260 samples, 3.90%)</title><rect x="96.1003%" y="517" width="3.8997%" height="15" fill="rgb(209,110,37)" fg:x="178906" fg:w="7260"/><text x="96.3503%" y="527.50">cpu_..</text></g></svg></svg>