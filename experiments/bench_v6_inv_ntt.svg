<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="774" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="757.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="757.00"> </text><svg id="frames" x="10" width="1180" total_samples="86203"><g><title>cpu_bench_v0-42868c868297afde`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (9 samples, 0.01%)</title><rect x="0.0023%" y="453" width="0.0104%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="9"/><text x="0.2523%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::num::from_str_radix (45 samples, 0.05%)</title><rect x="0.0209%" y="453" width="0.0522%" height="15" fill="rgb(217,0,24)" fg:x="18" fg:w="45"/><text x="0.2709%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;binius_rust::binary_field16::BinaryFieldElement16 as serde::de::Deserialize&gt;::deserialize (65 samples, 0.08%)</title><rect x="0.0012%" y="469" width="0.0754%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="65"/><text x="0.2512%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (25 samples, 0.03%)</title><rect x="0.0777%" y="469" width="0.0290%" height="15" fill="rgb(248,212,6)" fg:x="67" fg:w="25"/><text x="0.3277%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.02%)</title><rect x="0.0916%" y="453" width="0.0151%" height="15" fill="rgb(208,68,35)" fg:x="79" fg:w="13"/><text x="0.3416%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="0.1090%" y="469" width="0.0104%" height="15" fill="rgb(232,128,0)" fg:x="94" fg:w="9"/><text x="0.3590%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (107 samples, 0.12%)</title><rect x="0.0000%" y="485" width="0.1241%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="107"/><text x="0.2500%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`serde_json::de::from_trait (117 samples, 0.14%)</title><rect x="0.0000%" y="565" width="0.1357%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="117"/><text x="0.2500%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (117 samples, 0.14%)</title><rect x="0.0000%" y="549" width="0.1357%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="117"/><text x="0.2500%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (117 samples, 0.14%)</title><rect x="0.0000%" y="533" width="0.1357%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="117"/><text x="0.2500%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (117 samples, 0.14%)</title><rect x="0.0000%" y="517" width="0.1357%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="117"/><text x="0.2500%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (117 samples, 0.14%)</title><rect x="0.0000%" y="501" width="0.1357%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="117"/><text x="0.2500%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;binius_rust::binary_ntt_cache::WI_EVAL_CACHE as core::ops::deref::Deref&gt;::deref (121 samples, 0.14%)</title><rect x="0.0000%" y="613" width="0.1404%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="121"/><text x="0.2500%" y="623.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys_common::once::queue::Once::call (121 samples, 0.14%)</title><rect x="0.0000%" y="597" width="0.1404%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="121"/><text x="0.2500%" y="607.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`std::sync::once::Once::call_once::_{{closure}} (121 samples, 0.14%)</title><rect x="0.0000%" y="581" width="0.1404%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="121"/><text x="0.2500%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::kde::sweep_and_estimate (10 samples, 0.01%)</title><rect x="0.1485%" y="533" width="0.0116%" height="15" fill="rgb(231,73,38)" fg:x="128" fg:w="10"/><text x="0.3985%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;criterion::plot::plotters_backend::PlottersBackend as criterion::plot::Plotter&gt;::abs_distributions (15 samples, 0.02%)</title><rect x="0.1438%" y="565" width="0.0174%" height="15" fill="rgb(225,20,46)" fg:x="124" fg:w="15"/><text x="0.3938%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::plot::plotters_backend::distributions::abs_distributions (14 samples, 0.02%)</title><rect x="0.1450%" y="549" width="0.0162%" height="15" fill="rgb(210,31,41)" fg:x="125" fg:w="14"/><text x="0.3950%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;criterion::html::Html as criterion::report::Report&gt;::measurement_complete (23 samples, 0.03%)</title><rect x="0.1438%" y="581" width="0.0267%" height="15" fill="rgb(221,200,47)" fg:x="124" fg:w="23"/><text x="0.3938%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_lock (366 samples, 0.42%)</title><rect x="0.2018%" y="485" width="0.4246%" height="15" fill="rgb(226,26,5)" fg:x="174" fg:w="366"/><text x="0.4518%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_unlock (423 samples, 0.49%)</title><rect x="0.6264%" y="485" width="0.4907%" height="15" fill="rgb(249,33,26)" fg:x="540" fg:w="423"/><text x="0.8764%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (12 samples, 0.01%)</title><rect x="5.0868%" y="437" width="0.0139%" height="15" fill="rgb(235,183,28)" fg:x="4385" fg:w="12"/><text x="5.3368%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (14 samples, 0.02%)</title><rect x="5.1402%" y="405" width="0.0162%" height="15" fill="rgb(221,5,38)" fg:x="4431" fg:w="14"/><text x="5.3902%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="5.1657%" y="389" width="0.0104%" height="15" fill="rgb(247,18,42)" fg:x="4453" fg:w="9"/><text x="5.4157%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (20 samples, 0.02%)</title><rect x="5.1564%" y="405" width="0.0232%" height="15" fill="rgb(241,131,45)" fg:x="4445" fg:w="20"/><text x="5.4064%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (12 samples, 0.01%)</title><rect x="5.1889%" y="389" width="0.0139%" height="15" fill="rgb(249,31,29)" fg:x="4473" fg:w="12"/><text x="5.4389%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (98 samples, 0.11%)</title><rect x="5.2376%" y="341" width="0.1137%" height="15" fill="rgb(225,111,53)" fg:x="4515" fg:w="98"/><text x="5.4876%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (112 samples, 0.13%)</title><rect x="5.2249%" y="389" width="0.1299%" height="15" fill="rgb(238,160,17)" fg:x="4504" fg:w="112"/><text x="5.4749%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (110 samples, 0.13%)</title><rect x="5.2272%" y="373" width="0.1276%" height="15" fill="rgb(214,148,48)" fg:x="4506" fg:w="110"/><text x="5.4772%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (105 samples, 0.12%)</title><rect x="5.2330%" y="357" width="0.1218%" height="15" fill="rgb(232,36,49)" fg:x="4511" fg:w="105"/><text x="5.4830%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (147 samples, 0.17%)</title><rect x="5.1854%" y="405" width="0.1705%" height="15" fill="rgb(209,103,24)" fg:x="4470" fg:w="147"/><text x="5.4354%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (263 samples, 0.31%)</title><rect x="5.1205%" y="421" width="0.3051%" height="15" fill="rgb(229,88,8)" fg:x="4414" fg:w="263"/><text x="5.3705%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (60 samples, 0.07%)</title><rect x="5.3560%" y="405" width="0.0696%" height="15" fill="rgb(213,181,19)" fg:x="4617" fg:w="60"/><text x="5.6060%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (306 samples, 0.35%)</title><rect x="5.0810%" y="453" width="0.3550%" height="15" fill="rgb(254,191,54)" fg:x="4380" fg:w="306"/><text x="5.3310%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`realloc (289 samples, 0.34%)</title><rect x="5.1008%" y="437" width="0.3353%" height="15" fill="rgb(241,83,37)" fg:x="4397" fg:w="289"/><text x="5.3508%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (320 samples, 0.37%)</title><rect x="5.0741%" y="469" width="0.3712%" height="15" fill="rgb(233,36,39)" fg:x="4374" fg:w="320"/><text x="5.3241%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::_&lt;impl core::iter::traits::collect::FromIterator&lt;binius_rust::binary_field16::BinaryFieldElement16&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from_iter (3,742 samples, 4.34%)</title><rect x="1.1206%" y="485" width="4.3409%" height="15" fill="rgb(226,3,54)" fg:x="966" fg:w="3742"/><text x="1.3706%" y="495.50">cpu_b..</text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.01%)</title><rect x="5.4511%" y="469" width="0.0104%" height="15" fill="rgb(245,192,40)" fg:x="4699" fg:w="9"/><text x="5.7011%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (3,317 samples, 3.85%)</title><rect x="5.4615%" y="485" width="3.8479%" height="15" fill="rgb(238,167,29)" fg:x="4708" fg:w="3317"/><text x="5.7115%" y="495.50">cpu_..</text></g><g><title>libsystem_malloc.dylib`szone_realloc (15 samples, 0.02%)</title><rect x="20.3288%" y="405" width="0.0174%" height="15" fill="rgb(232,182,51)" fg:x="17524" fg:w="15"/><text x="20.5788%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (22 samples, 0.03%)</title><rect x="20.3264%" y="421" width="0.0255%" height="15" fill="rgb(231,60,39)" fg:x="17522" fg:w="22"/><text x="20.5764%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`realloc (25 samples, 0.03%)</title><rect x="20.3264%" y="437" width="0.0290%" height="15" fill="rgb(208,69,12)" fg:x="17522" fg:w="25"/><text x="20.5764%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (28 samples, 0.03%)</title><rect x="20.3241%" y="453" width="0.0325%" height="15" fill="rgb(235,93,37)" fg:x="17520" fg:w="28"/><text x="20.5741%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.04%)</title><rect x="20.3230%" y="469" width="0.0360%" height="15" fill="rgb(213,116,39)" fg:x="17519" fg:w="31"/><text x="20.5730%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (901 samples, 1.05%)</title><rect x="20.3589%" y="469" width="1.0452%" height="15" fill="rgb(222,207,29)" fg:x="17550" fg:w="901"/><text x="20.6089%" y="479.50"></text></g><g><title>libsystem_m.dylib`log2 (39 samples, 0.05%)</title><rect x="21.4041%" y="469" width="0.0452%" height="15" fill="rgb(206,96,30)" fg:x="18451" fg:w="39"/><text x="21.6541%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_small (10 samples, 0.01%)</title><rect x="21.4575%" y="469" width="0.0116%" height="15" fill="rgb(218,138,4)" fg:x="18497" fg:w="10"/><text x="21.7075%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.01%)</title><rect x="21.4691%" y="469" width="0.0139%" height="15" fill="rgb(250,191,14)" fg:x="18507" fg:w="12"/><text x="21.7191%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.01%)</title><rect x="21.4714%" y="453" width="0.0116%" height="15" fill="rgb(239,60,40)" fg:x="18509" fg:w="10"/><text x="21.7214%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (47 samples, 0.05%)</title><rect x="21.5085%" y="421" width="0.0545%" height="15" fill="rgb(206,27,48)" fg:x="18541" fg:w="47"/><text x="21.7585%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (68 samples, 0.08%)</title><rect x="21.4900%" y="453" width="0.0789%" height="15" fill="rgb(225,35,8)" fg:x="18525" fg:w="68"/><text x="21.7400%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (59 samples, 0.07%)</title><rect x="21.5004%" y="437" width="0.0684%" height="15" fill="rgb(250,213,24)" fg:x="18534" fg:w="59"/><text x="21.7504%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (76 samples, 0.09%)</title><rect x="21.4877%" y="469" width="0.0882%" height="15" fill="rgb(247,123,22)" fg:x="18523" fg:w="76"/><text x="21.7377%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3,062 samples, 3.55%)</title><rect x="21.5816%" y="469" width="3.5521%" height="15" fill="rgb(231,138,38)" fg:x="18604" fg:w="3062"/><text x="21.8316%" y="479.50">libs..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (15,067 samples, 17.48%)</title><rect x="9.3094%" y="485" width="17.4785%" height="15" fill="rgb(231,145,46)" fg:x="8025" fg:w="15067"/><text x="9.5594%" y="495.50">cpu_bench_v0-42868c868297af..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1,426 samples, 1.65%)</title><rect x="25.1337%" y="469" width="1.6542%" height="15" fill="rgb(251,118,11)" fg:x="21666" fg:w="1426"/><text x="25.3837%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.01%)</title><rect x="26.7926%" y="485" width="0.0128%" height="15" fill="rgb(217,147,25)" fg:x="23096" fg:w="11"/><text x="27.0426%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="26.8077%" y="485" width="0.0162%" height="15" fill="rgb(247,81,37)" fg:x="23109" fg:w="14"/><text x="27.0577%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="26.8135%" y="469" width="0.0104%" height="15" fill="rgb(209,12,38)" fg:x="23114" fg:w="9"/><text x="27.0635%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (102 samples, 0.12%)</title><rect x="26.8239%" y="485" width="0.1183%" height="15" fill="rgb(227,1,9)" fg:x="23123" fg:w="102"/><text x="27.0739%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (18 samples, 0.02%)</title><rect x="26.9422%" y="485" width="0.0209%" height="15" fill="rgb(248,47,43)" fg:x="23225" fg:w="18"/><text x="27.1922%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23,081 samples, 26.78%)</title><rect x="0.1891%" y="501" width="26.7752%" height="15" fill="rgb(221,10,30)" fg:x="163" fg:w="23081"/><text x="0.4391%" y="511.50">cpu_bench_v0-42868c868297afde`&lt;core::iter::..</text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (19 samples, 0.02%)</title><rect x="27.0025%" y="485" width="0.0220%" height="15" fill="rgb(210,229,1)" fg:x="23277" fg:w="19"/><text x="27.2525%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (16 samples, 0.02%)</title><rect x="27.0582%" y="469" width="0.0186%" height="15" fill="rgb(222,148,37)" fg:x="23325" fg:w="16"/><text x="27.3082%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`realloc (12 samples, 0.01%)</title><rect x="27.0629%" y="453" width="0.0139%" height="15" fill="rgb(234,67,33)" fg:x="23329" fg:w="12"/><text x="27.3129%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.04%)</title><rect x="27.0478%" y="485" width="0.0371%" height="15" fill="rgb(247,98,35)" fg:x="23316" fg:w="32"/><text x="27.2978%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (35 samples, 0.04%)</title><rect x="27.1197%" y="469" width="0.0406%" height="15" fill="rgb(247,138,52)" fg:x="23378" fg:w="35"/><text x="27.3697%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (22 samples, 0.03%)</title><rect x="27.1603%" y="469" width="0.0255%" height="15" fill="rgb(213,79,30)" fg:x="23413" fg:w="22"/><text x="27.4103%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (16 samples, 0.02%)</title><rect x="27.1858%" y="469" width="0.0186%" height="15" fill="rgb(246,177,23)" fg:x="23435" fg:w="16"/><text x="27.4358%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (22 samples, 0.03%)</title><rect x="27.2044%" y="469" width="0.0255%" height="15" fill="rgb(230,62,27)" fg:x="23451" fg:w="22"/><text x="27.4544%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.03%)</title><rect x="27.2311%" y="469" width="0.0348%" height="15" fill="rgb(216,154,8)" fg:x="23474" fg:w="30"/><text x="27.4811%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.01%)</title><rect x="27.2531%" y="453" width="0.0128%" height="15" fill="rgb(244,35,45)" fg:x="23493" fg:w="11"/><text x="27.5031%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (15 samples, 0.02%)</title><rect x="27.3738%" y="453" width="0.0174%" height="15" fill="rgb(251,115,12)" fg:x="23597" fg:w="15"/><text x="27.6238%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.02%)</title><rect x="27.4213%" y="437" width="0.0209%" height="15" fill="rgb(240,54,50)" fg:x="23638" fg:w="18"/><text x="27.6713%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (67 samples, 0.08%)</title><rect x="27.4004%" y="453" width="0.0777%" height="15" fill="rgb(233,84,52)" fg:x="23620" fg:w="67"/><text x="27.6504%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (31 samples, 0.04%)</title><rect x="27.4422%" y="437" width="0.0360%" height="15" fill="rgb(207,117,47)" fg:x="23656" fg:w="31"/><text x="27.6922%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (24 samples, 0.03%)</title><rect x="27.4816%" y="453" width="0.0278%" height="15" fill="rgb(249,43,39)" fg:x="23690" fg:w="24"/><text x="27.7316%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (11 samples, 0.01%)</title><rect x="27.5095%" y="453" width="0.0128%" height="15" fill="rgb(209,38,44)" fg:x="23714" fg:w="11"/><text x="27.7595%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (67 samples, 0.08%)</title><rect x="27.5304%" y="453" width="0.0777%" height="15" fill="rgb(236,212,23)" fg:x="23732" fg:w="67"/><text x="27.7804%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (365 samples, 0.42%)</title><rect x="27.6081%" y="453" width="0.4234%" height="15" fill="rgb(242,79,21)" fg:x="23799" fg:w="365"/><text x="27.8581%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (750 samples, 0.87%)</title><rect x="27.2659%" y="469" width="0.8700%" height="15" fill="rgb(211,96,35)" fg:x="23504" fg:w="750"/><text x="27.5159%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (88 samples, 0.10%)</title><rect x="28.0338%" y="453" width="0.1021%" height="15" fill="rgb(253,215,40)" fg:x="24166" fg:w="88"/><text x="28.2838%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.02%)</title><rect x="28.1614%" y="453" width="0.0174%" height="15" fill="rgb(211,81,21)" fg:x="24276" fg:w="15"/><text x="28.4114%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="28.1823%" y="453" width="0.0104%" height="15" fill="rgb(208,190,38)" fg:x="24294" fg:w="9"/><text x="28.4323%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (52 samples, 0.06%)</title><rect x="28.1928%" y="453" width="0.0603%" height="15" fill="rgb(235,213,38)" fg:x="24303" fg:w="52"/><text x="28.4428%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (107 samples, 0.12%)</title><rect x="28.1359%" y="469" width="0.1241%" height="15" fill="rgb(237,122,38)" fg:x="24254" fg:w="107"/><text x="28.3859%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (185 samples, 0.21%)</title><rect x="28.2600%" y="469" width="0.2146%" height="15" fill="rgb(244,218,35)" fg:x="24361" fg:w="185"/><text x="28.5100%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (166 samples, 0.19%)</title><rect x="28.4746%" y="469" width="0.1926%" height="15" fill="rgb(240,68,47)" fg:x="24546" fg:w="166"/><text x="28.7246%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (303 samples, 0.35%)</title><rect x="28.6672%" y="469" width="0.3515%" height="15" fill="rgb(210,16,53)" fg:x="24712" fg:w="303"/><text x="28.9172%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (240 samples, 0.28%)</title><rect x="29.0187%" y="469" width="0.2784%" height="15" fill="rgb(235,124,12)" fg:x="25015" fg:w="240"/><text x="29.2687%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,997 samples, 2.32%)</title><rect x="27.0849%" y="485" width="2.3166%" height="15" fill="rgb(224,169,11)" fg:x="23348" fg:w="1997"/><text x="27.3349%" y="495.50">c..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (90 samples, 0.10%)</title><rect x="29.2971%" y="469" width="0.1044%" height="15" fill="rgb(250,166,2)" fg:x="25255" fg:w="90"/><text x="29.5471%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="29.4166%" y="469" width="0.0104%" height="15" fill="rgb(242,216,29)" fg:x="25358" fg:w="9"/><text x="29.6666%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.02%)</title><rect x="29.4421%" y="453" width="0.0151%" height="15" fill="rgb(230,116,27)" fg:x="25380" fg:w="13"/><text x="29.6921%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (28 samples, 0.03%)</title><rect x="29.4271%" y="469" width="0.0325%" height="15" fill="rgb(228,99,48)" fg:x="25367" fg:w="28"/><text x="29.6771%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (23 samples, 0.03%)</title><rect x="29.4630%" y="469" width="0.0267%" height="15" fill="rgb(253,11,6)" fg:x="25398" fg:w="23"/><text x="29.7130%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.02%)</title><rect x="29.4897%" y="469" width="0.0174%" height="15" fill="rgb(247,143,39)" fg:x="25421" fg:w="15"/><text x="29.7397%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.01%)</title><rect x="29.5071%" y="469" width="0.0116%" height="15" fill="rgb(236,97,10)" fg:x="25436" fg:w="10"/><text x="29.7571%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (104 samples, 0.12%)</title><rect x="29.4015%" y="485" width="0.1206%" height="15" fill="rgb(233,208,19)" fg:x="25345" fg:w="104"/><text x="29.6515%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (62 samples, 0.07%)</title><rect x="29.5222%" y="485" width="0.0719%" height="15" fill="rgb(216,164,2)" fg:x="25449" fg:w="62"/><text x="29.7722%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (58 samples, 0.07%)</title><rect x="29.5941%" y="485" width="0.0673%" height="15" fill="rgb(220,129,5)" fg:x="25511" fg:w="58"/><text x="29.8441%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (107 samples, 0.12%)</title><rect x="29.6614%" y="485" width="0.1241%" height="15" fill="rgb(242,17,10)" fg:x="25569" fg:w="107"/><text x="29.9114%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (92 samples, 0.11%)</title><rect x="29.7855%" y="485" width="0.1067%" height="15" fill="rgb(242,107,0)" fg:x="25676" fg:w="92"/><text x="30.0355%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (2,548 samples, 2.96%)</title><rect x="26.9782%" y="501" width="2.9558%" height="15" fill="rgb(251,28,31)" fg:x="23256" fg:w="2548"/><text x="27.2282%" y="511.50">cpu..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (36 samples, 0.04%)</title><rect x="29.8922%" y="485" width="0.0418%" height="15" fill="rgb(233,223,10)" fg:x="25768" fg:w="36"/><text x="30.1422%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (84 samples, 0.10%)</title><rect x="33.9617%" y="437" width="0.0974%" height="15" fill="rgb(215,21,27)" fg:x="29276" fg:w="84"/><text x="34.2117%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (3,560 samples, 4.13%)</title><rect x="29.9340%" y="501" width="4.1298%" height="15" fill="rgb(232,23,21)" fg:x="25804" fg:w="3560"/><text x="30.1840%" y="511.50">cpu_..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (97 samples, 0.11%)</title><rect x="33.9513%" y="485" width="0.1125%" height="15" fill="rgb(244,5,23)" fg:x="29267" fg:w="97"/><text x="34.2013%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (96 samples, 0.11%)</title><rect x="33.9524%" y="469" width="0.1114%" height="15" fill="rgb(226,81,46)" fg:x="29268" fg:w="96"/><text x="34.2024%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (92 samples, 0.11%)</title><rect x="33.9571%" y="453" width="0.1067%" height="15" fill="rgb(247,70,30)" fg:x="29272" fg:w="92"/><text x="34.2071%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.03%)</title><rect x="34.0661%" y="501" width="0.0267%" height="15" fill="rgb(212,68,19)" fg:x="29366" fg:w="23"/><text x="34.3161%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.02%)</title><rect x="34.1021%" y="501" width="0.0197%" height="15" fill="rgb(240,187,13)" fg:x="29397" fg:w="17"/><text x="34.3521%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.03%)</title><rect x="34.1218%" y="501" width="0.0255%" height="15" fill="rgb(223,113,26)" fg:x="29414" fg:w="22"/><text x="34.3718%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29,324 samples, 34.02%)</title><rect x="0.1891%" y="517" width="34.0174%" height="15" fill="rgb(206,192,2)" fg:x="163" fg:w="29324"/><text x="0.4391%" y="527.50">cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as al..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (50 samples, 0.06%)</title><rect x="34.1485%" y="501" width="0.0580%" height="15" fill="rgb(241,108,4)" fg:x="29437" fg:w="50"/><text x="34.3985%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="34.2169%" y="501" width="0.0128%" height="15" fill="rgb(247,173,49)" fg:x="29496" fg:w="11"/><text x="34.4669%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="34.2192%" y="485" width="0.0104%" height="15" fill="rgb(224,114,35)" fg:x="29498" fg:w="9"/><text x="34.4692%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`sha2::sha256::compress256 (5,186 samples, 6.02%)</title><rect x="34.2331%" y="501" width="6.0160%" height="15" fill="rgb(245,159,27)" fg:x="29510" fg:w="5186"/><text x="34.4831%" y="511.50">cpu_benc..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::merkle_tree::merkelize (5,214 samples, 6.05%)</title><rect x="34.2157%" y="517" width="6.0485%" height="15" fill="rgb(245,172,44)" fg:x="29495" fg:w="5214"/><text x="34.4657%" y="527.50">cpu_benc..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,804 samples, 18.33%)</title><rect x="40.8814%" y="469" width="18.3335%" height="15" fill="rgb(236,23,11)" fg:x="35241" fg:w="15804"/><text x="41.1314%" y="479.50">cpu_bench_v0-42868c868297afde..</text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1,078 samples, 1.25%)</title><rect x="59.2880%" y="421" width="1.2505%" height="15" fill="rgb(205,117,38)" fg:x="51108" fg:w="1078"/><text x="59.5380%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (13 samples, 0.02%)</title><rect x="60.5385%" y="421" width="0.0151%" height="15" fill="rgb(237,72,25)" fg:x="52186" fg:w="13"/><text x="60.7885%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16,982 samples, 19.70%)</title><rect x="40.8710%" y="485" width="19.7000%" height="15" fill="rgb(244,70,9)" fg:x="35232" fg:w="16982"/><text x="41.1210%" y="495.50">cpu_bench_v0-42868c868297afde`&lt;..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,161 samples, 1.35%)</title><rect x="59.2242%" y="469" width="1.3468%" height="15" fill="rgb(217,125,39)" fg:x="51053" fg:w="1161"/><text x="59.4742%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1,150 samples, 1.33%)</title><rect x="59.2369%" y="453" width="1.3341%" height="15" fill="rgb(235,36,10)" fg:x="51064" fg:w="1150"/><text x="59.4869%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1,130 samples, 1.31%)</title><rect x="59.2601%" y="437" width="1.3109%" height="15" fill="rgb(251,123,47)" fg:x="51084" fg:w="1130"/><text x="59.5101%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (15 samples, 0.02%)</title><rect x="60.5536%" y="421" width="0.0174%" height="15" fill="rgb(221,13,13)" fg:x="52199" fg:w="15"/><text x="60.8036%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.03%)</title><rect x="60.5791%" y="485" width="0.0302%" height="15" fill="rgb(238,131,9)" fg:x="52221" fg:w="26"/><text x="60.8291%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,032 samples, 19.76%)</title><rect x="40.8582%" y="501" width="19.7580%" height="15" fill="rgb(211,50,8)" fg:x="35221" fg:w="17032"/><text x="41.1082%" y="511.50">cpu_bench_v0-42868c868297afde`&lt;..</text></g><g><title>libsystem_malloc.dylib`_szone_free (12 samples, 0.01%)</title><rect x="60.6185%" y="501" width="0.0139%" height="15" fill="rgb(245,182,24)" fg:x="52255" fg:w="12"/><text x="60.8685%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (30 samples, 0.03%)</title><rect x="60.6777%" y="485" width="0.0348%" height="15" fill="rgb(242,14,37)" fg:x="52306" fg:w="30"/><text x="60.9277%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (35 samples, 0.04%)</title><rect x="60.7276%" y="485" width="0.0406%" height="15" fill="rgb(246,228,12)" fg:x="52349" fg:w="35"/><text x="60.9776%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (142 samples, 0.16%)</title><rect x="60.7751%" y="485" width="0.1647%" height="15" fill="rgb(213,55,15)" fg:x="52390" fg:w="142"/><text x="61.0251%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (131 samples, 0.15%)</title><rect x="60.7879%" y="469" width="0.1520%" height="15" fill="rgb(209,9,3)" fg:x="52401" fg:w="131"/><text x="61.0379%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (655 samples, 0.76%)</title><rect x="60.9596%" y="469" width="0.7598%" height="15" fill="rgb(230,59,30)" fg:x="52549" fg:w="655"/><text x="61.2096%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_small (941 samples, 1.09%)</title><rect x="60.6325%" y="501" width="1.0916%" height="15" fill="rgb(209,121,21)" fg:x="52267" fg:w="941"/><text x="60.8825%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (676 samples, 0.78%)</title><rect x="60.9399%" y="485" width="0.7842%" height="15" fill="rgb(220,109,13)" fg:x="52532" fg:w="676"/><text x="61.1899%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::computed_tprimes (18,512 samples, 21.47%)</title><rect x="40.2643%" y="517" width="21.4749%" height="15" fill="rgb(232,18,1)" fg:x="34709" fg:w="18512"/><text x="40.5143%" y="527.50">cpu_bench_v0-42868c868297afde`bini..</text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (34 samples, 0.04%)</title><rect x="61.8238%" y="453" width="0.0394%" height="15" fill="rgb(215,41,42)" fg:x="53294" fg:w="34"/><text x="62.0738%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (18 samples, 0.02%)</title><rect x="61.8633%" y="453" width="0.0209%" height="15" fill="rgb(224,123,36)" fg:x="53328" fg:w="18"/><text x="62.1133%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (10 samples, 0.01%)</title><rect x="61.8934%" y="453" width="0.0116%" height="15" fill="rgb(240,125,3)" fg:x="53354" fg:w="10"/><text x="62.1434%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="61.9120%" y="437" width="0.0197%" height="15" fill="rgb(205,98,50)" fg:x="53370" fg:w="17"/><text x="62.1620%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`realloc (15 samples, 0.02%)</title><rect x="61.9143%" y="421" width="0.0174%" height="15" fill="rgb(205,185,37)" fg:x="53372" fg:w="15"/><text x="62.1643%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.04%)</title><rect x="61.9050%" y="453" width="0.0371%" height="15" fill="rgb(238,207,15)" fg:x="53364" fg:w="32"/><text x="62.1550%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (60 samples, 0.07%)</title><rect x="62.0094%" y="437" width="0.0696%" height="15" fill="rgb(213,199,42)" fg:x="53454" fg:w="60"/><text x="62.2594%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (49 samples, 0.06%)</title><rect x="62.0790%" y="437" width="0.0568%" height="15" fill="rgb(235,201,11)" fg:x="53514" fg:w="49"/><text x="62.3290%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (29 samples, 0.03%)</title><rect x="62.1359%" y="437" width="0.0336%" height="15" fill="rgb(207,46,11)" fg:x="53563" fg:w="29"/><text x="62.3859%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (45 samples, 0.05%)</title><rect x="62.1695%" y="437" width="0.0522%" height="15" fill="rgb(241,35,35)" fg:x="53592" fg:w="45"/><text x="62.4195%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (38 samples, 0.04%)</title><rect x="62.2299%" y="437" width="0.0441%" height="15" fill="rgb(243,32,47)" fg:x="53644" fg:w="38"/><text x="62.4799%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.01%)</title><rect x="62.2600%" y="421" width="0.0139%" height="15" fill="rgb(247,202,23)" fg:x="53670" fg:w="12"/><text x="62.5100%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (15 samples, 0.02%)</title><rect x="62.4561%" y="421" width="0.0174%" height="15" fill="rgb(219,102,11)" fg:x="53839" fg:w="15"/><text x="62.7061%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (18 samples, 0.02%)</title><rect x="62.4735%" y="421" width="0.0209%" height="15" fill="rgb(243,110,44)" fg:x="53854" fg:w="18"/><text x="62.7235%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="62.5164%" y="405" width="0.0128%" height="15" fill="rgb(222,74,54)" fg:x="53891" fg:w="11"/><text x="62.7664%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (29 samples, 0.03%)</title><rect x="62.5291%" y="405" width="0.0336%" height="15" fill="rgb(216,99,12)" fg:x="53902" fg:w="29"/><text x="62.7791%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (99 samples, 0.11%)</title><rect x="62.4943%" y="421" width="0.1148%" height="15" fill="rgb(226,22,26)" fg:x="53872" fg:w="99"/><text x="62.7443%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (40 samples, 0.05%)</title><rect x="62.5628%" y="405" width="0.0464%" height="15" fill="rgb(217,163,10)" fg:x="53931" fg:w="40"/><text x="62.8128%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (18 samples, 0.02%)</title><rect x="62.6103%" y="421" width="0.0209%" height="15" fill="rgb(213,25,53)" fg:x="53972" fg:w="18"/><text x="62.8603%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (10 samples, 0.01%)</title><rect x="62.6312%" y="421" width="0.0116%" height="15" fill="rgb(252,105,26)" fg:x="53990" fg:w="10"/><text x="62.8812%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (13 samples, 0.02%)</title><rect x="62.6428%" y="421" width="0.0151%" height="15" fill="rgb(220,39,43)" fg:x="54000" fg:w="13"/><text x="62.8928%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (122 samples, 0.14%)</title><rect x="62.6579%" y="421" width="0.1415%" height="15" fill="rgb(229,68,48)" fg:x="54013" fg:w="122"/><text x="62.9079%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (543 samples, 0.63%)</title><rect x="62.7994%" y="421" width="0.6299%" height="15" fill="rgb(252,8,32)" fg:x="54135" fg:w="543"/><text x="63.0494%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,124 samples, 1.30%)</title><rect x="62.2751%" y="437" width="1.3039%" height="15" fill="rgb(223,20,43)" fg:x="53683" fg:w="1124"/><text x="62.5251%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (128 samples, 0.15%)</title><rect x="63.4305%" y="421" width="0.1485%" height="15" fill="rgb(229,81,49)" fg:x="54679" fg:w="128"/><text x="63.6805%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.01%)</title><rect x="63.6068%" y="405" width="0.0128%" height="15" fill="rgb(236,28,36)" fg:x="54831" fg:w="11"/><text x="63.8568%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.03%)</title><rect x="63.6010%" y="421" width="0.0278%" height="15" fill="rgb(249,185,26)" fg:x="54826" fg:w="24"/><text x="63.8510%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (66 samples, 0.08%)</title><rect x="63.6416%" y="421" width="0.0766%" height="15" fill="rgb(249,174,33)" fg:x="54861" fg:w="66"/><text x="63.8916%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (127 samples, 0.15%)</title><rect x="63.5790%" y="437" width="0.1473%" height="15" fill="rgb(233,201,37)" fg:x="54807" fg:w="127"/><text x="63.8290%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (276 samples, 0.32%)</title><rect x="63.7263%" y="437" width="0.3202%" height="15" fill="rgb(221,78,26)" fg:x="54934" fg:w="276"/><text x="63.9763%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (265 samples, 0.31%)</title><rect x="64.0465%" y="437" width="0.3074%" height="15" fill="rgb(250,127,30)" fg:x="55210" fg:w="265"/><text x="64.2965%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (459 samples, 0.53%)</title><rect x="64.3539%" y="437" width="0.5325%" height="15" fill="rgb(230,49,44)" fg:x="55475" fg:w="459"/><text x="64.6039%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (354 samples, 0.41%)</title><rect x="64.8864%" y="437" width="0.4107%" height="15" fill="rgb(229,67,23)" fg:x="55934" fg:w="354"/><text x="65.1364%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (2,999 samples, 3.48%)</title><rect x="61.9433%" y="453" width="3.4790%" height="15" fill="rgb(249,83,47)" fg:x="53397" fg:w="2999"/><text x="62.1933%" y="463.50">cpu..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (108 samples, 0.13%)</title><rect x="65.2970%" y="437" width="0.1253%" height="15" fill="rgb(215,43,3)" fg:x="56288" fg:w="108"/><text x="65.5470%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.02%)</title><rect x="65.4397%" y="437" width="0.0174%" height="15" fill="rgb(238,154,13)" fg:x="56411" fg:w="15"/><text x="65.6897%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22 samples, 0.03%)</title><rect x="65.4826%" y="421" width="0.0255%" height="15" fill="rgb(219,56,2)" fg:x="56448" fg:w="22"/><text x="65.7326%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (46 samples, 0.05%)</title><rect x="65.4571%" y="437" width="0.0534%" height="15" fill="rgb(233,0,4)" fg:x="56426" fg:w="46"/><text x="65.7071%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.02%)</title><rect x="65.5186%" y="437" width="0.0174%" height="15" fill="rgb(235,30,7)" fg:x="56479" fg:w="15"/><text x="65.7686%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.02%)</title><rect x="65.5360%" y="437" width="0.0232%" height="15" fill="rgb(250,79,13)" fg:x="56494" fg:w="20"/><text x="65.7860%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (21 samples, 0.02%)</title><rect x="65.5592%" y="437" width="0.0244%" height="15" fill="rgb(211,146,34)" fg:x="56514" fg:w="21"/><text x="65.8092%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (146 samples, 0.17%)</title><rect x="65.4223%" y="453" width="0.1694%" height="15" fill="rgb(228,22,38)" fg:x="56396" fg:w="146"/><text x="65.6723%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (77 samples, 0.09%)</title><rect x="65.5917%" y="453" width="0.0893%" height="15" fill="rgb(235,168,5)" fg:x="56542" fg:w="77"/><text x="65.8417%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (83 samples, 0.10%)</title><rect x="65.6810%" y="453" width="0.0963%" height="15" fill="rgb(221,155,16)" fg:x="56619" fg:w="83"/><text x="65.9310%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (144 samples, 0.17%)</title><rect x="65.7773%" y="453" width="0.1670%" height="15" fill="rgb(215,215,53)" fg:x="56702" fg:w="144"/><text x="66.0273%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (126 samples, 0.15%)</title><rect x="65.9443%" y="453" width="0.1462%" height="15" fill="rgb(223,4,10)" fg:x="56846" fg:w="126"/><text x="66.1943%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (3,782 samples, 4.39%)</title><rect x="61.7728%" y="469" width="4.3873%" height="15" fill="rgb(234,103,6)" fg:x="53250" fg:w="3782"/><text x="62.0228%" y="479.50">cpu_b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (60 samples, 0.07%)</title><rect x="66.0905%" y="453" width="0.0696%" height="15" fill="rgb(227,97,0)" fg:x="56972" fg:w="60"/><text x="66.3405%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (10 samples, 0.01%)</title><rect x="66.1880%" y="405" width="0.0116%" height="15" fill="rgb(234,150,53)" fg:x="57056" fg:w="10"/><text x="66.4380%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (28 samples, 0.03%)</title><rect x="66.1682%" y="437" width="0.0325%" height="15" fill="rgb(228,201,54)" fg:x="57039" fg:w="28"/><text x="66.4182%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`realloc (19 samples, 0.02%)</title><rect x="66.1787%" y="421" width="0.0220%" height="15" fill="rgb(222,22,37)" fg:x="57048" fg:w="19"/><text x="66.4287%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (37 samples, 0.04%)</title><rect x="66.1636%" y="453" width="0.0429%" height="15" fill="rgb(237,53,32)" fg:x="57035" fg:w="37"/><text x="66.4136%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::int_to_bigbin (41 samples, 0.05%)</title><rect x="66.1601%" y="469" width="0.0476%" height="15" fill="rgb(233,25,53)" fg:x="57032" fg:w="41"/><text x="66.4101%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.03%)</title><rect x="66.2077%" y="469" width="0.0325%" height="15" fill="rgb(210,40,34)" fg:x="57073" fg:w="28"/><text x="66.4577%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.02%)</title><rect x="66.2402%" y="469" width="0.0162%" height="15" fill="rgb(241,220,44)" fg:x="57101" fg:w="14"/><text x="66.4902%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (45 samples, 0.05%)</title><rect x="66.2564%" y="469" width="0.0522%" height="15" fill="rgb(235,28,35)" fg:x="57115" fg:w="45"/><text x="66.5064%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.03%)</title><rect x="66.3109%" y="469" width="0.0348%" height="15" fill="rgb(210,56,17)" fg:x="57162" fg:w="30"/><text x="66.5609%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,988 samples, 4.63%)</title><rect x="61.7392%" y="485" width="4.6263%" height="15" fill="rgb(224,130,29)" fg:x="53221" fg:w="3988"/><text x="61.9892%" y="495.50">cpu_b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.02%)</title><rect x="66.3457%" y="469" width="0.0197%" height="15" fill="rgb(235,212,8)" fg:x="57192" fg:w="17"/><text x="66.5957%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,002 samples, 4.64%)</title><rect x="61.7392%" y="501" width="4.6425%" height="15" fill="rgb(223,33,50)" fg:x="53221" fg:w="4002"/><text x="61.9892%" y="511.50">cpu_b..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (4,027 samples, 4.67%)</title><rect x="61.7392%" y="517" width="4.6715%" height="15" fill="rgb(219,149,13)" fg:x="53221" fg:w="4027"/><text x="61.9892%" y="527.50">cpu_b..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::pack_rows (216 samples, 0.25%)</title><rect x="66.4107%" y="517" width="0.2506%" height="15" fill="rgb(250,156,29)" fg:x="57248" fg:w="216"/><text x="66.6607%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (72 samples, 0.08%)</title><rect x="70.1820%" y="437" width="0.0835%" height="15" fill="rgb(216,193,19)" fg:x="60499" fg:w="72"/><text x="70.4320%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (85 samples, 0.10%)</title><rect x="70.1693%" y="501" width="0.0986%" height="15" fill="rgb(216,135,14)" fg:x="60488" fg:w="85"/><text x="70.4193%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (82 samples, 0.10%)</title><rect x="70.1727%" y="485" width="0.0951%" height="15" fill="rgb(241,47,5)" fg:x="60491" fg:w="82"/><text x="70.4227%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (80 samples, 0.09%)</title><rect x="70.1751%" y="469" width="0.0928%" height="15" fill="rgb(233,42,35)" fg:x="60493" fg:w="80"/><text x="70.4251%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (75 samples, 0.09%)</title><rect x="70.1809%" y="453" width="0.0870%" height="15" fill="rgb(231,13,6)" fg:x="60498" fg:w="75"/><text x="70.4309%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose (3,177 samples, 3.69%)</title><rect x="66.6613%" y="517" width="3.6855%" height="15" fill="rgb(207,181,40)" fg:x="57464" fg:w="3177"/><text x="66.9113%" y="527.50">cpu_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (67 samples, 0.08%)</title><rect x="70.2690%" y="501" width="0.0777%" height="15" fill="rgb(254,173,49)" fg:x="60574" fg:w="67"/><text x="70.5190%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (20 samples, 0.02%)</title><rect x="73.0566%" y="501" width="0.0232%" height="15" fill="rgb(221,1,38)" fg:x="62977" fg:w="20"/><text x="73.3066%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (10 samples, 0.01%)</title><rect x="73.0682%" y="485" width="0.0116%" height="15" fill="rgb(206,124,46)" fg:x="62987" fg:w="10"/><text x="73.3182%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_small (63 samples, 0.07%)</title><rect x="73.0821%" y="501" width="0.0731%" height="15" fill="rgb(249,21,11)" fg:x="62999" fg:w="63"/><text x="73.3321%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (43 samples, 0.05%)</title><rect x="73.1053%" y="485" width="0.0499%" height="15" fill="rgb(222,201,40)" fg:x="63019" fg:w="43"/><text x="73.3553%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (42 samples, 0.05%)</title><rect x="73.1065%" y="469" width="0.0487%" height="15" fill="rgb(235,61,29)" fg:x="63020" fg:w="42"/><text x="73.3565%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_bits (2,426 samples, 2.81%)</title><rect x="70.3467%" y="517" width="2.8143%" height="15" fill="rgb(219,207,3)" fg:x="60641" fg:w="2426"/><text x="70.5967%" y="527.50">cp..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (21 samples, 0.02%)</title><rect x="73.1703%" y="517" width="0.0244%" height="15" fill="rgb(222,56,46)" fg:x="63075" fg:w="21"/><text x="73.4203%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.03%)</title><rect x="73.2005%" y="517" width="0.0290%" height="15" fill="rgb(239,76,54)" fg:x="63101" fg:w="25"/><text x="73.4505%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (23 samples, 0.03%)</title><rect x="73.2527%" y="501" width="0.0267%" height="15" fill="rgb(231,124,27)" fg:x="63146" fg:w="23"/><text x="73.5027%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`madvise (23 samples, 0.03%)</title><rect x="73.2527%" y="485" width="0.0267%" height="15" fill="rgb(249,195,6)" fg:x="63146" fg:w="23"/><text x="73.5027%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (95 samples, 0.11%)</title><rect x="73.2805%" y="485" width="0.1102%" height="15" fill="rgb(237,174,47)" fg:x="63170" fg:w="95"/><text x="73.5305%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_small (136 samples, 0.16%)</title><rect x="73.2341%" y="517" width="0.1578%" height="15" fill="rgb(206,201,31)" fg:x="63130" fg:w="136"/><text x="73.4841%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (97 samples, 0.11%)</title><rect x="73.2794%" y="501" width="0.1125%" height="15" fill="rgb(231,57,52)" fg:x="63169" fg:w="97"/><text x="73.5294%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (17 samples, 0.02%)</title><rect x="73.3988%" y="517" width="0.0197%" height="15" fill="rgb(248,177,22)" fg:x="63272" fg:w="17"/><text x="73.6488%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (17 samples, 0.02%)</title><rect x="73.3988%" y="501" width="0.0197%" height="15" fill="rgb(215,211,37)" fg:x="63272" fg:w="17"/><text x="73.6488%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`madvise (17 samples, 0.02%)</title><rect x="73.3988%" y="485" width="0.0197%" height="15" fill="rgb(241,128,51)" fg:x="63272" fg:w="17"/><text x="73.6488%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::prover::prover (63,137 samples, 73.24%)</title><rect x="0.1879%" y="533" width="73.2422%" height="15" fill="rgb(227,165,31)" fg:x="162" fg:w="63137"/><text x="0.4379%" y="543.50">cpu_bench_v0-42868c868297afde`binius_rust::prover::prover</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16_to_bit (15 samples, 0.02%)</title><rect x="73.4452%" y="485" width="0.0174%" height="15" fill="rgb(228,167,24)" fg:x="63312" fg:w="15"/><text x="73.6952%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (16 samples, 0.02%)</title><rect x="73.4626%" y="485" width="0.0186%" height="15" fill="rgb(228,143,12)" fg:x="63327" fg:w="16"/><text x="73.7126%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.02%)</title><rect x="73.4812%" y="485" width="0.0162%" height="15" fill="rgb(249,149,8)" fg:x="63343" fg:w="14"/><text x="73.7312%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (86 samples, 0.10%)</title><rect x="73.4336%" y="501" width="0.0998%" height="15" fill="rgb(243,35,44)" fg:x="63302" fg:w="86"/><text x="73.6836%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (31 samples, 0.04%)</title><rect x="73.4974%" y="485" width="0.0360%" height="15" fill="rgb(246,89,9)" fg:x="63357" fg:w="31"/><text x="73.7474%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_lock (17 samples, 0.02%)</title><rect x="73.5334%" y="485" width="0.0197%" height="15" fill="rgb(233,213,13)" fg:x="63388" fg:w="17"/><text x="73.7834%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_unlock (10 samples, 0.01%)</title><rect x="73.5531%" y="485" width="0.0116%" height="15" fill="rgb(233,141,41)" fg:x="63405" fg:w="10"/><text x="73.8031%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (97 samples, 0.11%)</title><rect x="73.5647%" y="485" width="0.1125%" height="15" fill="rgb(239,167,4)" fg:x="63415" fg:w="97"/><text x="73.8147%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (83 samples, 0.10%)</title><rect x="74.0589%" y="469" width="0.0963%" height="15" fill="rgb(209,217,16)" fg:x="63841" fg:w="83"/><text x="74.3089%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (457 samples, 0.53%)</title><rect x="73.6773%" y="485" width="0.5301%" height="15" fill="rgb(219,88,35)" fg:x="63512" fg:w="457"/><text x="73.9273%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (45 samples, 0.05%)</title><rect x="74.1552%" y="469" width="0.0522%" height="15" fill="rgb(220,193,23)" fg:x="63924" fg:w="45"/><text x="74.4052%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (582 samples, 0.68%)</title><rect x="73.5334%" y="501" width="0.6752%" height="15" fill="rgb(230,90,52)" fg:x="63388" fg:w="582"/><text x="73.7834%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (10 samples, 0.01%)</title><rect x="74.2271%" y="485" width="0.0116%" height="15" fill="rgb(252,106,19)" fg:x="63986" fg:w="10"/><text x="74.4771%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.01%)</title><rect x="74.2492%" y="485" width="0.0116%" height="15" fill="rgb(206,74,20)" fg:x="64005" fg:w="10"/><text x="74.4992%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (17 samples, 0.02%)</title><rect x="74.2898%" y="469" width="0.0197%" height="15" fill="rgb(230,138,44)" fg:x="64040" fg:w="17"/><text x="74.5398%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (13 samples, 0.02%)</title><rect x="74.3095%" y="469" width="0.0151%" height="15" fill="rgb(235,182,43)" fg:x="64057" fg:w="13"/><text x="74.5595%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$memcpy (15 samples, 0.02%)</title><rect x="74.3246%" y="469" width="0.0174%" height="15" fill="rgb(242,16,51)" fg:x="64070" fg:w="15"/><text x="74.5746%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (13 samples, 0.02%)</title><rect x="74.3420%" y="469" width="0.0151%" height="15" fill="rgb(248,9,4)" fg:x="64085" fg:w="13"/><text x="74.5920%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.01%)</title><rect x="74.4452%" y="437" width="0.0116%" height="15" fill="rgb(210,31,22)" fg:x="64174" fg:w="10"/><text x="74.6952%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41 samples, 0.05%)</title><rect x="74.4336%" y="453" width="0.0476%" height="15" fill="rgb(239,54,39)" fg:x="64164" fg:w="41"/><text x="74.6836%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (21 samples, 0.02%)</title><rect x="74.4568%" y="437" width="0.0244%" height="15" fill="rgb(230,99,41)" fg:x="64184" fg:w="21"/><text x="74.7068%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (38 samples, 0.04%)</title><rect x="74.4986%" y="453" width="0.0441%" height="15" fill="rgb(253,106,12)" fg:x="64220" fg:w="38"/><text x="74.7486%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (171 samples, 0.20%)</title><rect x="74.5426%" y="453" width="0.1984%" height="15" fill="rgb(213,46,41)" fg:x="64258" fg:w="171"/><text x="74.7926%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (376 samples, 0.44%)</title><rect x="74.3640%" y="469" width="0.4362%" height="15" fill="rgb(215,133,35)" fg:x="64104" fg:w="376"/><text x="74.6140%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (51 samples, 0.06%)</title><rect x="74.7410%" y="453" width="0.0592%" height="15" fill="rgb(213,28,5)" fg:x="64429" fg:w="51"/><text x="74.9910%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.02%)</title><rect x="74.8095%" y="453" width="0.0162%" height="15" fill="rgb(215,77,49)" fg:x="64488" fg:w="14"/><text x="75.0595%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (21 samples, 0.02%)</title><rect x="74.8315%" y="453" width="0.0244%" height="15" fill="rgb(248,100,22)" fg:x="64507" fg:w="21"/><text x="75.0815%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (52 samples, 0.06%)</title><rect x="74.8002%" y="469" width="0.0603%" height="15" fill="rgb(208,67,9)" fg:x="64480" fg:w="52"/><text x="75.0502%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (102 samples, 0.12%)</title><rect x="74.8605%" y="469" width="0.1183%" height="15" fill="rgb(219,133,21)" fg:x="64532" fg:w="102"/><text x="75.1105%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (91 samples, 0.11%)</title><rect x="74.9788%" y="469" width="0.1056%" height="15" fill="rgb(246,46,29)" fg:x="64634" fg:w="91"/><text x="75.2288%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (142 samples, 0.16%)</title><rect x="75.0844%" y="469" width="0.1647%" height="15" fill="rgb(246,185,52)" fg:x="64725" fg:w="142"/><text x="75.3344%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (124 samples, 0.14%)</title><rect x="75.2491%" y="469" width="0.1438%" height="15" fill="rgb(252,136,11)" fg:x="64867" fg:w="124"/><text x="75.4991%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,008 samples, 1.17%)</title><rect x="74.2608%" y="485" width="1.1693%" height="15" fill="rgb(219,138,53)" fg:x="64015" fg:w="1008"/><text x="74.5108%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (32 samples, 0.04%)</title><rect x="75.3930%" y="469" width="0.0371%" height="15" fill="rgb(211,51,23)" fg:x="64991" fg:w="32"/><text x="75.6430%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (12 samples, 0.01%)</title><rect x="75.4429%" y="469" width="0.0139%" height="15" fill="rgb(247,221,28)" fg:x="65034" fg:w="12"/><text x="75.6929%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (44 samples, 0.05%)</title><rect x="75.4301%" y="485" width="0.0510%" height="15" fill="rgb(251,222,45)" fg:x="65023" fg:w="44"/><text x="75.6801%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.03%)</title><rect x="75.4811%" y="485" width="0.0325%" height="15" fill="rgb(217,162,53)" fg:x="65067" fg:w="28"/><text x="75.7311%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (30 samples, 0.03%)</title><rect x="75.5136%" y="485" width="0.0348%" height="15" fill="rgb(229,93,14)" fg:x="65095" fg:w="30"/><text x="75.7636%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (56 samples, 0.06%)</title><rect x="75.5484%" y="485" width="0.0650%" height="15" fill="rgb(209,67,49)" fg:x="65125" fg:w="56"/><text x="75.7984%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (38 samples, 0.04%)</title><rect x="75.6134%" y="485" width="0.0441%" height="15" fill="rgb(213,87,29)" fg:x="65181" fg:w="38"/><text x="75.8634%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,269 samples, 1.47%)</title><rect x="74.2167%" y="501" width="1.4721%" height="15" fill="rgb(205,151,52)" fg:x="63977" fg:w="1269"/><text x="74.4667%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (27 samples, 0.03%)</title><rect x="75.6575%" y="485" width="0.0313%" height="15" fill="rgb(253,215,39)" fg:x="65219" fg:w="27"/><text x="75.9075%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (104 samples, 0.12%)</title><rect x="75.6888%" y="501" width="0.1206%" height="15" fill="rgb(221,220,41)" fg:x="65246" fg:w="104"/><text x="75.9388%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.02%)</title><rect x="75.8141%" y="485" width="0.0174%" height="15" fill="rgb(218,133,21)" fg:x="65354" fg:w="15"/><text x="76.0641%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::pack_row (20 samples, 0.02%)</title><rect x="75.8094%" y="501" width="0.0232%" height="15" fill="rgb(221,193,43)" fg:x="65350" fg:w="20"/><text x="76.0594%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.03%)</title><rect x="75.8326%" y="501" width="0.0255%" height="15" fill="rgb(240,128,52)" fg:x="65370" fg:w="22"/><text x="76.0826%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.02%)</title><rect x="75.8663%" y="501" width="0.0197%" height="15" fill="rgb(253,114,12)" fg:x="65399" fg:w="17"/><text x="76.1163%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.02%)</title><rect x="75.8860%" y="501" width="0.0197%" height="15" fill="rgb(215,223,47)" fg:x="65416" fg:w="17"/><text x="76.1360%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,141 samples, 2.48%)</title><rect x="73.4325%" y="517" width="2.4837%" height="15" fill="rgb(248,225,23)" fg:x="63301" fg:w="2141"/><text x="73.6825%" y="527.50">cp..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="75.9057%" y="501" width="0.0104%" height="15" fill="rgb(250,108,0)" fg:x="65433" fg:w="9"/><text x="76.1557%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::_&lt;impl core::iter::traits::collect::FromIterator&lt;binius_rust::binary_field16::BinaryFieldElement16&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from_iter (27 samples, 0.03%)</title><rect x="75.9185%" y="517" width="0.0313%" height="15" fill="rgb(228,208,7)" fg:x="65444" fg:w="27"/><text x="76.1685%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`sha2::sha256::compress256 (59 samples, 0.07%)</title><rect x="75.9510%" y="501" width="0.0684%" height="15" fill="rgb(244,45,10)" fg:x="65472" fg:w="59"/><text x="76.2010%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::merkle_tree::verify_branch (60 samples, 0.07%)</title><rect x="75.9510%" y="517" width="0.0696%" height="15" fill="rgb(207,125,25)" fg:x="65472" fg:w="60"/><text x="76.2010%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (12 samples, 0.01%)</title><rect x="76.0496%" y="453" width="0.0139%" height="15" fill="rgb(210,195,18)" fg:x="65557" fg:w="12"/><text x="76.2996%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="76.0832%" y="437" width="0.0116%" height="15" fill="rgb(249,80,12)" fg:x="65586" fg:w="10"/><text x="76.3332%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.02%)</title><rect x="76.0797%" y="453" width="0.0220%" height="15" fill="rgb(221,65,9)" fg:x="65583" fg:w="19"/><text x="76.3297%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (26 samples, 0.03%)</title><rect x="76.1389%" y="437" width="0.0302%" height="15" fill="rgb(235,49,36)" fg:x="65634" fg:w="26"/><text x="76.3889%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (20 samples, 0.02%)</title><rect x="76.1690%" y="437" width="0.0232%" height="15" fill="rgb(225,32,20)" fg:x="65660" fg:w="20"/><text x="76.4190%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`__rdl_alloc (20 samples, 0.02%)</title><rect x="76.2015%" y="437" width="0.0232%" height="15" fill="rgb(215,141,46)" fg:x="65688" fg:w="20"/><text x="76.4515%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="76.2270%" y="437" width="0.0186%" height="15" fill="rgb(250,160,47)" fg:x="65710" fg:w="16"/><text x="76.4770%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="76.3755%" y="405" width="0.0116%" height="15" fill="rgb(216,222,40)" fg:x="65838" fg:w="10"/><text x="76.6255%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.02%)</title><rect x="76.3871%" y="405" width="0.0244%" height="15" fill="rgb(234,217,39)" fg:x="65848" fg:w="21"/><text x="76.6371%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (68 samples, 0.08%)</title><rect x="76.3605%" y="421" width="0.0789%" height="15" fill="rgb(207,178,40)" fg:x="65825" fg:w="68"/><text x="76.6105%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.03%)</title><rect x="76.4115%" y="405" width="0.0278%" height="15" fill="rgb(221,136,13)" fg:x="65869" fg:w="24"/><text x="76.6615%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (14 samples, 0.02%)</title><rect x="76.4440%" y="421" width="0.0162%" height="15" fill="rgb(249,199,10)" fg:x="65897" fg:w="14"/><text x="76.6940%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.05%)</title><rect x="76.4765%" y="421" width="0.0499%" height="15" fill="rgb(249,222,13)" fg:x="65925" fg:w="43"/><text x="76.7265%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (263 samples, 0.31%)</title><rect x="76.5263%" y="421" width="0.3051%" height="15" fill="rgb(244,185,38)" fg:x="65968" fg:w="263"/><text x="76.7763%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (575 samples, 0.67%)</title><rect x="76.2456%" y="437" width="0.6670%" height="15" fill="rgb(236,202,9)" fg:x="65726" fg:w="575"/><text x="76.4956%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (70 samples, 0.08%)</title><rect x="76.8314%" y="421" width="0.0812%" height="15" fill="rgb(250,229,37)" fg:x="66231" fg:w="70"/><text x="77.0814%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.02%)</title><rect x="76.9277%" y="421" width="0.0220%" height="15" fill="rgb(206,174,23)" fg:x="66314" fg:w="19"/><text x="77.1777%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.01%)</title><rect x="76.9382%" y="405" width="0.0116%" height="15" fill="rgb(211,33,43)" fg:x="66323" fg:w="10"/><text x="77.1882%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (34 samples, 0.04%)</title><rect x="76.9614%" y="421" width="0.0394%" height="15" fill="rgb(245,58,50)" fg:x="66343" fg:w="34"/><text x="77.2114%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (85 samples, 0.10%)</title><rect x="76.9126%" y="437" width="0.0986%" height="15" fill="rgb(244,68,36)" fg:x="66301" fg:w="85"/><text x="77.1626%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.01%)</title><rect x="77.0008%" y="421" width="0.0104%" height="15" fill="rgb(232,229,15)" fg:x="66377" fg:w="9"/><text x="77.2508%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (119 samples, 0.14%)</title><rect x="77.0112%" y="437" width="0.1380%" height="15" fill="rgb(254,30,23)" fg:x="66386" fg:w="119"/><text x="77.2612%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (117 samples, 0.14%)</title><rect x="77.1493%" y="437" width="0.1357%" height="15" fill="rgb(235,160,14)" fg:x="66505" fg:w="117"/><text x="77.3993%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (230 samples, 0.27%)</title><rect x="77.2850%" y="437" width="0.2668%" height="15" fill="rgb(212,155,44)" fg:x="66622" fg:w="230"/><text x="77.5350%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (174 samples, 0.20%)</title><rect x="77.5518%" y="437" width="0.2018%" height="15" fill="rgb(226,2,50)" fg:x="66852" fg:w="174"/><text x="77.8018%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,481 samples, 1.72%)</title><rect x="76.1029%" y="453" width="1.7180%" height="15" fill="rgb(234,177,6)" fg:x="65603" fg:w="1481"/><text x="76.3529%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (58 samples, 0.07%)</title><rect x="77.7537%" y="437" width="0.0673%" height="15" fill="rgb(217,24,9)" fg:x="67026" fg:w="58"/><text x="78.0037%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.02%)</title><rect x="77.8523%" y="421" width="0.0162%" height="15" fill="rgb(220,13,46)" fg:x="67111" fg:w="14"/><text x="78.1023%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (30 samples, 0.03%)</title><rect x="77.8349%" y="437" width="0.0348%" height="15" fill="rgb(239,221,27)" fg:x="67096" fg:w="30"/><text x="78.0849%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (18 samples, 0.02%)</title><rect x="77.8732%" y="437" width="0.0209%" height="15" fill="rgb(222,198,25)" fg:x="67129" fg:w="18"/><text x="78.1232%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.01%)</title><rect x="77.9022%" y="437" width="0.0116%" height="15" fill="rgb(211,99,13)" fg:x="67154" fg:w="10"/><text x="78.1522%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (83 samples, 0.10%)</title><rect x="77.8210%" y="453" width="0.0963%" height="15" fill="rgb(232,111,31)" fg:x="67084" fg:w="83"/><text x="78.0710%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (51 samples, 0.06%)</title><rect x="77.9172%" y="453" width="0.0592%" height="15" fill="rgb(245,82,37)" fg:x="67167" fg:w="51"/><text x="78.1672%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (56 samples, 0.06%)</title><rect x="77.9764%" y="453" width="0.0650%" height="15" fill="rgb(227,149,46)" fg:x="67218" fg:w="56"/><text x="78.2264%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (83 samples, 0.10%)</title><rect x="78.0414%" y="453" width="0.0963%" height="15" fill="rgb(218,36,50)" fg:x="67274" fg:w="83"/><text x="78.2914%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (55 samples, 0.06%)</title><rect x="78.1377%" y="453" width="0.0638%" height="15" fill="rgb(226,80,48)" fg:x="67357" fg:w="55"/><text x="78.3877%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (1,907 samples, 2.21%)</title><rect x="76.0310%" y="469" width="2.2122%" height="15" fill="rgb(238,224,15)" fg:x="65541" fg:w="1907"/><text x="76.2810%" y="479.50">c..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (36 samples, 0.04%)</title><rect x="78.2015%" y="453" width="0.0418%" height="15" fill="rgb(241,136,10)" fg:x="67412" fg:w="36"/><text x="78.4515%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::int_to_bigbin (15 samples, 0.02%)</title><rect x="78.2432%" y="469" width="0.0174%" height="15" fill="rgb(208,32,45)" fg:x="67448" fg:w="15"/><text x="78.4932%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.02%)</title><rect x="78.2444%" y="453" width="0.0162%" height="15" fill="rgb(207,135,9)" fg:x="67449" fg:w="14"/><text x="78.4944%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.02%)</title><rect x="78.2606%" y="469" width="0.0174%" height="15" fill="rgb(206,86,44)" fg:x="67463" fg:w="15"/><text x="78.5106%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.02%)</title><rect x="78.2838%" y="469" width="0.0232%" height="15" fill="rgb(245,177,15)" fg:x="67483" fg:w="20"/><text x="78.5338%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.02%)</title><rect x="78.3070%" y="469" width="0.0151%" height="15" fill="rgb(206,64,50)" fg:x="67503" fg:w="13"/><text x="78.5570%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,993 samples, 2.31%)</title><rect x="76.0206%" y="485" width="2.3120%" height="15" fill="rgb(234,36,40)" fg:x="65532" fg:w="1993"/><text x="76.2706%" y="495.50">c..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.01%)</title><rect x="78.3221%" y="469" width="0.0104%" height="15" fill="rgb(213,64,8)" fg:x="67516" fg:w="9"/><text x="78.5721%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,002 samples, 2.32%)</title><rect x="76.0206%" y="501" width="2.3224%" height="15" fill="rgb(210,75,36)" fg:x="65532" fg:w="2002"/><text x="76.2706%" y="511.50">c..</text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (2,022 samples, 2.35%)</title><rect x="76.0206%" y="517" width="2.3456%" height="15" fill="rgb(229,88,21)" fg:x="65532" fg:w="2022"/><text x="76.2706%" y="527.50">c..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (89 samples, 0.10%)</title><rect x="78.5274%" y="485" width="0.1032%" height="15" fill="rgb(252,204,47)" fg:x="67693" fg:w="89"/><text x="78.7774%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (134 samples, 0.16%)</title><rect x="78.5112%" y="501" width="0.1554%" height="15" fill="rgb(208,77,27)" fg:x="67679" fg:w="134"/><text x="78.7612%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (30 samples, 0.03%)</title><rect x="78.6318%" y="485" width="0.0348%" height="15" fill="rgb(221,76,26)" fg:x="67783" fg:w="30"/><text x="78.8818%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (30 samples, 0.03%)</title><rect x="78.6318%" y="469" width="0.0348%" height="15" fill="rgb(225,139,18)" fg:x="67783" fg:w="30"/><text x="78.8818%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (30 samples, 0.03%)</title><rect x="78.6318%" y="453" width="0.0348%" height="15" fill="rgb(230,137,11)" fg:x="67783" fg:w="30"/><text x="78.8818%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 0.07%)</title><rect x="78.7246%" y="453" width="0.0708%" height="15" fill="rgb(212,28,1)" fg:x="67863" fg:w="61"/><text x="78.9746%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (32 samples, 0.04%)</title><rect x="78.7583%" y="437" width="0.0371%" height="15" fill="rgb(248,164,17)" fg:x="67892" fg:w="32"/><text x="79.0083%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (11 samples, 0.01%)</title><rect x="78.7826%" y="421" width="0.0128%" height="15" fill="rgb(222,171,42)" fg:x="67913" fg:w="11"/><text x="79.0326%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$malloc (15 samples, 0.02%)</title><rect x="78.7954%" y="453" width="0.0174%" height="15" fill="rgb(243,84,45)" fg:x="67924" fg:w="15"/><text x="79.0454%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (75 samples, 0.09%)</title><rect x="78.8256%" y="453" width="0.0870%" height="15" fill="rgb(252,49,23)" fg:x="67950" fg:w="75"/><text x="79.0756%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (90 samples, 0.10%)</title><rect x="78.9137%" y="453" width="0.1044%" height="15" fill="rgb(215,19,7)" fg:x="68026" fg:w="90"/><text x="79.1637%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.02%)</title><rect x="79.0181%" y="453" width="0.0244%" height="15" fill="rgb(238,81,41)" fg:x="68116" fg:w="21"/><text x="79.2681%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (21 samples, 0.02%)</title><rect x="79.0181%" y="437" width="0.0244%" height="15" fill="rgb(210,199,37)" fg:x="68116" fg:w="21"/><text x="79.2681%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (21 samples, 0.02%)</title><rect x="79.0181%" y="421" width="0.0244%" height="15" fill="rgb(244,192,49)" fg:x="68116" fg:w="21"/><text x="79.2681%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (21 samples, 0.02%)</title><rect x="79.0181%" y="405" width="0.0244%" height="15" fill="rgb(226,211,11)" fg:x="68116" fg:w="21"/><text x="79.2681%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (355 samples, 0.41%)</title><rect x="78.6666%" y="501" width="0.4118%" height="15" fill="rgb(236,162,54)" fg:x="67813" fg:w="355"/><text x="78.9166%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (355 samples, 0.41%)</title><rect x="78.6666%" y="485" width="0.4118%" height="15" fill="rgb(220,229,9)" fg:x="67813" fg:w="355"/><text x="78.9166%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (355 samples, 0.41%)</title><rect x="78.6666%" y="469" width="0.4118%" height="15" fill="rgb(250,87,22)" fg:x="67813" fg:w="355"/><text x="78.9166%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (31 samples, 0.04%)</title><rect x="79.0425%" y="453" width="0.0360%" height="15" fill="rgb(239,43,17)" fg:x="68137" fg:w="31"/><text x="79.2925%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (9 samples, 0.01%)</title><rect x="79.0785%" y="501" width="0.0104%" height="15" fill="rgb(231,177,25)" fg:x="68168" fg:w="9"/><text x="79.3285%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (19 samples, 0.02%)</title><rect x="79.0982%" y="501" width="0.0220%" height="15" fill="rgb(219,179,1)" fg:x="68185" fg:w="19"/><text x="79.3482%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (73 samples, 0.08%)</title><rect x="79.1202%" y="501" width="0.0847%" height="15" fill="rgb(238,219,53)" fg:x="68204" fg:w="73"/><text x="79.3702%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::multisubset (731 samples, 0.85%)</title><rect x="78.3662%" y="517" width="0.8480%" height="15" fill="rgb(232,167,36)" fg:x="67554" fg:w="731"/><text x="78.6162%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="79.3545%" y="485" width="0.0116%" height="15" fill="rgb(244,19,51)" fg:x="68406" fg:w="10"/><text x="79.6045%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.01%)</title><rect x="79.3545%" y="469" width="0.0116%" height="15" fill="rgb(224,6,22)" fg:x="68406" fg:w="10"/><text x="79.6045%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (9 samples, 0.01%)</title><rect x="79.3557%" y="453" width="0.0104%" height="15" fill="rgb(224,145,5)" fg:x="68407" fg:w="9"/><text x="79.6057%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (9 samples, 0.01%)</title><rect x="79.3557%" y="437" width="0.0104%" height="15" fill="rgb(234,130,49)" fg:x="68407" fg:w="9"/><text x="79.6057%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (9 samples, 0.01%)</title><rect x="79.3557%" y="421" width="0.0104%" height="15" fill="rgb(254,6,2)" fg:x="68407" fg:w="9"/><text x="79.6057%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_3d (137 samples, 0.16%)</title><rect x="79.2142%" y="517" width="0.1589%" height="15" fill="rgb(208,96,46)" fg:x="68285" fg:w="137"/><text x="79.4642%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (16 samples, 0.02%)</title><rect x="79.3545%" y="501" width="0.0186%" height="15" fill="rgb(239,3,39)" fg:x="68406" fg:w="16"/><text x="79.6045%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_bits (54 samples, 0.06%)</title><rect x="79.3731%" y="517" width="0.0626%" height="15" fill="rgb(233,210,1)" fg:x="68422" fg:w="54"/><text x="79.6231%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (41 samples, 0.05%)</title><rect x="79.4369%" y="517" width="0.0476%" height="15" fill="rgb(244,137,37)" fg:x="68477" fg:w="41"/><text x="79.6869%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.01%)</title><rect x="79.4845%" y="517" width="0.0116%" height="15" fill="rgb(240,136,2)" fg:x="68518" fg:w="10"/><text x="79.7345%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_small (35 samples, 0.04%)</title><rect x="79.5007%" y="517" width="0.0406%" height="15" fill="rgb(239,18,37)" fg:x="68532" fg:w="35"/><text x="79.7507%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (23 samples, 0.03%)</title><rect x="79.5146%" y="501" width="0.0267%" height="15" fill="rgb(218,185,22)" fg:x="68544" fg:w="23"/><text x="79.7646%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`madvise (23 samples, 0.03%)</title><rect x="79.5146%" y="485" width="0.0267%" height="15" fill="rgb(225,218,4)" fg:x="68544" fg:w="23"/><text x="79.7646%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (14 samples, 0.02%)</title><rect x="79.5494%" y="517" width="0.0162%" height="15" fill="rgb(230,182,32)" fg:x="68574" fg:w="14"/><text x="79.7994%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (14 samples, 0.02%)</title><rect x="79.5494%" y="501" width="0.0162%" height="15" fill="rgb(242,56,43)" fg:x="68574" fg:w="14"/><text x="79.7994%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`madvise (14 samples, 0.02%)</title><rect x="79.5494%" y="485" width="0.0162%" height="15" fill="rgb(233,99,24)" fg:x="68574" fg:w="14"/><text x="79.7994%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::verifier::verifier (5,291 samples, 6.14%)</title><rect x="73.4302%" y="533" width="6.1378%" height="15" fill="rgb(234,209,42)" fg:x="63299" fg:w="5291"/><text x="73.6802%" y="543.50">cpu_benc..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.01%)</title><rect x="79.5680%" y="533" width="0.0128%" height="15" fill="rgb(227,7,12)" fg:x="68590" fg:w="11"/><text x="79.8180%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.05%)</title><rect x="79.5819%" y="533" width="0.0464%" height="15" fill="rgb(245,203,43)" fg:x="68602" fg:w="40"/><text x="79.8319%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_small (35 samples, 0.04%)</title><rect x="79.6283%" y="533" width="0.0406%" height="15" fill="rgb(238,205,33)" fg:x="68642" fg:w="35"/><text x="79.8783%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (24 samples, 0.03%)</title><rect x="79.6411%" y="517" width="0.0278%" height="15" fill="rgb(231,56,7)" fg:x="68653" fg:w="24"/><text x="79.8911%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`madvise (24 samples, 0.03%)</title><rect x="79.6411%" y="501" width="0.0278%" height="15" fill="rgb(244,186,29)" fg:x="68653" fg:w="24"/><text x="79.8911%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (9 samples, 0.01%)</title><rect x="79.6689%" y="533" width="0.0104%" height="15" fill="rgb(234,111,31)" fg:x="68677" fg:w="9"/><text x="79.9189%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (9 samples, 0.01%)</title><rect x="79.6689%" y="517" width="0.0104%" height="15" fill="rgb(241,149,10)" fg:x="68677" fg:w="9"/><text x="79.9189%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (68,536 samples, 79.51%)</title><rect x="0.1798%" y="565" width="79.5054%" height="15" fill="rgb(249,206,44)" fg:x="155" fg:w="68536"/><text x="0.4298%" y="575.50">cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::bencher::Bencher&lt;M&gt;::iter (68,535 samples, 79.50%)</title><rect x="0.1810%" y="549" width="79.5042%" height="15" fill="rgb(251,153,30)" fg:x="156" fg:w="68535"/><text x="0.4310%" y="559.50">cpu_bench_v0-42868c868297afde`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_lock (49 samples, 0.06%)</title><rect x="79.6886%" y="485" width="0.0568%" height="15" fill="rgb(239,152,38)" fg:x="68694" fg:w="49"/><text x="79.9386%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$pthread_mutex_unlock (71 samples, 0.08%)</title><rect x="79.7455%" y="485" width="0.0824%" height="15" fill="rgb(249,139,47)" fg:x="68743" fg:w="71"/><text x="79.9955%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (33 samples, 0.04%)</title><rect x="80.4357%" y="405" width="0.0383%" height="15" fill="rgb(244,64,35)" fg:x="69338" fg:w="33"/><text x="80.6857%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.03%)</title><rect x="80.4427%" y="389" width="0.0313%" height="15" fill="rgb(216,46,15)" fg:x="69344" fg:w="27"/><text x="80.6927%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (27 samples, 0.03%)</title><rect x="80.4427%" y="373" width="0.0313%" height="15" fill="rgb(250,74,19)" fg:x="69344" fg:w="27"/><text x="80.6927%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (25 samples, 0.03%)</title><rect x="80.4450%" y="357" width="0.0290%" height="15" fill="rgb(249,42,33)" fg:x="69346" fg:w="25"/><text x="80.6950%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (24 samples, 0.03%)</title><rect x="80.4462%" y="341" width="0.0278%" height="15" fill="rgb(242,149,17)" fg:x="69347" fg:w="24"/><text x="80.6962%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (45 samples, 0.05%)</title><rect x="80.4288%" y="421" width="0.0522%" height="15" fill="rgb(244,29,21)" fg:x="69332" fg:w="45"/><text x="80.6788%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (53 samples, 0.06%)</title><rect x="80.4218%" y="469" width="0.0615%" height="15" fill="rgb(220,130,37)" fg:x="69326" fg:w="53"/><text x="80.6718%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::finish_grow (51 samples, 0.06%)</title><rect x="80.4241%" y="453" width="0.0592%" height="15" fill="rgb(211,67,2)" fg:x="69328" fg:w="51"/><text x="80.6741%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`realloc (49 samples, 0.06%)</title><rect x="80.4264%" y="437" width="0.0568%" height="15" fill="rgb(235,68,52)" fg:x="69330" fg:w="49"/><text x="80.6764%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::_&lt;impl core::iter::traits::collect::FromIterator&lt;binius_rust::binary_field16::BinaryFieldElement16&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from_iter (570 samples, 0.66%)</title><rect x="79.8278%" y="485" width="0.6612%" height="15" fill="rgb(246,142,3)" fg:x="68814" fg:w="570"/><text x="80.0778%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (476 samples, 0.55%)</title><rect x="80.4891%" y="485" width="0.5522%" height="15" fill="rgb(241,25,7)" fg:x="69384" fg:w="476"/><text x="80.7391%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (127 samples, 0.15%)</title><rect x="82.7895%" y="469" width="0.1473%" height="15" fill="rgb(242,119,39)" fg:x="71367" fg:w="127"/><text x="83.0395%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.01%)</title><rect x="82.9507%" y="453" width="0.0116%" height="15" fill="rgb(241,98,45)" fg:x="71506" fg:w="10"/><text x="83.2007%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (9 samples, 0.01%)</title><rect x="82.9519%" y="437" width="0.0104%" height="15" fill="rgb(254,28,30)" fg:x="71507" fg:w="9"/><text x="83.2019%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.01%)</title><rect x="82.9507%" y="469" width="0.0128%" height="15" fill="rgb(241,142,54)" fg:x="71506" fg:w="11"/><text x="83.2007%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (434 samples, 0.50%)</title><rect x="82.9658%" y="469" width="0.5035%" height="15" fill="rgb(222,85,15)" fg:x="71519" fg:w="434"/><text x="83.2158%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (2,273 samples, 2.64%)</title><rect x="81.0413%" y="485" width="2.6368%" height="15" fill="rgb(210,85,47)" fg:x="69860" fg:w="2273"/><text x="81.2913%" y="495.50">cp..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (180 samples, 0.21%)</title><rect x="83.4693%" y="469" width="0.2088%" height="15" fill="rgb(224,206,25)" fg:x="71953" fg:w="180"/><text x="83.7193%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (40 samples, 0.05%)</title><rect x="83.6815%" y="485" width="0.0464%" height="15" fill="rgb(243,201,19)" fg:x="72136" fg:w="40"/><text x="83.9315%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,484 samples, 4.04%)</title><rect x="79.6875%" y="501" width="4.0416%" height="15" fill="rgb(236,59,4)" fg:x="68693" fg:w="3484"/><text x="79.9375%" y="511.50">cpu_..</text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="83.8161%" y="453" width="0.0128%" height="15" fill="rgb(254,179,45)" fg:x="72252" fg:w="11"/><text x="84.0661%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (50 samples, 0.06%)</title><rect x="83.8428%" y="453" width="0.0580%" height="15" fill="rgb(226,14,10)" fg:x="72275" fg:w="50"/><text x="84.0928%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (110 samples, 0.13%)</title><rect x="83.7917%" y="469" width="0.1276%" height="15" fill="rgb(244,27,41)" fg:x="72231" fg:w="110"/><text x="84.0417%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.02%)</title><rect x="83.9020%" y="453" width="0.0174%" height="15" fill="rgb(235,35,32)" fg:x="72326" fg:w="15"/><text x="84.1520%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (19 samples, 0.02%)</title><rect x="83.9194%" y="469" width="0.0220%" height="15" fill="rgb(218,68,31)" fg:x="72341" fg:w="19"/><text x="84.1694%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.03%)</title><rect x="83.9414%" y="469" width="0.0278%" height="15" fill="rgb(207,120,37)" fg:x="72360" fg:w="24"/><text x="84.1914%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (25 samples, 0.03%)</title><rect x="83.9692%" y="469" width="0.0290%" height="15" fill="rgb(227,98,0)" fg:x="72384" fg:w="25"/><text x="84.2192%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (55 samples, 0.06%)</title><rect x="83.9982%" y="469" width="0.0638%" height="15" fill="rgb(207,7,3)" fg:x="72409" fg:w="55"/><text x="84.2482%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (37 samples, 0.04%)</title><rect x="84.0644%" y="469" width="0.0429%" height="15" fill="rgb(206,98,19)" fg:x="72466" fg:w="37"/><text x="84.3144%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (308 samples, 0.36%)</title><rect x="83.7546%" y="485" width="0.3573%" height="15" fill="rgb(217,5,26)" fg:x="72199" fg:w="308"/><text x="84.0046%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (15 samples, 0.02%)</title><rect x="84.1119%" y="485" width="0.0174%" height="15" fill="rgb(235,190,38)" fg:x="72507" fg:w="15"/><text x="84.3619%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.01%)</title><rect x="84.1456%" y="485" width="0.0139%" height="15" fill="rgb(247,86,24)" fg:x="72536" fg:w="12"/><text x="84.3956%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.02%)</title><rect x="84.1595%" y="485" width="0.0162%" height="15" fill="rgb(205,101,16)" fg:x="72548" fg:w="14"/><text x="84.4095%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (385 samples, 0.45%)</title><rect x="83.7349%" y="501" width="0.4466%" height="15" fill="rgb(246,168,33)" fg:x="72182" fg:w="385"/><text x="83.9849%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (540 samples, 0.63%)</title><rect x="84.1815%" y="501" width="0.6264%" height="15" fill="rgb(231,114,1)" fg:x="72567" fg:w="540"/><text x="84.4315%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.02%)</title><rect x="84.7929%" y="485" width="0.0151%" height="15" fill="rgb(207,184,53)" fg:x="73094" fg:w="13"/><text x="85.0429%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (13 samples, 0.02%)</title><rect x="84.7929%" y="469" width="0.0151%" height="15" fill="rgb(224,95,51)" fg:x="73094" fg:w="13"/><text x="85.0429%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (13 samples, 0.02%)</title><rect x="84.7929%" y="453" width="0.0151%" height="15" fill="rgb(212,188,45)" fg:x="73094" fg:w="13"/><text x="85.0429%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (13 samples, 0.02%)</title><rect x="84.7929%" y="437" width="0.0151%" height="15" fill="rgb(223,154,38)" fg:x="73094" fg:w="13"/><text x="85.0429%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,432 samples, 5.14%)</title><rect x="79.6863%" y="517" width="5.1414%" height="15" fill="rgb(251,22,52)" fg:x="68692" fg:w="4432"/><text x="79.9363%" y="527.50">cpu_be..</text></g><g><title>cpu_bench_v0-42868c868297afde`sha2::sha256::compress256 (773 samples, 0.90%)</title><rect x="84.8312%" y="501" width="0.8967%" height="15" fill="rgb(229,209,22)" fg:x="73127" fg:w="773"/><text x="85.0812%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::merkle_tree::merkelize (779 samples, 0.90%)</title><rect x="84.8288%" y="517" width="0.9037%" height="15" fill="rgb(234,138,34)" fg:x="73125" fg:w="779"/><text x="85.0788%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,407 samples, 2.79%)</title><rect x="85.8334%" y="469" width="2.7922%" height="15" fill="rgb(212,95,11)" fg:x="73991" fg:w="2407"/><text x="86.0834%" y="479.50">cp..</text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (170 samples, 0.20%)</title><rect x="88.6396%" y="421" width="0.1972%" height="15" fill="rgb(240,179,47)" fg:x="76410" fg:w="170"/><text x="88.8896%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,592 samples, 3.01%)</title><rect x="85.8334%" y="485" width="3.0069%" height="15" fill="rgb(240,163,11)" fg:x="73991" fg:w="2592"/><text x="86.0834%" y="495.50">cpu..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (185 samples, 0.21%)</title><rect x="88.6257%" y="469" width="0.2146%" height="15" fill="rgb(236,37,12)" fg:x="76398" fg:w="185"/><text x="88.8757%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (185 samples, 0.21%)</title><rect x="88.6257%" y="453" width="0.2146%" height="15" fill="rgb(232,164,16)" fg:x="76398" fg:w="185"/><text x="88.8757%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (179 samples, 0.21%)</title><rect x="88.6326%" y="437" width="0.2076%" height="15" fill="rgb(244,205,15)" fg:x="76404" fg:w="179"/><text x="88.8826%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,597 samples, 3.01%)</title><rect x="85.8323%" y="501" width="3.0127%" height="15" fill="rgb(223,117,47)" fg:x="73990" fg:w="2597"/><text x="86.0823%" y="511.50">cpu..</text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (25 samples, 0.03%)</title><rect x="88.8705%" y="485" width="0.0290%" height="15" fill="rgb(244,107,35)" fg:x="76609" fg:w="25"/><text x="89.1205%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (23 samples, 0.03%)</title><rect x="88.8728%" y="469" width="0.0267%" height="15" fill="rgb(205,140,8)" fg:x="76611" fg:w="23"/><text x="89.1228%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (106 samples, 0.12%)</title><rect x="88.9029%" y="469" width="0.1230%" height="15" fill="rgb(228,84,46)" fg:x="76637" fg:w="106"/><text x="89.1529%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_small (155 samples, 0.18%)</title><rect x="88.8473%" y="501" width="0.1798%" height="15" fill="rgb(254,188,9)" fg:x="76589" fg:w="155"/><text x="89.0973%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (110 samples, 0.13%)</title><rect x="88.8995%" y="485" width="0.1276%" height="15" fill="rgb(206,112,54)" fg:x="76634" fg:w="110"/><text x="89.1495%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::computed_tprimes (2,841 samples, 3.30%)</title><rect x="85.7325%" y="517" width="3.2957%" height="15" fill="rgb(216,84,49)" fg:x="73904" fg:w="2841"/><text x="85.9825%" y="527.50">cpu..</text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$free (12 samples, 0.01%)</title><rect x="89.0619%" y="437" width="0.0139%" height="15" fill="rgb(214,194,35)" fg:x="76774" fg:w="12"/><text x="89.3119%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="89.1245%" y="421" width="0.0128%" height="15" fill="rgb(249,28,3)" fg:x="76828" fg:w="11"/><text x="89.3745%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.02%)</title><rect x="89.1477%" y="421" width="0.0220%" height="15" fill="rgb(222,56,52)" fg:x="76848" fg:w="19"/><text x="89.3977%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (87 samples, 0.10%)</title><rect x="89.1698%" y="421" width="0.1009%" height="15" fill="rgb(245,217,50)" fg:x="76867" fg:w="87"/><text x="89.4198%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (163 samples, 0.19%)</title><rect x="89.0967%" y="437" width="0.1891%" height="15" fill="rgb(213,201,24)" fg:x="76804" fg:w="163"/><text x="89.3467%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.02%)</title><rect x="89.2707%" y="421" width="0.0151%" height="15" fill="rgb(248,116,28)" fg:x="76954" fg:w="13"/><text x="89.5207%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.01%)</title><rect x="89.2939%" y="421" width="0.0104%" height="15" fill="rgb(219,72,43)" fg:x="76974" fg:w="9"/><text x="89.5439%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (18 samples, 0.02%)</title><rect x="89.2858%" y="437" width="0.0209%" height="15" fill="rgb(209,138,14)" fg:x="76967" fg:w="18"/><text x="89.5358%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.05%)</title><rect x="89.3066%" y="437" width="0.0510%" height="15" fill="rgb(222,18,33)" fg:x="76985" fg:w="44"/><text x="89.5566%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (43 samples, 0.05%)</title><rect x="89.3577%" y="437" width="0.0499%" height="15" fill="rgb(213,199,7)" fg:x="77029" fg:w="43"/><text x="89.6077%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (65 samples, 0.08%)</title><rect x="89.4076%" y="437" width="0.0754%" height="15" fill="rgb(250,110,10)" fg:x="77072" fg:w="65"/><text x="89.6576%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (53 samples, 0.06%)</title><rect x="89.4830%" y="437" width="0.0615%" height="15" fill="rgb(248,123,6)" fg:x="77137" fg:w="53"/><text x="89.7330%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (444 samples, 0.52%)</title><rect x="89.0537%" y="453" width="0.5151%" height="15" fill="rgb(206,91,31)" fg:x="76767" fg:w="444"/><text x="89.3037%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.02%)</title><rect x="89.5444%" y="437" width="0.0244%" height="15" fill="rgb(211,154,13)" fg:x="77190" fg:w="21"/><text x="89.7944%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (23 samples, 0.03%)</title><rect x="89.5688%" y="453" width="0.0267%" height="15" fill="rgb(225,148,7)" fg:x="77211" fg:w="23"/><text x="89.8188%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.01%)</title><rect x="89.5955%" y="453" width="0.0116%" height="15" fill="rgb(220,160,43)" fg:x="77234" fg:w="10"/><text x="89.8455%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.02%)</title><rect x="89.6071%" y="453" width="0.0162%" height="15" fill="rgb(213,52,39)" fg:x="77244" fg:w="14"/><text x="89.8571%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.03%)</title><rect x="89.6233%" y="453" width="0.0336%" height="15" fill="rgb(243,137,7)" fg:x="77258" fg:w="29"/><text x="89.8733%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.02%)</title><rect x="89.6570%" y="453" width="0.0220%" height="15" fill="rgb(230,79,13)" fg:x="77287" fg:w="19"/><text x="89.9070%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (566 samples, 0.66%)</title><rect x="89.0305%" y="469" width="0.6566%" height="15" fill="rgb(247,105,23)" fg:x="76747" fg:w="566"/><text x="89.2805%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (594 samples, 0.69%)</title><rect x="89.0282%" y="485" width="0.6891%" height="15" fill="rgb(223,179,41)" fg:x="76745" fg:w="594"/><text x="89.2782%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (595 samples, 0.69%)</title><rect x="89.0282%" y="501" width="0.6902%" height="15" fill="rgb(218,9,34)" fg:x="76745" fg:w="595"/><text x="89.2782%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (600 samples, 0.70%)</title><rect x="89.0282%" y="517" width="0.6960%" height="15" fill="rgb(222,106,8)" fg:x="76745" fg:w="600"/><text x="89.2782%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::pack_rows (31 samples, 0.04%)</title><rect x="89.7243%" y="517" width="0.0360%" height="15" fill="rgb(211,220,0)" fg:x="77345" fg:w="31"/><text x="89.9743%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (9 samples, 0.01%)</title><rect x="90.2799%" y="437" width="0.0104%" height="15" fill="rgb(229,52,16)" fg:x="77824" fg:w="9"/><text x="90.5299%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (10 samples, 0.01%)</title><rect x="90.2799%" y="501" width="0.0116%" height="15" fill="rgb(212,155,18)" fg:x="77824" fg:w="10"/><text x="90.5299%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.01%)</title><rect x="90.2799%" y="485" width="0.0116%" height="15" fill="rgb(242,21,14)" fg:x="77824" fg:w="10"/><text x="90.5299%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.01%)</title><rect x="90.2799%" y="469" width="0.0116%" height="15" fill="rgb(222,19,48)" fg:x="77824" fg:w="10"/><text x="90.5299%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (10 samples, 0.01%)</title><rect x="90.2799%" y="453" width="0.0116%" height="15" fill="rgb(232,45,27)" fg:x="77824" fg:w="10"/><text x="90.5299%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose (472 samples, 0.55%)</title><rect x="89.7602%" y="517" width="0.5475%" height="15" fill="rgb(249,103,42)" fg:x="77376" fg:w="472"/><text x="90.0102%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.02%)</title><rect x="90.2915%" y="501" width="0.0162%" height="15" fill="rgb(246,81,33)" fg:x="77834" fg:w="14"/><text x="90.5415%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.01%)</title><rect x="90.7173%" y="501" width="0.0104%" height="15" fill="rgb(252,33,42)" fg:x="78201" fg:w="9"/><text x="90.9673%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_bits (363 samples, 0.42%)</title><rect x="90.3078%" y="517" width="0.4211%" height="15" fill="rgb(209,212,41)" fg:x="77848" fg:w="363"/><text x="90.5578%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`madvise (19 samples, 0.02%)</title><rect x="90.7405%" y="485" width="0.0220%" height="15" fill="rgb(207,154,6)" fg:x="78221" fg:w="19"/><text x="90.9905%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_small (27 samples, 0.03%)</title><rect x="90.7335%" y="517" width="0.0313%" height="15" fill="rgb(223,64,47)" fg:x="78215" fg:w="27"/><text x="90.9835%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (21 samples, 0.02%)</title><rect x="90.7405%" y="501" width="0.0244%" height="15" fill="rgb(211,161,38)" fg:x="78221" fg:w="21"/><text x="90.9905%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::prover::prover (9,556 samples, 11.09%)</title><rect x="79.6863%" y="533" width="11.0855%" height="15" fill="rgb(219,138,40)" fg:x="68692" fg:w="9556"/><text x="79.9363%" y="543.50">cpu_bench_v0-428..</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="90.7718%" y="501" width="0.0174%" height="15" fill="rgb(241,228,46)" fg:x="78248" fg:w="15"/><text x="91.0218%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::bin_mul (16 samples, 0.02%)</title><rect x="90.7892%" y="485" width="0.0186%" height="15" fill="rgb(223,209,38)" fg:x="78263" fg:w="16"/><text x="91.0392%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.01%)</title><rect x="90.8681%" y="469" width="0.0104%" height="15" fill="rgb(236,164,45)" fg:x="78331" fg:w="9"/><text x="91.1181%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_ntt_cache::extend (67 samples, 0.08%)</title><rect x="90.8077%" y="485" width="0.0777%" height="15" fill="rgb(231,15,5)" fg:x="78279" fg:w="67"/><text x="91.0577%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (84 samples, 0.10%)</title><rect x="90.7892%" y="501" width="0.0974%" height="15" fill="rgb(252,35,15)" fg:x="78263" fg:w="84"/><text x="91.0392%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (29 samples, 0.03%)</title><rect x="90.9435%" y="453" width="0.0336%" height="15" fill="rgb(248,181,18)" fg:x="78396" fg:w="29"/><text x="91.1935%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (60 samples, 0.07%)</title><rect x="90.9168%" y="469" width="0.0696%" height="15" fill="rgb(233,39,42)" fg:x="78373" fg:w="60"/><text x="91.1668%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.01%)</title><rect x="90.9945%" y="469" width="0.0116%" height="15" fill="rgb(238,110,33)" fg:x="78440" fg:w="10"/><text x="91.2445%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.01%)</title><rect x="91.0061%" y="469" width="0.0128%" height="15" fill="rgb(233,195,10)" fg:x="78450" fg:w="11"/><text x="91.2561%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.02%)</title><rect x="91.0189%" y="469" width="0.0244%" height="15" fill="rgb(254,105,3)" fg:x="78461" fg:w="21"/><text x="91.2689%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (16 samples, 0.02%)</title><rect x="91.0432%" y="469" width="0.0186%" height="15" fill="rgb(221,225,9)" fg:x="78482" fg:w="16"/><text x="91.2932%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (147 samples, 0.17%)</title><rect x="90.8947%" y="485" width="0.1705%" height="15" fill="rgb(224,227,45)" fg:x="78354" fg:w="147"/><text x="91.1447%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.01%)</title><rect x="91.0815%" y="485" width="0.0116%" height="15" fill="rgb(229,198,43)" fg:x="78515" fg:w="10"/><text x="91.3315%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (187 samples, 0.22%)</title><rect x="90.8889%" y="501" width="0.2169%" height="15" fill="rgb(206,209,35)" fg:x="78349" fg:w="187"/><text x="91.1389%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::uint16s_to_bits (21 samples, 0.02%)</title><rect x="91.1059%" y="501" width="0.0244%" height="15" fill="rgb(245,195,53)" fg:x="78536" fg:w="21"/><text x="91.3559%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (325 samples, 0.38%)</title><rect x="90.7718%" y="517" width="0.3770%" height="15" fill="rgb(240,92,26)" fg:x="78248" fg:w="325"/><text x="91.0218%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="91.2196%" y="421" width="0.0104%" height="15" fill="rgb(207,40,23)" fg:x="78634" fg:w="9"/><text x="91.4696%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (40 samples, 0.05%)</title><rect x="91.2428%" y="421" width="0.0464%" height="15" fill="rgb(223,111,35)" fg:x="78654" fg:w="40"/><text x="91.4928%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (89 samples, 0.10%)</title><rect x="91.2022%" y="437" width="0.1032%" height="15" fill="rgb(229,147,28)" fg:x="78619" fg:w="89"/><text x="91.4522%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.02%)</title><rect x="91.2892%" y="421" width="0.0162%" height="15" fill="rgb(211,29,28)" fg:x="78694" fg:w="14"/><text x="91.5392%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.02%)</title><rect x="91.3135%" y="437" width="0.0244%" height="15" fill="rgb(228,72,33)" fg:x="78715" fg:w="21"/><text x="91.5635%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (21 samples, 0.02%)</title><rect x="91.3379%" y="437" width="0.0244%" height="15" fill="rgb(205,214,31)" fg:x="78736" fg:w="21"/><text x="91.5879%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (27 samples, 0.03%)</title><rect x="91.3622%" y="437" width="0.0313%" height="15" fill="rgb(224,111,15)" fg:x="78757" fg:w="27"/><text x="91.6122%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.03%)</title><rect x="91.3936%" y="437" width="0.0302%" height="15" fill="rgb(253,21,26)" fg:x="78784" fg:w="26"/><text x="91.6436%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (233 samples, 0.27%)</title><rect x="91.1662%" y="453" width="0.2703%" height="15" fill="rgb(245,139,43)" fg:x="78588" fg:w="233"/><text x="91.4162%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.01%)</title><rect x="91.4237%" y="437" width="0.0128%" height="15" fill="rgb(252,170,7)" fg:x="78810" fg:w="11"/><text x="91.6737%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::mul_by_Xi (11 samples, 0.01%)</title><rect x="91.4365%" y="453" width="0.0128%" height="15" fill="rgb(231,118,14)" fg:x="78821" fg:w="11"/><text x="91.6865%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.02%)</title><rect x="91.4620%" y="453" width="0.0174%" height="15" fill="rgb(238,83,0)" fg:x="78843" fg:w="15"/><text x="91.7120%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.01%)</title><rect x="91.4794%" y="453" width="0.0128%" height="15" fill="rgb(221,39,39)" fg:x="78858" fg:w="11"/><text x="91.7294%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::binary_field16::big_mul_impl (288 samples, 0.33%)</title><rect x="91.1627%" y="469" width="0.3341%" height="15" fill="rgb(222,119,46)" fg:x="78585" fg:w="288"/><text x="91.4127%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (303 samples, 0.35%)</title><rect x="91.1592%" y="485" width="0.3515%" height="15" fill="rgb(222,165,49)" fg:x="78582" fg:w="303"/><text x="91.4092%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (304 samples, 0.35%)</title><rect x="91.1592%" y="501" width="0.3527%" height="15" fill="rgb(219,113,52)" fg:x="78582" fg:w="304"/><text x="91.4092%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::evaluation_tensor_product (305 samples, 0.35%)</title><rect x="91.1592%" y="517" width="0.3538%" height="15" fill="rgb(214,7,15)" fg:x="78582" fg:w="305"/><text x="91.4092%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.02%)</title><rect x="91.5339%" y="485" width="0.0186%" height="15" fill="rgb(235,32,4)" fg:x="78905" fg:w="16"/><text x="91.7839%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.03%)</title><rect x="91.5305%" y="501" width="0.0278%" height="15" fill="rgb(238,90,54)" fg:x="78902" fg:w="24"/><text x="91.7805%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.02%)</title><rect x="91.5699%" y="453" width="0.0197%" height="15" fill="rgb(213,208,19)" fg:x="78936" fg:w="17"/><text x="91.8199%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="91.5977%" y="453" width="0.0104%" height="15" fill="rgb(233,156,4)" fg:x="78960" fg:w="9"/><text x="91.8477%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 0.06%)</title><rect x="91.5583%" y="501" width="0.0650%" height="15" fill="rgb(207,194,5)" fg:x="78926" fg:w="56"/><text x="91.8083%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 0.06%)</title><rect x="91.5583%" y="485" width="0.0650%" height="15" fill="rgb(206,111,30)" fg:x="78926" fg:w="56"/><text x="91.8083%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 0.06%)</title><rect x="91.5583%" y="469" width="0.0650%" height="15" fill="rgb(243,70,54)" fg:x="78926" fg:w="56"/><text x="91.8083%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.01%)</title><rect x="91.6267%" y="501" width="0.0128%" height="15" fill="rgb(242,28,8)" fg:x="78985" fg:w="11"/><text x="91.8767%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::multisubset (110 samples, 0.13%)</title><rect x="91.5131%" y="517" width="0.1276%" height="15" fill="rgb(219,106,18)" fg:x="78887" fg:w="110"/><text x="91.7631%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::utils::transpose_3d (20 samples, 0.02%)</title><rect x="91.6407%" y="517" width="0.0232%" height="15" fill="rgb(244,222,10)" fg:x="78997" fg:w="20"/><text x="91.8907%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`binius_rust::verifier::verifier (796 samples, 0.92%)</title><rect x="90.7718%" y="533" width="0.9234%" height="15" fill="rgb(236,179,52)" fg:x="78248" fg:w="796"/><text x="91.0218%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`std::rt::lang_start::_{{closure}} (79,058 samples, 91.71%)</title><rect x="0.0000%" y="661" width="91.7114%" height="15" fill="rgb(213,23,39)" fg:x="0" fg:w="79058"/><text x="0.2500%" y="671.50">cpu_bench_v0-42868c868297afde`std::rt::lang_start::_{{closure}}</text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys_common::backtrace::__rust_begin_short_backtrace (79,058 samples, 91.71%)</title><rect x="0.0000%" y="645" width="91.7114%" height="15" fill="rgb(238,48,10)" fg:x="0" fg:w="79058"/><text x="0.2500%" y="655.50">cpu_bench_v0-42868c868297afde`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>cpu_bench_v0-42868c868297afde`cpu_bench_v0::main (79,058 samples, 91.71%)</title><rect x="0.0000%" y="629" width="91.7114%" height="15" fill="rgb(251,196,23)" fg:x="0" fg:w="79058"/><text x="0.2500%" y="639.50">cpu_bench_v0-42868c868297afde`cpu_bench_v0::main</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (78,934 samples, 91.57%)</title><rect x="0.1438%" y="613" width="91.5676%" height="15" fill="rgb(250,152,24)" fg:x="124" fg:w="78934"/><text x="0.3938%" y="623.50">cpu_bench_v0-42868c868297afde`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::common (78,934 samples, 91.57%)</title><rect x="0.1438%" y="597" width="91.5676%" height="15" fill="rgb(209,150,17)" fg:x="124" fg:w="78934"/><text x="0.3938%" y="607.50">cpu_bench_v0-42868c868297afde`criterion::analysis::common</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::routine::Routine::sample (78,903 samples, 91.53%)</title><rect x="0.1798%" y="581" width="91.5316%" height="15" fill="rgb(234,202,34)" fg:x="155" fg:w="78903"/><text x="0.4298%" y="591.50">cpu_bench_v0-42868c868297afde`criterion::routine::Routine::sample</text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (10,367 samples, 12.03%)</title><rect x="79.6852%" y="565" width="12.0263%" height="15" fill="rgb(253,148,53)" fg:x="68691" fg:w="10367"/><text x="79.9352%" y="575.50">cpu_bench_v0-42868..</text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::bencher::Bencher&lt;M&gt;::iter (10,367 samples, 12.03%)</title><rect x="79.6852%" y="549" width="12.0263%" height="15" fill="rgb(218,129,16)" fg:x="68691" fg:w="10367"/><text x="79.9352%" y="559.50">cpu_bench_v0-42868..</text></g><g><title>dyld`start (79,059 samples, 91.71%)</title><rect x="0.0000%" y="709" width="91.7126%" height="15" fill="rgb(216,85,19)" fg:x="0" fg:w="79059"/><text x="0.2500%" y="719.50">dyld`start</text></g><g><title>cpu_bench_v0-42868c868297afde`main (79,059 samples, 91.71%)</title><rect x="0.0000%" y="693" width="91.7126%" height="15" fill="rgb(235,228,7)" fg:x="0" fg:w="79059"/><text x="0.2500%" y="703.50">cpu_bench_v0-42868c868297afde`main</text></g><g><title>cpu_bench_v0-42868c868297afde`std::rt::lang_start_internal (79,059 samples, 91.71%)</title><rect x="0.0000%" y="677" width="91.7126%" height="15" fill="rgb(245,175,0)" fg:x="0" fg:w="79059"/><text x="0.2500%" y="687.50">cpu_bench_v0-42868c868297afde`std::rt::lang_start_internal</text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (16 samples, 0.02%)</title><rect x="91.7613%" y="453" width="0.0186%" height="15" fill="rgb(208,168,36)" fg:x="79101" fg:w="16"/><text x="92.0113%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (162 samples, 0.19%)</title><rect x="91.8448%" y="421" width="0.1879%" height="15" fill="rgb(246,171,24)" fg:x="79173" fg:w="162"/><text x="92.0948%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (17 samples, 0.02%)</title><rect x="92.5269%" y="357" width="0.0197%" height="15" fill="rgb(215,142,24)" fg:x="79761" fg:w="17"/><text x="92.7769%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (12 samples, 0.01%)</title><rect x="92.5327%" y="341" width="0.0139%" height="15" fill="rgb(250,187,7)" fg:x="79766" fg:w="12"/><text x="92.7827%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (23 samples, 0.03%)</title><rect x="92.5246%" y="373" width="0.0267%" height="15" fill="rgb(228,66,33)" fg:x="79759" fg:w="23"/><text x="92.7746%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.03%)</title><rect x="92.5246%" y="405" width="0.0278%" height="15" fill="rgb(234,215,21)" fg:x="79759" fg:w="24"/><text x="92.7746%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (24 samples, 0.03%)</title><rect x="92.5246%" y="389" width="0.0278%" height="15" fill="rgb(222,191,20)" fg:x="79759" fg:w="24"/><text x="92.7746%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (370 samples, 0.43%)</title><rect x="92.5884%" y="357" width="0.4292%" height="15" fill="rgb(245,79,54)" fg:x="79814" fg:w="370"/><text x="92.8384%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (237 samples, 0.27%)</title><rect x="92.7427%" y="341" width="0.2749%" height="15" fill="rgb(240,10,37)" fg:x="79947" fg:w="237"/><text x="92.9927%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (50 samples, 0.06%)</title><rect x="92.9596%" y="325" width="0.0580%" height="15" fill="rgb(214,192,32)" fg:x="80134" fg:w="50"/><text x="93.2096%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.01%)</title><rect x="93.0176%" y="357" width="0.0116%" height="15" fill="rgb(209,36,54)" fg:x="80184" fg:w="10"/><text x="93.2676%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.01%)</title><rect x="93.0292%" y="357" width="0.0139%" height="15" fill="rgb(220,10,11)" fg:x="80194" fg:w="12"/><text x="93.2792%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.01%)</title><rect x="93.0316%" y="341" width="0.0116%" height="15" fill="rgb(221,106,17)" fg:x="80196" fg:w="10"/><text x="93.2816%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (421 samples, 0.49%)</title><rect x="92.5559%" y="373" width="0.4884%" height="15" fill="rgb(251,142,44)" fg:x="79786" fg:w="421"/><text x="92.8059%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (10 samples, 0.01%)</title><rect x="93.0443%" y="373" width="0.0116%" height="15" fill="rgb(238,13,15)" fg:x="80207" fg:w="10"/><text x="93.2943%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (48 samples, 0.06%)</title><rect x="93.0559%" y="373" width="0.0557%" height="15" fill="rgb(208,107,27)" fg:x="80217" fg:w="48"/><text x="93.3059%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (495 samples, 0.57%)</title><rect x="92.5525%" y="389" width="0.5742%" height="15" fill="rgb(205,136,37)" fg:x="79783" fg:w="495"/><text x="92.8025%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (25 samples, 0.03%)</title><rect x="93.1905%" y="373" width="0.0290%" height="15" fill="rgb(250,205,27)" fg:x="80333" fg:w="25"/><text x="93.4405%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (666 samples, 0.77%)</title><rect x="92.5525%" y="405" width="0.7726%" height="15" fill="rgb(210,80,43)" fg:x="79783" fg:w="666"/><text x="92.8025%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (170 samples, 0.20%)</title><rect x="93.1278%" y="389" width="0.1972%" height="15" fill="rgb(247,160,36)" fg:x="80279" fg:w="170"/><text x="93.3778%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (91 samples, 0.11%)</title><rect x="93.2195%" y="373" width="0.1056%" height="15" fill="rgb(234,13,49)" fg:x="80358" fg:w="91"/><text x="93.4695%" y="383.50"></text></g><g><title>libsystem_m.dylib`exp (1,760 samples, 2.04%)</title><rect x="93.3251%" y="405" width="2.0417%" height="15" fill="rgb(234,122,0)" fg:x="80449" fg:w="1760"/><text x="93.5751%" y="415.50">l..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (2,875 samples, 3.34%)</title><rect x="92.0328%" y="421" width="3.3352%" height="15" fill="rgb(207,146,38)" fg:x="79335" fg:w="2875"/><text x="92.2828%" y="431.50">cpu..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (16 samples, 0.02%)</title><rect x="95.3679%" y="341" width="0.0186%" height="15" fill="rgb(207,177,25)" fg:x="82210" fg:w="16"/><text x="95.6179%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (9 samples, 0.01%)</title><rect x="95.3760%" y="325" width="0.0104%" height="15" fill="rgb(211,178,42)" fg:x="82217" fg:w="9"/><text x="95.6260%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (18 samples, 0.02%)</title><rect x="95.3679%" y="357" width="0.0209%" height="15" fill="rgb(230,69,54)" fg:x="82210" fg:w="18"/><text x="95.6179%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (26 samples, 0.03%)</title><rect x="95.3679%" y="421" width="0.0302%" height="15" fill="rgb(214,135,41)" fg:x="82210" fg:w="26"/><text x="95.6179%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.03%)</title><rect x="95.3679%" y="405" width="0.0302%" height="15" fill="rgb(237,67,25)" fg:x="82210" fg:w="26"/><text x="95.6179%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.03%)</title><rect x="95.3679%" y="389" width="0.0302%" height="15" fill="rgb(222,189,50)" fg:x="82210" fg:w="26"/><text x="95.6179%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (26 samples, 0.03%)</title><rect x="95.3679%" y="373" width="0.0302%" height="15" fill="rgb(245,148,34)" fg:x="82210" fg:w="26"/><text x="95.6179%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="95.4143%" y="197" width="0.0104%" height="15" fill="rgb(222,29,6)" fg:x="82250" fg:w="9"/><text x="95.6643%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.01%)</title><rect x="95.4143%" y="213" width="0.0128%" height="15" fill="rgb(221,189,43)" fg:x="82250" fg:w="11"/><text x="95.6643%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (52 samples, 0.06%)</title><rect x="95.4062%" y="245" width="0.0603%" height="15" fill="rgb(207,36,27)" fg:x="82243" fg:w="52"/><text x="95.6562%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.06%)</title><rect x="95.4097%" y="229" width="0.0568%" height="15" fill="rgb(217,90,24)" fg:x="82246" fg:w="49"/><text x="95.6597%" y="239.50"></text></g><g><title>libsystem_m.dylib`exp (34 samples, 0.04%)</title><rect x="95.4271%" y="213" width="0.0394%" height="15" fill="rgb(224,66,35)" fg:x="82261" fg:w="34"/><text x="95.6771%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (71 samples, 0.08%)</title><rect x="95.4039%" y="261" width="0.0824%" height="15" fill="rgb(221,13,50)" fg:x="82241" fg:w="71"/><text x="95.6539%" y="271.50"></text></g><g><title>libsystem_m.dylib`exp (17 samples, 0.02%)</title><rect x="95.4665%" y="245" width="0.0197%" height="15" fill="rgb(236,68,49)" fg:x="82295" fg:w="17"/><text x="95.7165%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (86 samples, 0.10%)</title><rect x="95.4027%" y="277" width="0.0998%" height="15" fill="rgb(229,146,28)" fg:x="82240" fg:w="86"/><text x="95.6527%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (14 samples, 0.02%)</title><rect x="95.4862%" y="261" width="0.0162%" height="15" fill="rgb(225,31,38)" fg:x="82312" fg:w="14"/><text x="95.7362%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (14 samples, 0.02%)</title><rect x="95.4862%" y="245" width="0.0162%" height="15" fill="rgb(250,208,3)" fg:x="82312" fg:w="14"/><text x="95.7362%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="95.4862%" y="229" width="0.0162%" height="15" fill="rgb(246,54,23)" fg:x="82312" fg:w="14"/><text x="95.7362%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (14 samples, 0.02%)</title><rect x="95.4862%" y="213" width="0.0162%" height="15" fill="rgb(243,76,11)" fg:x="82312" fg:w="14"/><text x="95.7362%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="95.4862%" y="197" width="0.0162%" height="15" fill="rgb(245,21,50)" fg:x="82312" fg:w="14"/><text x="95.7362%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (14 samples, 0.02%)</title><rect x="95.4862%" y="181" width="0.0162%" height="15" fill="rgb(228,9,43)" fg:x="82312" fg:w="14"/><text x="95.7362%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.01%)</title><rect x="95.4909%" y="165" width="0.0116%" height="15" fill="rgb(208,100,47)" fg:x="82316" fg:w="10"/><text x="95.7409%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.01%)</title><rect x="95.4909%" y="149" width="0.0116%" height="15" fill="rgb(232,26,8)" fg:x="82316" fg:w="10"/><text x="95.7409%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="95.4909%" y="133" width="0.0116%" height="15" fill="rgb(216,166,38)" fg:x="82316" fg:w="10"/><text x="95.7409%" y="143.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="95.4909%" y="117" width="0.0116%" height="15" fill="rgb(251,202,51)" fg:x="82316" fg:w="10"/><text x="95.7409%" y="127.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="95.4909%" y="101" width="0.0116%" height="15" fill="rgb(254,216,34)" fg:x="82316" fg:w="10"/><text x="95.7409%" y="111.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="95.4909%" y="85" width="0.0116%" height="15" fill="rgb(251,32,27)" fg:x="82316" fg:w="10"/><text x="95.7409%" y="95.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="95.4909%" y="69" width="0.0116%" height="15" fill="rgb(208,127,28)" fg:x="82316" fg:w="10"/><text x="95.7409%" y="79.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="95.4909%" y="53" width="0.0116%" height="15" fill="rgb(224,137,22)" fg:x="82316" fg:w="10"/><text x="95.7409%" y="63.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="95.4920%" y="37" width="0.0104%" height="15" fill="rgb(254,70,32)" fg:x="82317" fg:w="9"/><text x="95.7420%" y="47.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (89 samples, 0.10%)</title><rect x="95.4004%" y="293" width="0.1032%" height="15" fill="rgb(229,75,37)" fg:x="82238" fg:w="89"/><text x="95.6504%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (90 samples, 0.10%)</title><rect x="95.4004%" y="309" width="0.1044%" height="15" fill="rgb(252,64,23)" fg:x="82238" fg:w="90"/><text x="95.6504%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (93 samples, 0.11%)</title><rect x="95.3992%" y="325" width="0.1079%" height="15" fill="rgb(232,162,48)" fg:x="82237" fg:w="93"/><text x="95.6492%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (100 samples, 0.12%)</title><rect x="95.3992%" y="341" width="0.1160%" height="15" fill="rgb(246,160,12)" fg:x="82237" fg:w="100"/><text x="95.6492%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (105 samples, 0.12%)</title><rect x="95.3981%" y="357" width="0.1218%" height="15" fill="rgb(247,166,0)" fg:x="82236" fg:w="105"/><text x="95.6481%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="95.5245%" y="213" width="0.0116%" height="15" fill="rgb(249,219,21)" fg:x="82345" fg:w="10"/><text x="95.7745%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="95.5257%" y="197" width="0.0104%" height="15" fill="rgb(205,209,3)" fg:x="82346" fg:w="9"/><text x="95.7757%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="95.5210%" y="245" width="0.0209%" height="15" fill="rgb(243,44,1)" fg:x="82342" fg:w="18"/><text x="95.7710%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="95.5222%" y="229" width="0.0197%" height="15" fill="rgb(206,159,16)" fg:x="82343" fg:w="17"/><text x="95.7722%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.02%)</title><rect x="95.5210%" y="277" width="0.0220%" height="15" fill="rgb(244,77,30)" fg:x="82342" fg:w="19"/><text x="95.7710%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="95.5210%" y="261" width="0.0220%" height="15" fill="rgb(218,69,12)" fg:x="82342" fg:w="19"/><text x="95.7710%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (22 samples, 0.03%)</title><rect x="95.5199%" y="309" width="0.0255%" height="15" fill="rgb(212,87,7)" fg:x="82341" fg:w="22"/><text x="95.7699%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="95.5199%" y="293" width="0.0255%" height="15" fill="rgb(245,114,25)" fg:x="82341" fg:w="22"/><text x="95.7699%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (128 samples, 0.15%)</title><rect x="95.3981%" y="373" width="0.1485%" height="15" fill="rgb(210,61,42)" fg:x="82236" fg:w="128"/><text x="95.6481%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (23 samples, 0.03%)</title><rect x="95.5199%" y="357" width="0.0267%" height="15" fill="rgb(211,52,33)" fg:x="82341" fg:w="23"/><text x="95.7699%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (23 samples, 0.03%)</title><rect x="95.5199%" y="341" width="0.0267%" height="15" fill="rgb(234,58,33)" fg:x="82341" fg:w="23"/><text x="95.7699%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="95.5199%" y="325" width="0.0267%" height="15" fill="rgb(220,115,36)" fg:x="82341" fg:w="23"/><text x="95.7699%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (130 samples, 0.15%)</title><rect x="95.3981%" y="421" width="0.1508%" height="15" fill="rgb(243,153,54)" fg:x="82236" fg:w="130"/><text x="95.6481%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (130 samples, 0.15%)</title><rect x="95.3981%" y="405" width="0.1508%" height="15" fill="rgb(251,47,18)" fg:x="82236" fg:w="130"/><text x="95.6481%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (130 samples, 0.15%)</title><rect x="95.3981%" y="389" width="0.1508%" height="15" fill="rgb(242,102,42)" fg:x="82236" fg:w="130"/><text x="95.6481%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (3,319 samples, 3.85%)</title><rect x="91.8448%" y="437" width="3.8502%" height="15" fill="rgb(234,31,38)" fg:x="79173" fg:w="3319"/><text x="92.0948%" y="447.50">cpu_..</text></g><g><title>libsystem_m.dylib`exp (126 samples, 0.15%)</title><rect x="95.5489%" y="421" width="0.1462%" height="15" fill="rgb(221,117,51)" fg:x="82366" fg:w="126"/><text x="95.7989%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (3,531 samples, 4.10%)</title><rect x="91.7799%" y="453" width="4.0961%" height="15" fill="rgb(212,20,18)" fg:x="79117" fg:w="3531"/><text x="92.0299%" y="463.50">cpu_..</text></g><g><title>libsystem_m.dylib`exp (156 samples, 0.18%)</title><rect x="95.6950%" y="437" width="0.1810%" height="15" fill="rgb(245,133,36)" fg:x="82492" fg:w="156"/><text x="95.9450%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (17 samples, 0.02%)</title><rect x="95.8853%" y="341" width="0.0197%" height="15" fill="rgb(212,6,19)" fg:x="82656" fg:w="17"/><text x="96.1353%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (9 samples, 0.01%)</title><rect x="95.8946%" y="325" width="0.0104%" height="15" fill="rgb(218,1,36)" fg:x="82664" fg:w="9"/><text x="96.1446%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (19 samples, 0.02%)</title><rect x="95.8841%" y="357" width="0.0220%" height="15" fill="rgb(246,84,54)" fg:x="82655" fg:w="19"/><text x="96.1341%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.02%)</title><rect x="95.8841%" y="405" width="0.0244%" height="15" fill="rgb(242,110,6)" fg:x="82655" fg:w="21"/><text x="96.1341%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.02%)</title><rect x="95.8841%" y="389" width="0.0244%" height="15" fill="rgb(214,47,5)" fg:x="82655" fg:w="21"/><text x="96.1341%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (21 samples, 0.02%)</title><rect x="95.8841%" y="373" width="0.0244%" height="15" fill="rgb(218,159,25)" fg:x="82655" fg:w="21"/><text x="96.1341%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (26 samples, 0.03%)</title><rect x="95.9085%" y="325" width="0.0302%" height="15" fill="rgb(215,211,28)" fg:x="82676" fg:w="26"/><text x="96.1585%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (16 samples, 0.02%)</title><rect x="95.9201%" y="309" width="0.0186%" height="15" fill="rgb(238,59,32)" fg:x="82686" fg:w="16"/><text x="96.1701%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (28 samples, 0.03%)</title><rect x="95.9085%" y="341" width="0.0325%" height="15" fill="rgb(226,82,3)" fg:x="82676" fg:w="28"/><text x="96.1585%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (62 samples, 0.07%)</title><rect x="95.8760%" y="453" width="0.0719%" height="15" fill="rgb(240,164,32)" fg:x="82648" fg:w="62"/><text x="96.1260%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (62 samples, 0.07%)</title><rect x="95.8760%" y="437" width="0.0719%" height="15" fill="rgb(232,46,7)" fg:x="82648" fg:w="62"/><text x="96.1260%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (55 samples, 0.06%)</title><rect x="95.8841%" y="421" width="0.0638%" height="15" fill="rgb(229,129,53)" fg:x="82655" fg:w="55"/><text x="96.1341%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (34 samples, 0.04%)</title><rect x="95.9085%" y="405" width="0.0394%" height="15" fill="rgb(234,188,29)" fg:x="82676" fg:w="34"/><text x="96.1585%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.04%)</title><rect x="95.9085%" y="389" width="0.0394%" height="15" fill="rgb(246,141,4)" fg:x="82676" fg:w="34"/><text x="96.1585%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.04%)</title><rect x="95.9085%" y="373" width="0.0394%" height="15" fill="rgb(229,23,39)" fg:x="82676" fg:w="34"/><text x="96.1585%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (34 samples, 0.04%)</title><rect x="95.9085%" y="357" width="0.0394%" height="15" fill="rgb(206,12,3)" fg:x="82676" fg:w="34"/><text x="96.1585%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (54 samples, 0.06%)</title><rect x="95.9932%" y="213" width="0.0626%" height="15" fill="rgb(252,226,20)" fg:x="82749" fg:w="54"/><text x="96.2432%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (49 samples, 0.06%)</title><rect x="95.9990%" y="197" width="0.0568%" height="15" fill="rgb(216,123,35)" fg:x="82754" fg:w="49"/><text x="96.2490%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (24 samples, 0.03%)</title><rect x="96.0280%" y="181" width="0.0278%" height="15" fill="rgb(212,68,40)" fg:x="82779" fg:w="24"/><text x="96.2780%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 0.08%)</title><rect x="95.9932%" y="229" width="0.0789%" height="15" fill="rgb(254,125,32)" fg:x="82749" fg:w="68"/><text x="96.2432%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (70 samples, 0.08%)</title><rect x="95.9932%" y="245" width="0.0812%" height="15" fill="rgb(253,97,22)" fg:x="82749" fg:w="70"/><text x="96.2432%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (143 samples, 0.17%)</title><rect x="95.9700%" y="261" width="0.1659%" height="15" fill="rgb(241,101,14)" fg:x="82729" fg:w="143"/><text x="96.2200%" y="271.50"></text></g><g><title>libsystem_m.dylib`exp (52 samples, 0.06%)</title><rect x="96.0755%" y="245" width="0.0603%" height="15" fill="rgb(238,103,29)" fg:x="82820" fg:w="52"/><text x="96.3255%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.01%)</title><rect x="96.1359%" y="261" width="0.0116%" height="15" fill="rgb(233,195,47)" fg:x="82872" fg:w="10"/><text x="96.3859%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.01%)</title><rect x="96.1359%" y="245" width="0.0116%" height="15" fill="rgb(246,218,30)" fg:x="82872" fg:w="10"/><text x="96.3859%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="96.1359%" y="229" width="0.0116%" height="15" fill="rgb(219,145,47)" fg:x="82872" fg:w="10"/><text x="96.3859%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="96.1359%" y="213" width="0.0116%" height="15" fill="rgb(243,12,26)" fg:x="82872" fg:w="10"/><text x="96.3859%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (157 samples, 0.18%)</title><rect x="95.9677%" y="277" width="0.1821%" height="15" fill="rgb(214,87,16)" fg:x="82727" fg:w="157"/><text x="96.2177%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (173 samples, 0.20%)</title><rect x="95.9619%" y="293" width="0.2007%" height="15" fill="rgb(208,99,42)" fg:x="82722" fg:w="173"/><text x="96.2119%" y="303.50"></text></g><g><title>libsystem_m.dylib`exp (11 samples, 0.01%)</title><rect x="96.1498%" y="277" width="0.0128%" height="15" fill="rgb(253,99,2)" fg:x="82884" fg:w="11"/><text x="96.3998%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (12 samples, 0.01%)</title><rect x="96.1660%" y="37" width="0.0139%" height="15" fill="rgb(220,168,23)" fg:x="82898" fg:w="12"/><text x="96.4160%" y="47.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (17 samples, 0.02%)</title><rect x="96.1625%" y="53" width="0.0197%" height="15" fill="rgb(242,38,24)" fg:x="82895" fg:w="17"/><text x="96.4125%" y="63.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="96.1625%" y="197" width="0.0267%" height="15" fill="rgb(225,182,9)" fg:x="82895" fg:w="23"/><text x="96.4125%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="96.1625%" y="181" width="0.0267%" height="15" fill="rgb(243,178,37)" fg:x="82895" fg:w="23"/><text x="96.4125%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="96.1625%" y="165" width="0.0267%" height="15" fill="rgb(232,139,19)" fg:x="82895" fg:w="23"/><text x="96.4125%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="96.1625%" y="149" width="0.0267%" height="15" fill="rgb(225,201,24)" fg:x="82895" fg:w="23"/><text x="96.4125%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="96.1625%" y="133" width="0.0267%" height="15" fill="rgb(221,47,46)" fg:x="82895" fg:w="23"/><text x="96.4125%" y="143.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="96.1625%" y="117" width="0.0267%" height="15" fill="rgb(249,23,13)" fg:x="82895" fg:w="23"/><text x="96.4125%" y="127.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="96.1625%" y="101" width="0.0267%" height="15" fill="rgb(219,9,5)" fg:x="82895" fg:w="23"/><text x="96.4125%" y="111.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (23 samples, 0.03%)</title><rect x="96.1625%" y="85" width="0.0267%" height="15" fill="rgb(254,171,16)" fg:x="82895" fg:w="23"/><text x="96.4125%" y="95.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.03%)</title><rect x="96.1625%" y="69" width="0.0267%" height="15" fill="rgb(230,171,20)" fg:x="82895" fg:w="23"/><text x="96.4125%" y="79.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (202 samples, 0.23%)</title><rect x="95.9595%" y="309" width="0.2343%" height="15" fill="rgb(210,71,41)" fg:x="82720" fg:w="202"/><text x="96.2095%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (27 samples, 0.03%)</title><rect x="96.1625%" y="293" width="0.0313%" height="15" fill="rgb(206,173,20)" fg:x="82895" fg:w="27"/><text x="96.4125%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (27 samples, 0.03%)</title><rect x="96.1625%" y="277" width="0.0313%" height="15" fill="rgb(233,88,34)" fg:x="82895" fg:w="27"/><text x="96.4125%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.03%)</title><rect x="96.1625%" y="261" width="0.0313%" height="15" fill="rgb(223,209,46)" fg:x="82895" fg:w="27"/><text x="96.4125%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (27 samples, 0.03%)</title><rect x="96.1625%" y="245" width="0.0313%" height="15" fill="rgb(250,43,18)" fg:x="82895" fg:w="27"/><text x="96.4125%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.03%)</title><rect x="96.1625%" y="229" width="0.0313%" height="15" fill="rgb(208,13,10)" fg:x="82895" fg:w="27"/><text x="96.4125%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (27 samples, 0.03%)</title><rect x="96.1625%" y="213" width="0.0313%" height="15" fill="rgb(212,200,36)" fg:x="82895" fg:w="27"/><text x="96.4125%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (223 samples, 0.26%)</title><rect x="95.9514%" y="325" width="0.2587%" height="15" fill="rgb(225,90,30)" fg:x="82713" fg:w="223"/><text x="96.2014%" y="335.50"></text></g><g><title>libsystem_m.dylib`exp (14 samples, 0.02%)</title><rect x="96.1939%" y="309" width="0.0162%" height="15" fill="rgb(236,182,39)" fg:x="82922" fg:w="14"/><text x="96.4439%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="96.2113%" y="181" width="0.0128%" height="15" fill="rgb(212,144,35)" fg:x="82937" fg:w="11"/><text x="96.4613%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="96.2113%" y="165" width="0.0128%" height="15" fill="rgb(228,63,44)" fg:x="82937" fg:w="11"/><text x="96.4613%" y="175.50"></text></g><g><title>libsystem_m.dylib`exp (9 samples, 0.01%)</title><rect x="96.2136%" y="149" width="0.0104%" height="15" fill="rgb(228,109,6)" fg:x="82939" fg:w="9"/><text x="96.4636%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="96.2101%" y="213" width="0.0186%" height="15" fill="rgb(238,117,24)" fg:x="82936" fg:w="16"/><text x="96.4601%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="96.2101%" y="197" width="0.0186%" height="15" fill="rgb(242,26,26)" fg:x="82936" fg:w="16"/><text x="96.4601%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="96.2101%" y="261" width="0.0220%" height="15" fill="rgb(221,92,48)" fg:x="82936" fg:w="19"/><text x="96.4601%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.02%)</title><rect x="96.2101%" y="245" width="0.0220%" height="15" fill="rgb(209,209,32)" fg:x="82936" fg:w="19"/><text x="96.4601%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="96.2101%" y="229" width="0.0220%" height="15" fill="rgb(221,70,22)" fg:x="82936" fg:w="19"/><text x="96.4601%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (247 samples, 0.29%)</title><rect x="95.9503%" y="341" width="0.2865%" height="15" fill="rgb(248,145,5)" fg:x="82712" fg:w="247"/><text x="96.2003%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (23 samples, 0.03%)</title><rect x="96.2101%" y="325" width="0.0267%" height="15" fill="rgb(226,116,26)" fg:x="82936" fg:w="23"/><text x="96.4601%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (23 samples, 0.03%)</title><rect x="96.2101%" y="309" width="0.0267%" height="15" fill="rgb(244,5,17)" fg:x="82936" fg:w="23"/><text x="96.4601%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="96.2101%" y="293" width="0.0267%" height="15" fill="rgb(252,159,33)" fg:x="82936" fg:w="23"/><text x="96.4601%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="96.2101%" y="277" width="0.0267%" height="15" fill="rgb(206,71,0)" fg:x="82936" fg:w="23"/><text x="96.4601%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (253 samples, 0.29%)</title><rect x="95.9479%" y="357" width="0.2935%" height="15" fill="rgb(233,118,54)" fg:x="82710" fg:w="253"/><text x="96.1979%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (9 samples, 0.01%)</title><rect x="96.2449%" y="101" width="0.0104%" height="15" fill="rgb(234,83,48)" fg:x="82966" fg:w="9"/><text x="96.4949%" y="111.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.01%)</title><rect x="96.2438%" y="149" width="0.0139%" height="15" fill="rgb(228,3,54)" fg:x="82965" fg:w="12"/><text x="96.4938%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.01%)</title><rect x="96.2438%" y="133" width="0.0139%" height="15" fill="rgb(226,155,13)" fg:x="82965" fg:w="12"/><text x="96.4938%" y="143.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (12 samples, 0.01%)</title><rect x="96.2438%" y="117" width="0.0139%" height="15" fill="rgb(241,28,37)" fg:x="82965" fg:w="12"/><text x="96.4938%" y="127.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="96.2426%" y="181" width="0.0209%" height="15" fill="rgb(233,93,10)" fg:x="82964" fg:w="18"/><text x="96.4926%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="96.2426%" y="165" width="0.0209%" height="15" fill="rgb(225,113,19)" fg:x="82964" fg:w="18"/><text x="96.4926%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.02%)</title><rect x="96.2426%" y="197" width="0.0244%" height="15" fill="rgb(241,2,18)" fg:x="82964" fg:w="21"/><text x="96.4926%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (22 samples, 0.03%)</title><rect x="96.2426%" y="213" width="0.0255%" height="15" fill="rgb(228,207,21)" fg:x="82964" fg:w="22"/><text x="96.4926%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.03%)</title><rect x="96.2414%" y="229" width="0.0278%" height="15" fill="rgb(213,211,35)" fg:x="82963" fg:w="24"/><text x="96.4914%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.03%)</title><rect x="96.2414%" y="261" width="0.0302%" height="15" fill="rgb(209,83,10)" fg:x="82963" fg:w="26"/><text x="96.4914%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (26 samples, 0.03%)</title><rect x="96.2414%" y="245" width="0.0302%" height="15" fill="rgb(209,164,1)" fg:x="82963" fg:w="26"/><text x="96.4914%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.05%)</title><rect x="96.2414%" y="293" width="0.0452%" height="15" fill="rgb(213,184,43)" fg:x="82963" fg:w="39"/><text x="96.4914%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (39 samples, 0.05%)</title><rect x="96.2414%" y="277" width="0.0452%" height="15" fill="rgb(231,61,34)" fg:x="82963" fg:w="39"/><text x="96.4914%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (13 samples, 0.02%)</title><rect x="96.2716%" y="261" width="0.0151%" height="15" fill="rgb(235,75,3)" fg:x="82989" fg:w="13"/><text x="96.5216%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (13 samples, 0.02%)</title><rect x="96.2716%" y="245" width="0.0151%" height="15" fill="rgb(220,106,47)" fg:x="82989" fg:w="13"/><text x="96.5216%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="96.2716%" y="229" width="0.0151%" height="15" fill="rgb(210,196,33)" fg:x="82989" fg:w="13"/><text x="96.5216%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (13 samples, 0.02%)</title><rect x="96.2716%" y="213" width="0.0151%" height="15" fill="rgb(229,154,42)" fg:x="82989" fg:w="13"/><text x="96.5216%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (293 samples, 0.34%)</title><rect x="95.9479%" y="373" width="0.3399%" height="15" fill="rgb(228,114,26)" fg:x="82710" fg:w="293"/><text x="96.1979%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (40 samples, 0.05%)</title><rect x="96.2414%" y="357" width="0.0464%" height="15" fill="rgb(208,144,1)" fg:x="82963" fg:w="40"/><text x="96.4914%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (40 samples, 0.05%)</title><rect x="96.2414%" y="341" width="0.0464%" height="15" fill="rgb(239,112,37)" fg:x="82963" fg:w="40"/><text x="96.4914%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.05%)</title><rect x="96.2414%" y="325" width="0.0464%" height="15" fill="rgb(210,96,50)" fg:x="82963" fg:w="40"/><text x="96.4914%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (40 samples, 0.05%)</title><rect x="96.2414%" y="309" width="0.0464%" height="15" fill="rgb(222,178,2)" fg:x="82963" fg:w="40"/><text x="96.4914%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (295 samples, 0.34%)</title><rect x="95.9479%" y="389" width="0.3422%" height="15" fill="rgb(226,74,18)" fg:x="82710" fg:w="295"/><text x="96.1979%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="96.2983%" y="165" width="0.0128%" height="15" fill="rgb(225,67,54)" fg:x="83012" fg:w="11"/><text x="96.5483%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.02%)</title><rect x="96.2983%" y="181" width="0.0151%" height="15" fill="rgb(251,92,32)" fg:x="83012" fg:w="13"/><text x="96.5483%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="96.2971%" y="197" width="0.0197%" height="15" fill="rgb(228,149,22)" fg:x="83011" fg:w="17"/><text x="96.5471%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="96.2971%" y="245" width="0.0209%" height="15" fill="rgb(243,54,13)" fg:x="83011" fg:w="18"/><text x="96.5471%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="96.2971%" y="229" width="0.0209%" height="15" fill="rgb(243,180,28)" fg:x="83011" fg:w="18"/><text x="96.5471%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="96.2971%" y="213" width="0.0209%" height="15" fill="rgb(208,167,24)" fg:x="83011" fg:w="18"/><text x="96.5471%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="96.2948%" y="261" width="0.0290%" height="15" fill="rgb(245,73,45)" fg:x="83009" fg:w="25"/><text x="96.5448%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (27 samples, 0.03%)</title><rect x="96.2936%" y="277" width="0.0313%" height="15" fill="rgb(237,203,48)" fg:x="83008" fg:w="27"/><text x="96.5436%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.04%)</title><rect x="96.2925%" y="293" width="0.0406%" height="15" fill="rgb(211,197,16)" fg:x="83007" fg:w="35"/><text x="96.5425%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (43 samples, 0.05%)</title><rect x="96.2902%" y="309" width="0.0499%" height="15" fill="rgb(243,99,51)" fg:x="83005" fg:w="43"/><text x="96.5402%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.05%)</title><rect x="96.2902%" y="325" width="0.0510%" height="15" fill="rgb(215,123,29)" fg:x="83005" fg:w="44"/><text x="96.5402%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (343 samples, 0.40%)</title><rect x="95.9479%" y="421" width="0.3979%" height="15" fill="rgb(239,186,37)" fg:x="82710" fg:w="343"/><text x="96.1979%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (343 samples, 0.40%)</title><rect x="95.9479%" y="405" width="0.3979%" height="15" fill="rgb(252,136,39)" fg:x="82710" fg:w="343"/><text x="96.1979%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (48 samples, 0.06%)</title><rect x="96.2902%" y="389" width="0.0557%" height="15" fill="rgb(223,213,32)" fg:x="83005" fg:w="48"/><text x="96.5402%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (48 samples, 0.06%)</title><rect x="96.2902%" y="373" width="0.0557%" height="15" fill="rgb(233,115,5)" fg:x="83005" fg:w="48"/><text x="96.5402%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.06%)</title><rect x="96.2902%" y="357" width="0.0557%" height="15" fill="rgb(207,226,44)" fg:x="83005" fg:w="48"/><text x="96.5402%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (48 samples, 0.06%)</title><rect x="96.2902%" y="341" width="0.0557%" height="15" fill="rgb(208,126,0)" fg:x="83005" fg:w="48"/><text x="96.5402%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (344 samples, 0.40%)</title><rect x="95.9479%" y="437" width="0.3991%" height="15" fill="rgb(244,66,21)" fg:x="82710" fg:w="344"/><text x="96.1979%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (345 samples, 0.40%)</title><rect x="95.9479%" y="453" width="0.4002%" height="15" fill="rgb(222,97,12)" fg:x="82710" fg:w="345"/><text x="96.1979%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (3,969 samples, 4.60%)</title><rect x="91.7613%" y="469" width="4.6042%" height="15" fill="rgb(219,213,19)" fg:x="79101" fg:w="3969"/><text x="92.0113%" y="479.50">cpu_b..</text></g><g><title>libsystem_m.dylib`exp (15 samples, 0.02%)</title><rect x="96.3482%" y="453" width="0.0174%" height="15" fill="rgb(252,169,30)" fg:x="83055" fg:w="15"/><text x="96.5982%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (4,043 samples, 4.69%)</title><rect x="91.7451%" y="485" width="4.6901%" height="15" fill="rgb(206,32,51)" fg:x="79087" fg:w="4043"/><text x="91.9951%" y="495.50">cpu_b..</text></g><g><title>libsystem_m.dylib`exp (60 samples, 0.07%)</title><rect x="96.3656%" y="469" width="0.0696%" height="15" fill="rgb(250,172,42)" fg:x="83070" fg:w="60"/><text x="96.6156%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (19 samples, 0.02%)</title><rect x="96.4410%" y="341" width="0.0220%" height="15" fill="rgb(209,34,43)" fg:x="83135" fg:w="19"/><text x="96.6910%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (10 samples, 0.01%)</title><rect x="96.4514%" y="325" width="0.0116%" height="15" fill="rgb(223,11,35)" fg:x="83144" fg:w="10"/><text x="96.7014%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (23 samples, 0.03%)</title><rect x="96.4398%" y="357" width="0.0267%" height="15" fill="rgb(251,219,26)" fg:x="83134" fg:w="23"/><text x="96.6898%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="96.4398%" y="405" width="0.0290%" height="15" fill="rgb(231,119,3)" fg:x="83134" fg:w="25"/><text x="96.6898%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.03%)</title><rect x="96.4398%" y="389" width="0.0290%" height="15" fill="rgb(216,97,11)" fg:x="83134" fg:w="25"/><text x="96.6898%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (25 samples, 0.03%)</title><rect x="96.4398%" y="373" width="0.0290%" height="15" fill="rgb(223,59,9)" fg:x="83134" fg:w="25"/><text x="96.6898%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (18 samples, 0.02%)</title><rect x="96.4688%" y="341" width="0.0209%" height="15" fill="rgb(233,93,31)" fg:x="83159" fg:w="18"/><text x="96.7188%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (17 samples, 0.02%)</title><rect x="96.4700%" y="325" width="0.0197%" height="15" fill="rgb(239,81,33)" fg:x="83160" fg:w="17"/><text x="96.7200%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (9 samples, 0.01%)</title><rect x="96.4792%" y="309" width="0.0104%" height="15" fill="rgb(213,120,34)" fg:x="83168" fg:w="9"/><text x="96.7292%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (56 samples, 0.06%)</title><rect x="96.4352%" y="437" width="0.0650%" height="15" fill="rgb(243,49,53)" fg:x="83130" fg:w="56"/><text x="96.6852%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (52 samples, 0.06%)</title><rect x="96.4398%" y="421" width="0.0603%" height="15" fill="rgb(247,216,33)" fg:x="83134" fg:w="52"/><text x="96.6898%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (27 samples, 0.03%)</title><rect x="96.4688%" y="405" width="0.0313%" height="15" fill="rgb(226,26,14)" fg:x="83159" fg:w="27"/><text x="96.7188%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.03%)</title><rect x="96.4688%" y="389" width="0.0313%" height="15" fill="rgb(215,49,53)" fg:x="83159" fg:w="27"/><text x="96.7188%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.03%)</title><rect x="96.4688%" y="373" width="0.0313%" height="15" fill="rgb(245,162,40)" fg:x="83159" fg:w="27"/><text x="96.7188%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (27 samples, 0.03%)</title><rect x="96.4688%" y="357" width="0.0313%" height="15" fill="rgb(229,68,17)" fg:x="83159" fg:w="27"/><text x="96.7188%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (20 samples, 0.02%)</title><rect x="96.5024%" y="325" width="0.0232%" height="15" fill="rgb(213,182,10)" fg:x="83188" fg:w="20"/><text x="96.7524%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (14 samples, 0.02%)</title><rect x="96.5094%" y="309" width="0.0162%" height="15" fill="rgb(245,125,30)" fg:x="83194" fg:w="14"/><text x="96.7594%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (24 samples, 0.03%)</title><rect x="96.5013%" y="341" width="0.0278%" height="15" fill="rgb(232,202,2)" fg:x="83187" fg:w="24"/><text x="96.7513%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.03%)</title><rect x="96.5001%" y="389" width="0.0336%" height="15" fill="rgb(237,140,51)" fg:x="83186" fg:w="29"/><text x="96.7501%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.03%)</title><rect x="96.5001%" y="373" width="0.0336%" height="15" fill="rgb(236,157,25)" fg:x="83186" fg:w="29"/><text x="96.7501%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (29 samples, 0.03%)</title><rect x="96.5001%" y="357" width="0.0336%" height="15" fill="rgb(219,209,0)" fg:x="83186" fg:w="29"/><text x="96.7501%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (23 samples, 0.03%)</title><rect x="96.5338%" y="325" width="0.0267%" height="15" fill="rgb(240,116,54)" fg:x="83215" fg:w="23"/><text x="96.7838%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (21 samples, 0.02%)</title><rect x="96.5361%" y="309" width="0.0244%" height="15" fill="rgb(216,10,36)" fg:x="83217" fg:w="21"/><text x="96.7861%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (12 samples, 0.01%)</title><rect x="96.5465%" y="293" width="0.0139%" height="15" fill="rgb(222,72,44)" fg:x="83226" fg:w="12"/><text x="96.7965%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (29 samples, 0.03%)</title><rect x="96.5338%" y="389" width="0.0336%" height="15" fill="rgb(232,159,9)" fg:x="83215" fg:w="29"/><text x="96.7838%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.03%)</title><rect x="96.5338%" y="373" width="0.0336%" height="15" fill="rgb(210,39,32)" fg:x="83215" fg:w="29"/><text x="96.7838%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.03%)</title><rect x="96.5338%" y="357" width="0.0336%" height="15" fill="rgb(216,194,45)" fg:x="83215" fg:w="29"/><text x="96.7838%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (29 samples, 0.03%)</title><rect x="96.5338%" y="341" width="0.0336%" height="15" fill="rgb(218,18,35)" fg:x="83215" fg:w="29"/><text x="96.7838%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (63 samples, 0.07%)</title><rect x="96.5001%" y="437" width="0.0731%" height="15" fill="rgb(207,83,51)" fg:x="83186" fg:w="63"/><text x="96.7501%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (63 samples, 0.07%)</title><rect x="96.5001%" y="421" width="0.0731%" height="15" fill="rgb(225,63,43)" fg:x="83186" fg:w="63"/><text x="96.7501%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (63 samples, 0.07%)</title><rect x="96.5001%" y="405" width="0.0731%" height="15" fill="rgb(207,57,36)" fg:x="83186" fg:w="63"/><text x="96.7501%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (123 samples, 0.14%)</title><rect x="96.4352%" y="485" width="0.1427%" height="15" fill="rgb(216,99,33)" fg:x="83130" fg:w="123"/><text x="96.6852%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (123 samples, 0.14%)</title><rect x="96.4352%" y="469" width="0.1427%" height="15" fill="rgb(225,42,16)" fg:x="83130" fg:w="123"/><text x="96.6852%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (123 samples, 0.14%)</title><rect x="96.4352%" y="453" width="0.1427%" height="15" fill="rgb(220,201,45)" fg:x="83130" fg:w="123"/><text x="96.6852%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (25 samples, 0.03%)</title><rect x="96.6416%" y="245" width="0.0290%" height="15" fill="rgb(225,33,4)" fg:x="83308" fg:w="25"/><text x="96.8916%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (22 samples, 0.03%)</title><rect x="96.6451%" y="229" width="0.0255%" height="15" fill="rgb(224,33,50)" fg:x="83311" fg:w="22"/><text x="96.8951%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (9 samples, 0.01%)</title><rect x="96.6602%" y="213" width="0.0104%" height="15" fill="rgb(246,198,51)" fg:x="83324" fg:w="9"/><text x="96.9102%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.03%)</title><rect x="96.6416%" y="261" width="0.0348%" height="15" fill="rgb(205,22,4)" fg:x="83308" fg:w="30"/><text x="96.8916%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (32 samples, 0.04%)</title><rect x="96.6416%" y="277" width="0.0371%" height="15" fill="rgb(206,3,8)" fg:x="83308" fg:w="32"/><text x="96.8916%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (150 samples, 0.17%)</title><rect x="96.6161%" y="293" width="0.1740%" height="15" fill="rgb(251,23,15)" fg:x="83286" fg:w="150"/><text x="96.8661%" y="303.50"></text></g><g><title>libsystem_m.dylib`exp (96 samples, 0.11%)</title><rect x="96.6788%" y="277" width="0.1114%" height="15" fill="rgb(252,88,28)" fg:x="83340" fg:w="96"/><text x="96.9288%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (166 samples, 0.19%)</title><rect x="96.6068%" y="309" width="0.1926%" height="15" fill="rgb(212,127,14)" fg:x="83278" fg:w="166"/><text x="96.8568%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (212 samples, 0.25%)</title><rect x="96.5918%" y="341" width="0.2459%" height="15" fill="rgb(247,145,37)" fg:x="83265" fg:w="212"/><text x="96.8418%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (210 samples, 0.24%)</title><rect x="96.5941%" y="325" width="0.2436%" height="15" fill="rgb(209,117,53)" fg:x="83267" fg:w="210"/><text x="96.8441%" y="335.50"></text></g><g><title>libsystem_m.dylib`exp (33 samples, 0.04%)</title><rect x="96.7994%" y="309" width="0.0383%" height="15" fill="rgb(212,90,42)" fg:x="83444" fg:w="33"/><text x="97.0494%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (226 samples, 0.26%)</title><rect x="96.5894%" y="357" width="0.2622%" height="15" fill="rgb(218,164,37)" fg:x="83263" fg:w="226"/><text x="96.8394%" y="367.50"></text></g><g><title>libsystem_m.dylib`exp (12 samples, 0.01%)</title><rect x="96.8377%" y="341" width="0.0139%" height="15" fill="rgb(246,65,34)" fg:x="83477" fg:w="12"/><text x="97.0877%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="96.8539%" y="261" width="0.0128%" height="15" fill="rgb(231,100,33)" fg:x="83491" fg:w="11"/><text x="97.1039%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="96.8539%" y="245" width="0.0128%" height="15" fill="rgb(228,126,14)" fg:x="83491" fg:w="11"/><text x="97.1039%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="96.8551%" y="229" width="0.0116%" height="15" fill="rgb(215,173,21)" fg:x="83492" fg:w="10"/><text x="97.1051%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="96.8539%" y="277" width="0.0186%" height="15" fill="rgb(210,6,40)" fg:x="83491" fg:w="16"/><text x="97.1039%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="96.8539%" y="293" width="0.0209%" height="15" fill="rgb(212,48,18)" fg:x="83491" fg:w="18"/><text x="97.1039%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="96.8528%" y="309" width="0.0232%" height="15" fill="rgb(230,214,11)" fg:x="83490" fg:w="20"/><text x="97.1028%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (22 samples, 0.03%)</title><rect x="96.8516%" y="357" width="0.0255%" height="15" fill="rgb(254,105,39)" fg:x="83489" fg:w="22"/><text x="97.1016%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (22 samples, 0.03%)</title><rect x="96.8516%" y="341" width="0.0255%" height="15" fill="rgb(245,158,5)" fg:x="83489" fg:w="22"/><text x="97.1016%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.02%)</title><rect x="96.8528%" y="325" width="0.0244%" height="15" fill="rgb(249,208,11)" fg:x="83490" fg:w="21"/><text x="97.1028%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (251 samples, 0.29%)</title><rect x="96.5871%" y="373" width="0.2912%" height="15" fill="rgb(210,39,28)" fg:x="83261" fg:w="251"/><text x="96.8371%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (260 samples, 0.30%)</title><rect x="96.5860%" y="389" width="0.3016%" height="15" fill="rgb(211,56,53)" fg:x="83260" fg:w="260"/><text x="96.8360%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="96.8887%" y="197" width="0.0128%" height="15" fill="rgb(226,201,30)" fg:x="83521" fg:w="11"/><text x="97.1387%" y="207.50"></text></g><g><title>libsystem_m.dylib`exp (9 samples, 0.01%)</title><rect x="96.8911%" y="181" width="0.0104%" height="15" fill="rgb(239,101,34)" fg:x="83523" fg:w="9"/><text x="97.1411%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="96.8887%" y="213" width="0.0139%" height="15" fill="rgb(226,209,5)" fg:x="83521" fg:w="12"/><text x="97.1387%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="96.8876%" y="277" width="0.0209%" height="15" fill="rgb(250,105,47)" fg:x="83520" fg:w="18"/><text x="97.1376%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="96.8876%" y="261" width="0.0209%" height="15" fill="rgb(230,72,3)" fg:x="83520" fg:w="18"/><text x="97.1376%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="96.8876%" y="245" width="0.0209%" height="15" fill="rgb(232,218,39)" fg:x="83520" fg:w="18"/><text x="97.1376%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="96.8876%" y="229" width="0.0209%" height="15" fill="rgb(248,166,6)" fg:x="83520" fg:w="18"/><text x="97.1376%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (21 samples, 0.02%)</title><rect x="96.8876%" y="309" width="0.0244%" height="15" fill="rgb(247,89,20)" fg:x="83520" fg:w="21"/><text x="97.1376%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.02%)</title><rect x="96.8876%" y="293" width="0.0244%" height="15" fill="rgb(248,130,54)" fg:x="83520" fg:w="21"/><text x="97.1376%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="96.8876%" y="325" width="0.0267%" height="15" fill="rgb(234,196,4)" fg:x="83520" fg:w="23"/><text x="97.1376%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (293 samples, 0.34%)</title><rect x="96.5825%" y="405" width="0.3399%" height="15" fill="rgb(250,143,31)" fg:x="83257" fg:w="293"/><text x="96.8325%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (30 samples, 0.03%)</title><rect x="96.8876%" y="389" width="0.0348%" height="15" fill="rgb(211,110,34)" fg:x="83520" fg:w="30"/><text x="97.1376%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (30 samples, 0.03%)</title><rect x="96.8876%" y="373" width="0.0348%" height="15" fill="rgb(215,124,48)" fg:x="83520" fg:w="30"/><text x="97.1376%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.03%)</title><rect x="96.8876%" y="357" width="0.0348%" height="15" fill="rgb(216,46,13)" fg:x="83520" fg:w="30"/><text x="97.1376%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (30 samples, 0.03%)</title><rect x="96.8876%" y="341" width="0.0348%" height="15" fill="rgb(205,184,25)" fg:x="83520" fg:w="30"/><text x="97.1376%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (296 samples, 0.34%)</title><rect x="96.5802%" y="421" width="0.3434%" height="15" fill="rgb(228,1,10)" fg:x="83255" fg:w="296"/><text x="96.8302%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (11 samples, 0.01%)</title><rect x="96.9340%" y="165" width="0.0128%" height="15" fill="rgb(213,116,27)" fg:x="83560" fg:w="11"/><text x="97.1840%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (14 samples, 0.02%)</title><rect x="96.9317%" y="181" width="0.0162%" height="15" fill="rgb(241,95,50)" fg:x="83558" fg:w="14"/><text x="97.1817%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.02%)</title><rect x="96.9317%" y="197" width="0.0186%" height="15" fill="rgb(238,48,32)" fg:x="83558" fg:w="16"/><text x="97.1817%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (17 samples, 0.02%)</title><rect x="96.9317%" y="213" width="0.0197%" height="15" fill="rgb(235,113,49)" fg:x="83558" fg:w="17"/><text x="97.1817%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (27 samples, 0.03%)</title><rect x="96.9293%" y="245" width="0.0313%" height="15" fill="rgb(205,127,43)" fg:x="83556" fg:w="27"/><text x="97.1793%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.03%)</title><rect x="96.9293%" y="229" width="0.0313%" height="15" fill="rgb(250,162,2)" fg:x="83556" fg:w="27"/><text x="97.1793%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.04%)</title><rect x="96.9282%" y="261" width="0.0360%" height="15" fill="rgb(220,13,41)" fg:x="83555" fg:w="31"/><text x="97.1782%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (33 samples, 0.04%)</title><rect x="96.9282%" y="277" width="0.0383%" height="15" fill="rgb(249,221,25)" fg:x="83555" fg:w="33"/><text x="97.1782%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (37 samples, 0.04%)</title><rect x="96.9259%" y="309" width="0.0429%" height="15" fill="rgb(215,208,19)" fg:x="83553" fg:w="37"/><text x="97.1759%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (36 samples, 0.04%)</title><rect x="96.9270%" y="293" width="0.0418%" height="15" fill="rgb(236,175,2)" fg:x="83554" fg:w="36"/><text x="97.1770%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.05%)</title><rect x="96.9247%" y="325" width="0.0464%" height="15" fill="rgb(241,52,2)" fg:x="83552" fg:w="40"/><text x="97.1747%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (46 samples, 0.05%)</title><rect x="96.9247%" y="341" width="0.0534%" height="15" fill="rgb(248,140,14)" fg:x="83552" fg:w="46"/><text x="97.1747%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.06%)</title><rect x="96.9247%" y="357" width="0.0557%" height="15" fill="rgb(253,22,42)" fg:x="83552" fg:w="48"/><text x="97.1747%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (359 samples, 0.42%)</title><rect x="96.5790%" y="437" width="0.4165%" height="15" fill="rgb(234,61,47)" fg:x="83254" fg:w="359"/><text x="96.8290%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (62 samples, 0.07%)</title><rect x="96.9235%" y="421" width="0.0719%" height="15" fill="rgb(208,226,15)" fg:x="83551" fg:w="62"/><text x="97.1735%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (62 samples, 0.07%)</title><rect x="96.9235%" y="405" width="0.0719%" height="15" fill="rgb(217,221,4)" fg:x="83551" fg:w="62"/><text x="97.1735%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (62 samples, 0.07%)</title><rect x="96.9235%" y="389" width="0.0719%" height="15" fill="rgb(212,174,34)" fg:x="83551" fg:w="62"/><text x="97.1735%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (62 samples, 0.07%)</title><rect x="96.9235%" y="373" width="0.0719%" height="15" fill="rgb(253,83,4)" fg:x="83551" fg:w="62"/><text x="97.1735%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (13 samples, 0.02%)</title><rect x="96.9804%" y="357" width="0.0151%" height="15" fill="rgb(250,195,49)" fg:x="83600" fg:w="13"/><text x="97.2304%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (13 samples, 0.02%)</title><rect x="96.9804%" y="341" width="0.0151%" height="15" fill="rgb(241,192,25)" fg:x="83600" fg:w="13"/><text x="97.2304%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="96.9804%" y="325" width="0.0151%" height="15" fill="rgb(208,124,10)" fg:x="83600" fg:w="13"/><text x="97.2304%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (13 samples, 0.02%)</title><rect x="96.9804%" y="309" width="0.0151%" height="15" fill="rgb(222,33,0)" fg:x="83600" fg:w="13"/><text x="97.2304%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (362 samples, 0.42%)</title><rect x="96.5778%" y="469" width="0.4199%" height="15" fill="rgb(234,209,28)" fg:x="83253" fg:w="362"/><text x="96.8278%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (362 samples, 0.42%)</title><rect x="96.5778%" y="453" width="0.4199%" height="15" fill="rgb(224,11,23)" fg:x="83253" fg:w="362"/><text x="96.8278%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (363 samples, 0.42%)</title><rect x="96.5778%" y="485" width="0.4211%" height="15" fill="rgb(232,99,1)" fg:x="83253" fg:w="363"/><text x="96.8278%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (4,538 samples, 5.26%)</title><rect x="91.7369%" y="501" width="5.2643%" height="15" fill="rgb(237,95,45)" fg:x="79080" fg:w="4538"/><text x="91.9869%" y="511.50">cpu_be..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (4,561 samples, 5.29%)</title><rect x="91.7265%" y="517" width="5.2910%" height="15" fill="rgb(208,109,11)" fg:x="79071" fg:w="4561"/><text x="91.9765%" y="527.50">cpu_be..</text></g><g><title>libsystem_m.dylib`exp (14 samples, 0.02%)</title><rect x="97.0013%" y="501" width="0.0162%" height="15" fill="rgb(216,190,48)" fg:x="83618" fg:w="14"/><text x="97.2513%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (10 samples, 0.01%)</title><rect x="97.0349%" y="357" width="0.0116%" height="15" fill="rgb(251,171,36)" fg:x="83647" fg:w="10"/><text x="97.2849%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (10 samples, 0.01%)</title><rect x="97.0349%" y="341" width="0.0116%" height="15" fill="rgb(230,62,22)" fg:x="83647" fg:w="10"/><text x="97.2849%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="97.0349%" y="405" width="0.0128%" height="15" fill="rgb(225,114,35)" fg:x="83647" fg:w="11"/><text x="97.2849%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.01%)</title><rect x="97.0349%" y="389" width="0.0128%" height="15" fill="rgb(215,118,42)" fg:x="83647" fg:w="11"/><text x="97.2849%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.01%)</title><rect x="97.0349%" y="373" width="0.0128%" height="15" fill="rgb(243,119,21)" fg:x="83647" fg:w="11"/><text x="97.2849%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (12 samples, 0.01%)</title><rect x="97.0477%" y="325" width="0.0139%" height="15" fill="rgb(252,177,53)" fg:x="83658" fg:w="12"/><text x="97.2977%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (13 samples, 0.02%)</title><rect x="97.0477%" y="341" width="0.0151%" height="15" fill="rgb(237,209,29)" fg:x="83658" fg:w="13"/><text x="97.2977%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.04%)</title><rect x="97.0279%" y="437" width="0.0360%" height="15" fill="rgb(212,65,23)" fg:x="83641" fg:w="31"/><text x="97.2779%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (25 samples, 0.03%)</title><rect x="97.0349%" y="421" width="0.0290%" height="15" fill="rgb(230,222,46)" fg:x="83647" fg:w="25"/><text x="97.2849%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (14 samples, 0.02%)</title><rect x="97.0477%" y="405" width="0.0162%" height="15" fill="rgb(215,135,32)" fg:x="83658" fg:w="14"/><text x="97.2977%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="97.0477%" y="389" width="0.0162%" height="15" fill="rgb(246,101,22)" fg:x="83658" fg:w="14"/><text x="97.2977%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.02%)</title><rect x="97.0477%" y="373" width="0.0162%" height="15" fill="rgb(206,107,13)" fg:x="83658" fg:w="14"/><text x="97.2977%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (14 samples, 0.02%)</title><rect x="97.0477%" y="357" width="0.0162%" height="15" fill="rgb(250,100,44)" fg:x="83658" fg:w="14"/><text x="97.2977%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (13 samples, 0.02%)</title><rect x="97.0778%" y="309" width="0.0151%" height="15" fill="rgb(231,147,38)" fg:x="83684" fg:w="13"/><text x="97.3278%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (15 samples, 0.02%)</title><rect x="97.0767%" y="325" width="0.0174%" height="15" fill="rgb(229,8,40)" fg:x="83683" fg:w="15"/><text x="97.3267%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (27 samples, 0.03%)</title><rect x="97.0639%" y="437" width="0.0313%" height="15" fill="rgb(221,135,30)" fg:x="83672" fg:w="27"/><text x="97.3139%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.03%)</title><rect x="97.0639%" y="421" width="0.0313%" height="15" fill="rgb(249,193,18)" fg:x="83672" fg:w="27"/><text x="97.3139%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (24 samples, 0.03%)</title><rect x="97.0674%" y="405" width="0.0278%" height="15" fill="rgb(209,133,39)" fg:x="83675" fg:w="24"/><text x="97.3174%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (16 samples, 0.02%)</title><rect x="97.0767%" y="389" width="0.0186%" height="15" fill="rgb(232,100,14)" fg:x="83683" fg:w="16"/><text x="97.3267%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="97.0767%" y="373" width="0.0186%" height="15" fill="rgb(224,185,1)" fg:x="83683" fg:w="16"/><text x="97.3267%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.02%)</title><rect x="97.0767%" y="357" width="0.0186%" height="15" fill="rgb(223,139,8)" fg:x="83683" fg:w="16"/><text x="97.3267%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (16 samples, 0.02%)</title><rect x="97.0767%" y="341" width="0.0186%" height="15" fill="rgb(232,213,38)" fg:x="83683" fg:w="16"/><text x="97.3267%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (69 samples, 0.08%)</title><rect x="97.0268%" y="469" width="0.0800%" height="15" fill="rgb(207,94,22)" fg:x="83640" fg:w="69"/><text x="97.2768%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (68 samples, 0.08%)</title><rect x="97.0279%" y="453" width="0.0789%" height="15" fill="rgb(219,183,54)" fg:x="83641" fg:w="68"/><text x="97.2779%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.01%)</title><rect x="97.0952%" y="437" width="0.0116%" height="15" fill="rgb(216,185,54)" fg:x="83699" fg:w="10"/><text x="97.3452%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.01%)</title><rect x="97.0952%" y="421" width="0.0116%" height="15" fill="rgb(254,217,39)" fg:x="83699" fg:w="10"/><text x="97.3452%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="97.0952%" y="405" width="0.0116%" height="15" fill="rgb(240,178,23)" fg:x="83699" fg:w="10"/><text x="97.3452%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="97.0952%" y="389" width="0.0116%" height="15" fill="rgb(218,11,47)" fg:x="83699" fg:w="10"/><text x="97.3452%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="97.1068%" y="421" width="0.0174%" height="15" fill="rgb(218,51,51)" fg:x="83709" fg:w="15"/><text x="97.3568%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="97.1126%" y="405" width="0.0116%" height="15" fill="rgb(238,126,27)" fg:x="83714" fg:w="10"/><text x="97.3626%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="97.1254%" y="373" width="0.0104%" height="15" fill="rgb(249,202,22)" fg:x="83725" fg:w="9"/><text x="97.3754%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="97.1254%" y="357" width="0.0104%" height="15" fill="rgb(254,195,49)" fg:x="83725" fg:w="9"/><text x="97.3754%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (9 samples, 0.01%)</title><rect x="97.1254%" y="341" width="0.0104%" height="15" fill="rgb(208,123,14)" fg:x="83725" fg:w="9"/><text x="97.3754%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (37 samples, 0.04%)</title><rect x="97.1068%" y="469" width="0.0429%" height="15" fill="rgb(224,200,8)" fg:x="83709" fg:w="37"/><text x="97.3568%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.04%)</title><rect x="97.1068%" y="453" width="0.0429%" height="15" fill="rgb(217,61,36)" fg:x="83709" fg:w="37"/><text x="97.3568%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (37 samples, 0.04%)</title><rect x="97.1068%" y="437" width="0.0429%" height="15" fill="rgb(206,35,45)" fg:x="83709" fg:w="37"/><text x="97.3568%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (22 samples, 0.03%)</title><rect x="97.1242%" y="421" width="0.0255%" height="15" fill="rgb(217,65,33)" fg:x="83724" fg:w="22"/><text x="97.3742%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="97.1242%" y="405" width="0.0255%" height="15" fill="rgb(222,158,48)" fg:x="83724" fg:w="22"/><text x="97.3742%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (21 samples, 0.02%)</title><rect x="97.1254%" y="389" width="0.0244%" height="15" fill="rgb(254,2,54)" fg:x="83725" fg:w="21"/><text x="97.3754%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.01%)</title><rect x="97.1358%" y="373" width="0.0139%" height="15" fill="rgb(250,143,38)" fg:x="83734" fg:w="12"/><text x="97.3858%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="97.1358%" y="357" width="0.0139%" height="15" fill="rgb(248,25,0)" fg:x="83734" fg:w="12"/><text x="97.3858%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.01%)</title><rect x="97.1358%" y="341" width="0.0139%" height="15" fill="rgb(206,152,27)" fg:x="83734" fg:w="12"/><text x="97.3858%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.01%)</title><rect x="97.1358%" y="325" width="0.0139%" height="15" fill="rgb(240,77,30)" fg:x="83734" fg:w="12"/><text x="97.3858%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::compare::estimates::stats (12 samples, 0.01%)</title><rect x="97.1358%" y="309" width="0.0139%" height="15" fill="rgb(231,5,3)" fg:x="83734" fg:w="12"/><text x="97.3858%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (11 samples, 0.01%)</title><rect x="97.1370%" y="293" width="0.0128%" height="15" fill="rgb(207,226,32)" fg:x="83735" fg:w="11"/><text x="97.3870%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="97.1521%" y="373" width="0.0174%" height="15" fill="rgb(222,207,47)" fg:x="83748" fg:w="15"/><text x="97.4021%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (15 samples, 0.02%)</title><rect x="97.1521%" y="357" width="0.0174%" height="15" fill="rgb(229,115,45)" fg:x="83748" fg:w="15"/><text x="97.4021%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="97.1590%" y="341" width="0.0104%" height="15" fill="rgb(224,191,6)" fg:x="83754" fg:w="9"/><text x="97.4090%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="97.1590%" y="325" width="0.0104%" height="15" fill="rgb(230,227,24)" fg:x="83754" fg:w="9"/><text x="97.4090%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (13 samples, 0.02%)</title><rect x="97.1695%" y="373" width="0.0151%" height="15" fill="rgb(228,80,19)" fg:x="83763" fg:w="13"/><text x="97.4195%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="97.1695%" y="357" width="0.0151%" height="15" fill="rgb(247,229,0)" fg:x="83763" fg:w="13"/><text x="97.4195%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (13 samples, 0.02%)</title><rect x="97.1695%" y="341" width="0.0151%" height="15" fill="rgb(237,194,15)" fg:x="83763" fg:w="13"/><text x="97.4195%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.03%)</title><rect x="97.1521%" y="405" width="0.0348%" height="15" fill="rgb(219,203,20)" fg:x="83748" fg:w="30"/><text x="97.4021%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (30 samples, 0.03%)</title><rect x="97.1521%" y="389" width="0.0348%" height="15" fill="rgb(234,128,8)" fg:x="83748" fg:w="30"/><text x="97.4021%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (158 samples, 0.18%)</title><rect x="97.0175%" y="517" width="0.1833%" height="15" fill="rgb(248,202,8)" fg:x="83632" fg:w="158"/><text x="97.2675%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (158 samples, 0.18%)</title><rect x="97.0175%" y="501" width="0.1833%" height="15" fill="rgb(206,104,37)" fg:x="83632" fg:w="158"/><text x="97.2675%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (150 samples, 0.17%)</title><rect x="97.0268%" y="485" width="0.1740%" height="15" fill="rgb(223,8,27)" fg:x="83640" fg:w="150"/><text x="97.2768%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (44 samples, 0.05%)</title><rect x="97.1498%" y="469" width="0.0510%" height="15" fill="rgb(216,217,28)" fg:x="83746" fg:w="44"/><text x="97.3998%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (44 samples, 0.05%)</title><rect x="97.1498%" y="453" width="0.0510%" height="15" fill="rgb(249,199,1)" fg:x="83746" fg:w="44"/><text x="97.3998%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.05%)</title><rect x="97.1498%" y="437" width="0.0510%" height="15" fill="rgb(240,85,17)" fg:x="83746" fg:w="44"/><text x="97.3998%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (42 samples, 0.05%)</title><rect x="97.1521%" y="421" width="0.0487%" height="15" fill="rgb(206,108,45)" fg:x="83748" fg:w="42"/><text x="97.4021%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.01%)</title><rect x="97.1869%" y="405" width="0.0139%" height="15" fill="rgb(245,210,41)" fg:x="83778" fg:w="12"/><text x="97.4369%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="97.1869%" y="389" width="0.0139%" height="15" fill="rgb(206,13,37)" fg:x="83778" fg:w="12"/><text x="97.4369%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="97.1869%" y="373" width="0.0139%" height="15" fill="rgb(250,61,18)" fg:x="83778" fg:w="12"/><text x="97.4369%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (10 samples, 0.01%)</title><rect x="97.2379%" y="325" width="0.0116%" height="15" fill="rgb(235,172,48)" fg:x="83822" fg:w="10"/><text x="97.4879%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (9 samples, 0.01%)</title><rect x="97.2982%" y="277" width="0.0104%" height="15" fill="rgb(249,201,17)" fg:x="83874" fg:w="9"/><text x="97.5482%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (9 samples, 0.01%)</title><rect x="97.2982%" y="261" width="0.0104%" height="15" fill="rgb(219,208,6)" fg:x="83874" fg:w="9"/><text x="97.5482%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="97.2971%" y="293" width="0.0128%" height="15" fill="rgb(248,31,23)" fg:x="83873" fg:w="11"/><text x="97.5471%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (39 samples, 0.05%)</title><rect x="97.2971%" y="309" width="0.0452%" height="15" fill="rgb(245,15,42)" fg:x="83873" fg:w="39"/><text x="97.5471%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (28 samples, 0.03%)</title><rect x="97.3098%" y="293" width="0.0325%" height="15" fill="rgb(222,217,39)" fg:x="83884" fg:w="28"/><text x="97.5598%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (11 samples, 0.01%)</title><rect x="97.3296%" y="277" width="0.0128%" height="15" fill="rgb(210,219,27)" fg:x="83901" fg:w="11"/><text x="97.5796%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (184 samples, 0.21%)</title><rect x="97.2495%" y="325" width="0.2134%" height="15" fill="rgb(252,166,36)" fg:x="83832" fg:w="184"/><text x="97.4995%" y="335.50"></text></g><g><title>libsystem_m.dylib`exp (103 samples, 0.12%)</title><rect x="97.3435%" y="309" width="0.1195%" height="15" fill="rgb(245,132,34)" fg:x="83913" fg:w="103"/><text x="97.5935%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (205 samples, 0.24%)</title><rect x="97.2379%" y="341" width="0.2378%" height="15" fill="rgb(236,54,3)" fg:x="83822" fg:w="205"/><text x="97.4879%" y="351.50"></text></g><g><title>libsystem_m.dylib`exp (9 samples, 0.01%)</title><rect x="97.4653%" y="325" width="0.0104%" height="15" fill="rgb(241,173,43)" fg:x="84018" fg:w="9"/><text x="97.7153%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (257 samples, 0.30%)</title><rect x="97.2228%" y="357" width="0.2981%" height="15" fill="rgb(215,190,9)" fg:x="83809" fg:w="257"/><text x="97.4728%" y="367.50"></text></g><g><title>libsystem_m.dylib`exp (39 samples, 0.05%)</title><rect x="97.4757%" y="341" width="0.0452%" height="15" fill="rgb(242,101,16)" fg:x="84027" fg:w="39"/><text x="97.7257%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (266 samples, 0.31%)</title><rect x="97.2194%" y="373" width="0.3086%" height="15" fill="rgb(223,190,21)" fg:x="83806" fg:w="266"/><text x="97.4694%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (279 samples, 0.32%)</title><rect x="97.2136%" y="389" width="0.3237%" height="15" fill="rgb(215,228,25)" fg:x="83801" fg:w="279"/><text x="97.4636%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="97.5407%" y="277" width="0.0104%" height="15" fill="rgb(225,36,22)" fg:x="84083" fg:w="9"/><text x="97.7907%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="97.5407%" y="261" width="0.0104%" height="15" fill="rgb(251,106,46)" fg:x="84083" fg:w="9"/><text x="97.7907%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="97.5407%" y="245" width="0.0104%" height="15" fill="rgb(208,90,1)" fg:x="84083" fg:w="9"/><text x="97.7907%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="97.5407%" y="229" width="0.0104%" height="15" fill="rgb(243,10,4)" fg:x="84083" fg:w="9"/><text x="97.7907%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="97.5372%" y="293" width="0.0174%" height="15" fill="rgb(212,137,27)" fg:x="84080" fg:w="15"/><text x="97.7872%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="97.5372%" y="325" width="0.0186%" height="15" fill="rgb(231,220,49)" fg:x="84080" fg:w="16"/><text x="97.7872%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="97.5372%" y="309" width="0.0186%" height="15" fill="rgb(237,96,20)" fg:x="84080" fg:w="16"/><text x="97.7872%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (19 samples, 0.02%)</title><rect x="97.5372%" y="389" width="0.0220%" height="15" fill="rgb(239,229,30)" fg:x="84080" fg:w="19"/><text x="97.7872%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (19 samples, 0.02%)</title><rect x="97.5372%" y="373" width="0.0220%" height="15" fill="rgb(219,65,33)" fg:x="84080" fg:w="19"/><text x="97.7872%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="97.5372%" y="357" width="0.0220%" height="15" fill="rgb(243,134,7)" fg:x="84080" fg:w="19"/><text x="97.7872%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (19 samples, 0.02%)</title><rect x="97.5372%" y="341" width="0.0220%" height="15" fill="rgb(216,177,54)" fg:x="84080" fg:w="19"/><text x="97.7872%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (301 samples, 0.35%)</title><rect x="97.2112%" y="405" width="0.3492%" height="15" fill="rgb(211,160,20)" fg:x="83799" fg:w="301"/><text x="97.4612%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (317 samples, 0.37%)</title><rect x="97.2043%" y="421" width="0.3677%" height="15" fill="rgb(239,85,39)" fg:x="83793" fg:w="317"/><text x="97.4543%" y="431.50"></text></g><g><title>libsystem_m.dylib`exp (10 samples, 0.01%)</title><rect x="97.5604%" y="405" width="0.0116%" height="15" fill="rgb(232,125,22)" fg:x="84100" fg:w="10"/><text x="97.8104%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="97.5743%" y="325" width="0.0116%" height="15" fill="rgb(244,57,34)" fg:x="84112" fg:w="10"/><text x="97.8243%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="97.5732%" y="341" width="0.0139%" height="15" fill="rgb(214,203,32)" fg:x="84111" fg:w="12"/><text x="97.8232%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (14 samples, 0.02%)</title><rect x="97.5732%" y="373" width="0.0162%" height="15" fill="rgb(207,58,43)" fg:x="84111" fg:w="14"/><text x="97.8232%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="97.5732%" y="357" width="0.0162%" height="15" fill="rgb(215,193,15)" fg:x="84111" fg:w="14"/><text x="97.8232%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (333 samples, 0.39%)</title><rect x="97.2043%" y="453" width="0.3863%" height="15" fill="rgb(232,15,44)" fg:x="83793" fg:w="333"/><text x="97.4543%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (333 samples, 0.39%)</title><rect x="97.2043%" y="437" width="0.3863%" height="15" fill="rgb(212,3,48)" fg:x="83793" fg:w="333"/><text x="97.4543%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (16 samples, 0.02%)</title><rect x="97.5720%" y="421" width="0.0186%" height="15" fill="rgb(218,128,7)" fg:x="84110" fg:w="16"/><text x="97.8220%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (16 samples, 0.02%)</title><rect x="97.5720%" y="405" width="0.0186%" height="15" fill="rgb(226,216,39)" fg:x="84110" fg:w="16"/><text x="97.8220%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="97.5732%" y="389" width="0.0174%" height="15" fill="rgb(243,47,51)" fg:x="84111" fg:w="15"/><text x="97.8232%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (17 samples, 0.02%)</title><rect x="97.5987%" y="277" width="0.0197%" height="15" fill="rgb(241,183,40)" fg:x="84133" fg:w="17"/><text x="97.8487%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="97.5987%" y="261" width="0.0197%" height="15" fill="rgb(231,217,32)" fg:x="84133" fg:w="17"/><text x="97.8487%" y="271.50"></text></g><g><title>libsystem_m.dylib`exp (9 samples, 0.01%)</title><rect x="97.6080%" y="245" width="0.0104%" height="15" fill="rgb(229,61,38)" fg:x="84141" fg:w="9"/><text x="97.8580%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.02%)</title><rect x="97.5987%" y="293" width="0.0232%" height="15" fill="rgb(225,210,5)" fg:x="84133" fg:w="20"/><text x="97.8487%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (24 samples, 0.03%)</title><rect x="97.5952%" y="309" width="0.0278%" height="15" fill="rgb(231,79,45)" fg:x="84130" fg:w="24"/><text x="97.8452%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (30 samples, 0.03%)</title><rect x="97.5929%" y="341" width="0.0348%" height="15" fill="rgb(224,100,7)" fg:x="84128" fg:w="30"/><text x="97.8429%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.03%)</title><rect x="97.5941%" y="325" width="0.0336%" height="15" fill="rgb(241,198,18)" fg:x="84129" fg:w="29"/><text x="97.8441%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.04%)</title><rect x="97.5929%" y="357" width="0.0394%" height="15" fill="rgb(252,97,53)" fg:x="84128" fg:w="34"/><text x="97.8429%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (42 samples, 0.05%)</title><rect x="97.5929%" y="373" width="0.0487%" height="15" fill="rgb(220,88,7)" fg:x="84128" fg:w="42"/><text x="97.8429%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.05%)</title><rect x="97.5917%" y="389" width="0.0510%" height="15" fill="rgb(213,176,14)" fg:x="84127" fg:w="44"/><text x="97.8417%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (45 samples, 0.05%)</title><rect x="97.5917%" y="405" width="0.0522%" height="15" fill="rgb(246,73,7)" fg:x="84127" fg:w="45"/><text x="97.8417%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (384 samples, 0.45%)</title><rect x="97.2008%" y="501" width="0.4455%" height="15" fill="rgb(245,64,36)" fg:x="83790" fg:w="384"/><text x="97.4508%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (382 samples, 0.44%)</title><rect x="97.2031%" y="485" width="0.4431%" height="15" fill="rgb(245,80,10)" fg:x="83792" fg:w="382"/><text x="97.4531%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (381 samples, 0.44%)</title><rect x="97.2043%" y="469" width="0.4420%" height="15" fill="rgb(232,107,50)" fg:x="83793" fg:w="381"/><text x="97.4543%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (48 samples, 0.06%)</title><rect x="97.5906%" y="453" width="0.0557%" height="15" fill="rgb(253,3,0)" fg:x="84126" fg:w="48"/><text x="97.8406%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (48 samples, 0.06%)</title><rect x="97.5906%" y="437" width="0.0557%" height="15" fill="rgb(212,99,53)" fg:x="84126" fg:w="48"/><text x="97.8406%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.06%)</title><rect x="97.5906%" y="421" width="0.0557%" height="15" fill="rgb(249,111,54)" fg:x="84126" fg:w="48"/><text x="97.8406%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (385 samples, 0.45%)</title><rect x="97.2008%" y="517" width="0.4466%" height="15" fill="rgb(249,55,30)" fg:x="83790" fg:w="385"/><text x="97.4508%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (5,106 samples, 5.92%)</title><rect x="91.7253%" y="533" width="5.9232%" height="15" fill="rgb(237,47,42)" fg:x="79070" fg:w="5106"/><text x="91.9753%" y="543.50">cpu_benc..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (5,117 samples, 5.94%)</title><rect x="91.7195%" y="549" width="5.9360%" height="15" fill="rgb(211,20,18)" fg:x="79065" fg:w="5117"/><text x="91.9695%" y="559.50">cpu_benc..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="97.6555%" y="501" width="0.0209%" height="15" fill="rgb(231,203,46)" fg:x="84182" fg:w="18"/><text x="97.9055%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (13 samples, 0.02%)</title><rect x="97.6613%" y="485" width="0.0151%" height="15" fill="rgb(237,142,3)" fg:x="84187" fg:w="13"/><text x="97.9113%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="97.6660%" y="469" width="0.0104%" height="15" fill="rgb(241,107,1)" fg:x="84191" fg:w="9"/><text x="97.9160%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="97.6660%" y="453" width="0.0104%" height="15" fill="rgb(229,83,13)" fg:x="84191" fg:w="9"/><text x="97.9160%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="97.6660%" y="437" width="0.0104%" height="15" fill="rgb(241,91,40)" fg:x="84191" fg:w="9"/><text x="97.9160%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (21 samples, 0.02%)</title><rect x="97.6764%" y="501" width="0.0244%" height="15" fill="rgb(225,3,45)" fg:x="84200" fg:w="21"/><text x="97.9264%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.02%)</title><rect x="97.6764%" y="485" width="0.0244%" height="15" fill="rgb(244,223,14)" fg:x="84200" fg:w="21"/><text x="97.9264%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="97.6776%" y="469" width="0.0232%" height="15" fill="rgb(224,124,37)" fg:x="84201" fg:w="20"/><text x="97.9276%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="97.7008%" y="405" width="0.0128%" height="15" fill="rgb(251,171,30)" fg:x="84221" fg:w="11"/><text x="97.9508%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="97.7008%" y="389" width="0.0128%" height="15" fill="rgb(236,46,54)" fg:x="84221" fg:w="11"/><text x="97.9508%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="97.7008%" y="437" width="0.0267%" height="15" fill="rgb(245,213,5)" fg:x="84221" fg:w="23"/><text x="97.9508%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="97.7008%" y="421" width="0.0267%" height="15" fill="rgb(230,144,27)" fg:x="84221" fg:w="23"/><text x="97.9508%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.01%)</title><rect x="97.7135%" y="405" width="0.0139%" height="15" fill="rgb(220,86,6)" fg:x="84232" fg:w="12"/><text x="97.9635%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="97.7135%" y="389" width="0.0139%" height="15" fill="rgb(240,20,13)" fg:x="84232" fg:w="12"/><text x="97.9635%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="97.7135%" y="373" width="0.0139%" height="15" fill="rgb(217,89,34)" fg:x="84232" fg:w="12"/><text x="97.9635%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="97.7275%" y="389" width="0.0116%" height="15" fill="rgb(229,13,5)" fg:x="84244" fg:w="10"/><text x="97.9775%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="97.7275%" y="373" width="0.0116%" height="15" fill="rgb(244,67,35)" fg:x="84244" fg:w="10"/><text x="97.9775%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (77 samples, 0.09%)</title><rect x="97.6555%" y="549" width="0.0893%" height="15" fill="rgb(221,40,2)" fg:x="84182" fg:w="77"/><text x="97.9055%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (77 samples, 0.09%)</title><rect x="97.6555%" y="533" width="0.0893%" height="15" fill="rgb(237,157,21)" fg:x="84182" fg:w="77"/><text x="97.9055%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (77 samples, 0.09%)</title><rect x="97.6555%" y="517" width="0.0893%" height="15" fill="rgb(222,94,11)" fg:x="84182" fg:w="77"/><text x="97.9055%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (38 samples, 0.04%)</title><rect x="97.7008%" y="501" width="0.0441%" height="15" fill="rgb(249,113,6)" fg:x="84221" fg:w="38"/><text x="97.9508%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (38 samples, 0.04%)</title><rect x="97.7008%" y="485" width="0.0441%" height="15" fill="rgb(238,137,36)" fg:x="84221" fg:w="38"/><text x="97.9508%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.04%)</title><rect x="97.7008%" y="469" width="0.0441%" height="15" fill="rgb(210,102,26)" fg:x="84221" fg:w="38"/><text x="97.9508%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (38 samples, 0.04%)</title><rect x="97.7008%" y="453" width="0.0441%" height="15" fill="rgb(218,30,30)" fg:x="84221" fg:w="38"/><text x="97.9508%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (15 samples, 0.02%)</title><rect x="97.7275%" y="437" width="0.0174%" height="15" fill="rgb(214,67,26)" fg:x="84244" fg:w="15"/><text x="97.9775%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="97.7275%" y="421" width="0.0174%" height="15" fill="rgb(251,9,53)" fg:x="84244" fg:w="15"/><text x="97.9775%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (15 samples, 0.02%)</title><rect x="97.7275%" y="405" width="0.0174%" height="15" fill="rgb(228,204,25)" fg:x="84244" fg:w="15"/><text x="97.9775%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (22 samples, 0.03%)</title><rect x="97.8063%" y="357" width="0.0255%" height="15" fill="rgb(207,153,8)" fg:x="84312" fg:w="22"/><text x="98.0563%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (64 samples, 0.07%)</title><rect x="97.9096%" y="293" width="0.0742%" height="15" fill="rgb(242,9,16)" fg:x="84401" fg:w="64"/><text x="98.1596%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (38 samples, 0.04%)</title><rect x="97.9397%" y="277" width="0.0441%" height="15" fill="rgb(217,211,10)" fg:x="84427" fg:w="38"/><text x="98.1897%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (70 samples, 0.08%)</title><rect x="97.9073%" y="309" width="0.0812%" height="15" fill="rgb(219,228,52)" fg:x="84399" fg:w="70"/><text x="98.1573%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (84 samples, 0.10%)</title><rect x="97.9061%" y="325" width="0.0974%" height="15" fill="rgb(231,92,29)" fg:x="84398" fg:w="84"/><text x="98.1561%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (109 samples, 0.13%)</title><rect x="97.9061%" y="341" width="0.1264%" height="15" fill="rgb(232,8,23)" fg:x="84398" fg:w="109"/><text x="98.1561%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (25 samples, 0.03%)</title><rect x="98.0035%" y="325" width="0.0290%" height="15" fill="rgb(216,211,34)" fg:x="84482" fg:w="25"/><text x="98.2535%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (18 samples, 0.02%)</title><rect x="98.0117%" y="309" width="0.0209%" height="15" fill="rgb(236,151,0)" fg:x="84489" fg:w="18"/><text x="98.2617%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (386 samples, 0.45%)</title><rect x="97.8319%" y="357" width="0.4478%" height="15" fill="rgb(209,168,3)" fg:x="84334" fg:w="386"/><text x="98.0819%" y="367.50"></text></g><g><title>libsystem_m.dylib`exp (213 samples, 0.25%)</title><rect x="98.0326%" y="341" width="0.2471%" height="15" fill="rgb(208,129,28)" fg:x="84507" fg:w="213"/><text x="98.2826%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (420 samples, 0.49%)</title><rect x="97.8063%" y="373" width="0.4872%" height="15" fill="rgb(229,78,22)" fg:x="84312" fg:w="420"/><text x="98.0563%" y="383.50"></text></g><g><title>libsystem_m.dylib`exp (11 samples, 0.01%)</title><rect x="98.2808%" y="357" width="0.0128%" height="15" fill="rgb(228,187,13)" fg:x="84721" fg:w="11"/><text x="98.5308%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (477 samples, 0.55%)</title><rect x="97.7866%" y="389" width="0.5533%" height="15" fill="rgb(240,119,24)" fg:x="84295" fg:w="477"/><text x="98.0366%" y="399.50"></text></g><g><title>libsystem_m.dylib`exp (40 samples, 0.05%)</title><rect x="98.2936%" y="373" width="0.0464%" height="15" fill="rgb(209,194,42)" fg:x="84732" fg:w="40"/><text x="98.5436%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="98.3446%" y="309" width="0.0128%" height="15" fill="rgb(247,200,46)" fg:x="84776" fg:w="11"/><text x="98.5946%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="98.3446%" y="325" width="0.0139%" height="15" fill="rgb(218,76,16)" fg:x="84776" fg:w="12"/><text x="98.5946%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.02%)</title><rect x="98.3446%" y="389" width="0.0209%" height="15" fill="rgb(225,21,48)" fg:x="84776" fg:w="18"/><text x="98.5946%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.02%)</title><rect x="98.3446%" y="373" width="0.0209%" height="15" fill="rgb(239,223,50)" fg:x="84776" fg:w="18"/><text x="98.5946%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="98.3446%" y="357" width="0.0209%" height="15" fill="rgb(244,45,21)" fg:x="84776" fg:w="18"/><text x="98.5946%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (18 samples, 0.02%)</title><rect x="98.3446%" y="341" width="0.0209%" height="15" fill="rgb(232,33,43)" fg:x="84776" fg:w="18"/><text x="98.5946%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (508 samples, 0.59%)</title><rect x="97.7797%" y="405" width="0.5893%" height="15" fill="rgb(209,8,3)" fg:x="84289" fg:w="508"/><text x="98.0297%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (540 samples, 0.63%)</title><rect x="97.7669%" y="421" width="0.6264%" height="15" fill="rgb(214,25,53)" fg:x="84278" fg:w="540"/><text x="98.0169%" y="431.50"></text></g><g><title>libsystem_m.dylib`exp (21 samples, 0.02%)</title><rect x="98.3690%" y="405" width="0.0244%" height="15" fill="rgb(254,186,54)" fg:x="84797" fg:w="21"/><text x="98.6190%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (16 samples, 0.02%)</title><rect x="98.3933%" y="421" width="0.0186%" height="15" fill="rgb(208,174,49)" fg:x="84818" fg:w="16"/><text x="98.6433%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="98.3933%" y="405" width="0.0186%" height="15" fill="rgb(233,191,51)" fg:x="84818" fg:w="16"/><text x="98.6433%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="98.3991%" y="389" width="0.0128%" height="15" fill="rgb(222,134,10)" fg:x="84823" fg:w="11"/><text x="98.6491%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="98.4130%" y="325" width="0.0162%" height="15" fill="rgb(230,226,20)" fg:x="84835" fg:w="14"/><text x="98.6630%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (14 samples, 0.02%)</title><rect x="98.4130%" y="309" width="0.0162%" height="15" fill="rgb(251,111,25)" fg:x="84835" fg:w="14"/><text x="98.6630%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="98.4130%" y="293" width="0.0162%" height="15" fill="rgb(224,40,46)" fg:x="84835" fg:w="14"/><text x="98.6630%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (14 samples, 0.02%)</title><rect x="98.4130%" y="277" width="0.0162%" height="15" fill="rgb(236,108,47)" fg:x="84835" fg:w="14"/><text x="98.6630%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="98.4130%" y="261" width="0.0162%" height="15" fill="rgb(234,93,0)" fg:x="84835" fg:w="14"/><text x="98.6630%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (17 samples, 0.02%)</title><rect x="98.4130%" y="341" width="0.0197%" height="15" fill="rgb(224,213,32)" fg:x="84835" fg:w="17"/><text x="98.6630%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="98.4130%" y="357" width="0.0209%" height="15" fill="rgb(251,11,48)" fg:x="84835" fg:w="18"/><text x="98.6630%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (24 samples, 0.03%)</title><rect x="98.4130%" y="373" width="0.0278%" height="15" fill="rgb(236,173,5)" fg:x="84835" fg:w="24"/><text x="98.6630%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (26 samples, 0.03%)</title><rect x="98.4119%" y="421" width="0.0302%" height="15" fill="rgb(230,95,12)" fg:x="84834" fg:w="26"/><text x="98.6619%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (26 samples, 0.03%)</title><rect x="98.4119%" y="405" width="0.0302%" height="15" fill="rgb(232,209,1)" fg:x="84834" fg:w="26"/><text x="98.6619%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="98.4130%" y="389" width="0.0290%" height="15" fill="rgb(232,6,1)" fg:x="84835" fg:w="25"/><text x="98.6630%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (587 samples, 0.68%)</title><rect x="97.7623%" y="437" width="0.6810%" height="15" fill="rgb(210,224,50)" fg:x="84274" fg:w="587"/><text x="98.0123%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (615 samples, 0.71%)</title><rect x="97.7553%" y="453" width="0.7134%" height="15" fill="rgb(228,127,35)" fg:x="84268" fg:w="615"/><text x="98.0053%" y="463.50"></text></g><g><title>libsystem_m.dylib`exp (22 samples, 0.03%)</title><rect x="98.4432%" y="437" width="0.0255%" height="15" fill="rgb(245,102,45)" fg:x="84861" fg:w="22"/><text x="98.6932%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (25 samples, 0.03%)</title><rect x="98.4687%" y="453" width="0.0290%" height="15" fill="rgb(214,1,49)" fg:x="84883" fg:w="25"/><text x="98.7187%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="98.4687%" y="437" width="0.0290%" height="15" fill="rgb(226,163,40)" fg:x="84883" fg:w="25"/><text x="98.7187%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (23 samples, 0.03%)</title><rect x="98.4711%" y="421" width="0.0267%" height="15" fill="rgb(239,212,28)" fg:x="84885" fg:w="23"/><text x="98.7211%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (15 samples, 0.02%)</title><rect x="98.4803%" y="405" width="0.0174%" height="15" fill="rgb(220,20,13)" fg:x="84893" fg:w="15"/><text x="98.7303%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="98.4803%" y="389" width="0.0174%" height="15" fill="rgb(210,164,35)" fg:x="84893" fg:w="15"/><text x="98.7303%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (15 samples, 0.02%)</title><rect x="98.4803%" y="373" width="0.0174%" height="15" fill="rgb(248,109,41)" fg:x="84893" fg:w="15"/><text x="98.7303%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="98.5012%" y="261" width="0.0139%" height="15" fill="rgb(238,23,50)" fg:x="84911" fg:w="12"/><text x="98.7512%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (15 samples, 0.02%)</title><rect x="98.5001%" y="277" width="0.0174%" height="15" fill="rgb(211,48,49)" fg:x="84910" fg:w="15"/><text x="98.7501%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.03%)</title><rect x="98.5001%" y="293" width="0.0336%" height="15" fill="rgb(223,36,21)" fg:x="84910" fg:w="29"/><text x="98.7501%" y="303.50"></text></g><g><title>libsystem_m.dylib`exp (14 samples, 0.02%)</title><rect x="98.5175%" y="277" width="0.0162%" height="15" fill="rgb(207,123,46)" fg:x="84925" fg:w="14"/><text x="98.7675%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (32 samples, 0.04%)</title><rect x="98.4989%" y="309" width="0.0371%" height="15" fill="rgb(240,218,32)" fg:x="84909" fg:w="32"/><text x="98.7489%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (34 samples, 0.04%)</title><rect x="98.4989%" y="341" width="0.0394%" height="15" fill="rgb(252,5,43)" fg:x="84909" fg:w="34"/><text x="98.7489%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.04%)</title><rect x="98.4989%" y="325" width="0.0394%" height="15" fill="rgb(252,84,19)" fg:x="84909" fg:w="34"/><text x="98.7489%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.04%)</title><rect x="98.4989%" y="357" width="0.0441%" height="15" fill="rgb(243,152,39)" fg:x="84909" fg:w="38"/><text x="98.7489%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (42 samples, 0.05%)</title><rect x="98.4989%" y="373" width="0.0487%" height="15" fill="rgb(234,160,15)" fg:x="84909" fg:w="42"/><text x="98.7489%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.05%)</title><rect x="98.4989%" y="389" width="0.0510%" height="15" fill="rgb(237,34,20)" fg:x="84909" fg:w="44"/><text x="98.7489%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (54 samples, 0.06%)</title><rect x="98.4989%" y="405" width="0.0626%" height="15" fill="rgb(229,97,13)" fg:x="84909" fg:w="54"/><text x="98.7489%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.01%)</title><rect x="98.5499%" y="389" width="0.0116%" height="15" fill="rgb(234,71,50)" fg:x="84953" fg:w="10"/><text x="98.7999%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.01%)</title><rect x="98.5499%" y="373" width="0.0116%" height="15" fill="rgb(253,155,4)" fg:x="84953" fg:w="10"/><text x="98.7999%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="98.5499%" y="357" width="0.0116%" height="15" fill="rgb(222,185,37)" fg:x="84953" fg:w="10"/><text x="98.7999%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="98.5499%" y="341" width="0.0116%" height="15" fill="rgb(251,177,13)" fg:x="84953" fg:w="10"/><text x="98.7999%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="98.5499%" y="325" width="0.0116%" height="15" fill="rgb(250,179,40)" fg:x="84953" fg:w="10"/><text x="98.7999%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (57 samples, 0.07%)</title><rect x="98.4977%" y="437" width="0.0661%" height="15" fill="rgb(242,44,2)" fg:x="84908" fg:w="57"/><text x="98.7477%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (57 samples, 0.07%)</title><rect x="98.4977%" y="421" width="0.0661%" height="15" fill="rgb(216,177,13)" fg:x="84908" fg:w="57"/><text x="98.7477%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (58 samples, 0.07%)</title><rect x="98.4977%" y="453" width="0.0673%" height="15" fill="rgb(216,106,43)" fg:x="84908" fg:w="58"/><text x="98.7477%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (703 samples, 0.82%)</title><rect x="97.7518%" y="469" width="0.8155%" height="15" fill="rgb(216,183,2)" fg:x="84265" fg:w="703"/><text x="98.0018%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (716 samples, 0.83%)</title><rect x="97.7472%" y="485" width="0.8306%" height="15" fill="rgb(249,75,3)" fg:x="84261" fg:w="716"/><text x="97.9972%" y="495.50"></text></g><g><title>libsystem_m.dylib`exp (9 samples, 0.01%)</title><rect x="98.5673%" y="469" width="0.0104%" height="15" fill="rgb(219,67,39)" fg:x="84968" fg:w="9"/><text x="98.8173%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (16 samples, 0.02%)</title><rect x="98.5778%" y="485" width="0.0186%" height="15" fill="rgb(253,228,2)" fg:x="84977" fg:w="16"/><text x="98.8278%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="98.5778%" y="469" width="0.0186%" height="15" fill="rgb(235,138,27)" fg:x="84977" fg:w="16"/><text x="98.8278%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (15 samples, 0.02%)</title><rect x="98.5789%" y="453" width="0.0174%" height="15" fill="rgb(236,97,51)" fg:x="84978" fg:w="15"/><text x="98.8289%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (9 samples, 0.01%)</title><rect x="98.6381%" y="229" width="0.0104%" height="15" fill="rgb(240,80,30)" fg:x="85029" fg:w="9"/><text x="98.8881%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (10 samples, 0.01%)</title><rect x="98.6381%" y="245" width="0.0116%" height="15" fill="rgb(230,178,19)" fg:x="85029" fg:w="10"/><text x="98.8881%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="98.6381%" y="261" width="0.0128%" height="15" fill="rgb(210,190,27)" fg:x="85029" fg:w="11"/><text x="98.8881%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.01%)</title><rect x="98.6381%" y="277" width="0.0139%" height="15" fill="rgb(222,107,31)" fg:x="85029" fg:w="12"/><text x="98.8881%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (60 samples, 0.07%)</title><rect x="98.6219%" y="293" width="0.0696%" height="15" fill="rgb(216,127,34)" fg:x="85015" fg:w="60"/><text x="98.8719%" y="303.50"></text></g><g><title>libsystem_m.dylib`exp (34 samples, 0.04%)</title><rect x="98.6520%" y="277" width="0.0394%" height="15" fill="rgb(234,116,52)" fg:x="85041" fg:w="34"/><text x="98.9020%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (68 samples, 0.08%)</title><rect x="98.6172%" y="309" width="0.0789%" height="15" fill="rgb(222,124,15)" fg:x="85011" fg:w="68"/><text x="98.8672%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (85 samples, 0.10%)</title><rect x="98.6149%" y="325" width="0.0986%" height="15" fill="rgb(231,179,28)" fg:x="85009" fg:w="85"/><text x="98.8649%" y="335.50"></text></g><g><title>libsystem_m.dylib`exp (15 samples, 0.02%)</title><rect x="98.6961%" y="309" width="0.0174%" height="15" fill="rgb(226,93,45)" fg:x="85079" fg:w="15"/><text x="98.9461%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (94 samples, 0.11%)</title><rect x="98.6149%" y="341" width="0.1090%" height="15" fill="rgb(215,8,51)" fg:x="85009" fg:w="94"/><text x="98.8649%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (108 samples, 0.13%)</title><rect x="98.6103%" y="357" width="0.1253%" height="15" fill="rgb(223,106,5)" fg:x="85005" fg:w="108"/><text x="98.8603%" y="367.50"></text></g><g><title>libsystem_m.dylib`exp (10 samples, 0.01%)</title><rect x="98.7239%" y="341" width="0.0116%" height="15" fill="rgb(250,191,5)" fg:x="85103" fg:w="10"/><text x="98.9739%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11 samples, 0.01%)</title><rect x="98.7355%" y="357" width="0.0128%" height="15" fill="rgb(242,132,44)" fg:x="85113" fg:w="11"/><text x="98.9855%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.7355%" y="341" width="0.0128%" height="15" fill="rgb(251,152,29)" fg:x="85113" fg:w="11"/><text x="98.9855%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="98.7355%" y="325" width="0.0128%" height="15" fill="rgb(218,179,5)" fg:x="85113" fg:w="11"/><text x="98.9855%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.7483%" y="197" width="0.0104%" height="15" fill="rgb(227,67,19)" fg:x="85124" fg:w="9"/><text x="98.9983%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="98.7483%" y="181" width="0.0104%" height="15" fill="rgb(233,119,31)" fg:x="85124" fg:w="9"/><text x="98.9983%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (12 samples, 0.01%)</title><rect x="98.7483%" y="293" width="0.0139%" height="15" fill="rgb(241,120,22)" fg:x="85124" fg:w="12"/><text x="98.9983%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (12 samples, 0.01%)</title><rect x="98.7483%" y="277" width="0.0139%" height="15" fill="rgb(224,102,30)" fg:x="85124" fg:w="12"/><text x="98.9983%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="98.7483%" y="261" width="0.0139%" height="15" fill="rgb(210,164,37)" fg:x="85124" fg:w="12"/><text x="98.9983%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="98.7483%" y="245" width="0.0139%" height="15" fill="rgb(226,191,16)" fg:x="85124" fg:w="12"/><text x="98.9983%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="98.7483%" y="229" width="0.0139%" height="15" fill="rgb(214,40,45)" fg:x="85124" fg:w="12"/><text x="98.9983%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="98.7483%" y="213" width="0.0139%" height="15" fill="rgb(244,29,26)" fg:x="85124" fg:w="12"/><text x="98.9983%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (13 samples, 0.02%)</title><rect x="98.7483%" y="357" width="0.0151%" height="15" fill="rgb(216,16,5)" fg:x="85124" fg:w="13"/><text x="98.9983%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (13 samples, 0.02%)</title><rect x="98.7483%" y="341" width="0.0151%" height="15" fill="rgb(249,76,35)" fg:x="85124" fg:w="13"/><text x="98.9983%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="98.7483%" y="325" width="0.0151%" height="15" fill="rgb(207,11,44)" fg:x="85124" fg:w="13"/><text x="98.9983%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (13 samples, 0.02%)</title><rect x="98.7483%" y="309" width="0.0151%" height="15" fill="rgb(228,190,49)" fg:x="85124" fg:w="13"/><text x="98.9983%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (136 samples, 0.16%)</title><rect x="98.6068%" y="373" width="0.1578%" height="15" fill="rgb(214,173,12)" fg:x="85002" fg:w="136"/><text x="98.8568%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (147 samples, 0.17%)</title><rect x="98.6021%" y="389" width="0.1705%" height="15" fill="rgb(218,26,35)" fg:x="84998" fg:w="147"/><text x="98.8521%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="98.7773%" y="325" width="0.0116%" height="15" fill="rgb(220,200,19)" fg:x="85149" fg:w="10"/><text x="99.0273%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (15 samples, 0.02%)</title><rect x="98.7773%" y="389" width="0.0174%" height="15" fill="rgb(239,95,49)" fg:x="85149" fg:w="15"/><text x="99.0273%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (15 samples, 0.02%)</title><rect x="98.7773%" y="373" width="0.0174%" height="15" fill="rgb(235,85,53)" fg:x="85149" fg:w="15"/><text x="99.0273%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="98.7773%" y="357" width="0.0174%" height="15" fill="rgb(233,133,31)" fg:x="85149" fg:w="15"/><text x="99.0273%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (15 samples, 0.02%)</title><rect x="98.7773%" y="341" width="0.0174%" height="15" fill="rgb(218,25,20)" fg:x="85149" fg:w="15"/><text x="99.0273%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (167 samples, 0.19%)</title><rect x="98.6021%" y="405" width="0.1937%" height="15" fill="rgb(252,210,38)" fg:x="84998" fg:w="167"/><text x="98.8521%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (172 samples, 0.20%)</title><rect x="98.5998%" y="421" width="0.1995%" height="15" fill="rgb(242,134,21)" fg:x="84996" fg:w="172"/><text x="98.8498%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (15 samples, 0.02%)</title><rect x="98.8191%" y="245" width="0.0174%" height="15" fill="rgb(213,28,48)" fg:x="85185" fg:w="15"/><text x="99.0691%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="98.8191%" y="229" width="0.0174%" height="15" fill="rgb(250,196,2)" fg:x="85185" fg:w="15"/><text x="99.0691%" y="239.50"></text></g><g><title>libsystem_m.dylib`exp (12 samples, 0.01%)</title><rect x="98.8225%" y="213" width="0.0139%" height="15" fill="rgb(227,5,17)" fg:x="85188" fg:w="12"/><text x="99.0725%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (28 samples, 0.03%)</title><rect x="98.8144%" y="261" width="0.0325%" height="15" fill="rgb(221,226,24)" fg:x="85181" fg:w="28"/><text x="99.0644%" y="271.50"></text></g><g><title>libsystem_m.dylib`exp (9 samples, 0.01%)</title><rect x="98.8365%" y="245" width="0.0104%" height="15" fill="rgb(211,5,48)" fg:x="85200" fg:w="9"/><text x="99.0865%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (31 samples, 0.04%)</title><rect x="98.8144%" y="277" width="0.0360%" height="15" fill="rgb(219,150,6)" fg:x="85181" fg:w="31"/><text x="99.0644%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (36 samples, 0.04%)</title><rect x="98.8109%" y="293" width="0.0418%" height="15" fill="rgb(251,46,16)" fg:x="85178" fg:w="36"/><text x="99.0609%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (38 samples, 0.04%)</title><rect x="98.8109%" y="309" width="0.0441%" height="15" fill="rgb(220,204,40)" fg:x="85178" fg:w="38"/><text x="99.0609%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (43 samples, 0.05%)</title><rect x="98.8098%" y="325" width="0.0499%" height="15" fill="rgb(211,85,2)" fg:x="85177" fg:w="43"/><text x="99.0598%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (44 samples, 0.05%)</title><rect x="98.8098%" y="341" width="0.0510%" height="15" fill="rgb(229,17,7)" fg:x="85177" fg:w="44"/><text x="99.0598%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.06%)</title><rect x="98.8075%" y="357" width="0.0568%" height="15" fill="rgb(239,72,28)" fg:x="85175" fg:w="49"/><text x="99.0575%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (57 samples, 0.07%)</title><rect x="98.8075%" y="373" width="0.0661%" height="15" fill="rgb(230,47,54)" fg:x="85175" fg:w="57"/><text x="99.0575%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (239 samples, 0.28%)</title><rect x="98.5987%" y="437" width="0.2773%" height="15" fill="rgb(214,50,8)" fg:x="84995" fg:w="239"/><text x="98.8487%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (60 samples, 0.07%)</title><rect x="98.8063%" y="421" width="0.0696%" height="15" fill="rgb(216,198,43)" fg:x="85174" fg:w="60"/><text x="99.0563%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (60 samples, 0.07%)</title><rect x="98.8063%" y="405" width="0.0696%" height="15" fill="rgb(234,20,35)" fg:x="85174" fg:w="60"/><text x="99.0563%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (60 samples, 0.07%)</title><rect x="98.8063%" y="389" width="0.0696%" height="15" fill="rgb(254,45,19)" fg:x="85174" fg:w="60"/><text x="99.0563%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (242 samples, 0.28%)</title><rect x="98.5963%" y="485" width="0.2807%" height="15" fill="rgb(219,14,44)" fg:x="84993" fg:w="242"/><text x="98.8463%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (242 samples, 0.28%)</title><rect x="98.5963%" y="469" width="0.2807%" height="15" fill="rgb(217,220,26)" fg:x="84993" fg:w="242"/><text x="98.8463%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (241 samples, 0.28%)</title><rect x="98.5975%" y="453" width="0.2796%" height="15" fill="rgb(213,158,28)" fg:x="84994" fg:w="241"/><text x="98.8475%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (977 samples, 1.13%)</title><rect x="97.7460%" y="501" width="1.1334%" height="15" fill="rgb(252,51,52)" fg:x="84260" fg:w="977"/><text x="97.9960%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (983 samples, 1.14%)</title><rect x="97.7460%" y="517" width="1.1403%" height="15" fill="rgb(246,89,16)" fg:x="84260" fg:w="983"/><text x="97.9960%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (985 samples, 1.14%)</title><rect x="97.7449%" y="533" width="1.1427%" height="15" fill="rgb(216,158,49)" fg:x="84259" fg:w="985"/><text x="97.9949%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (6,182 samples, 7.17%)</title><rect x="91.7195%" y="565" width="7.1714%" height="15" fill="rgb(236,107,19)" fg:x="79065" fg:w="6182"/><text x="91.9695%" y="575.50">cpu_bench_..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (988 samples, 1.15%)</title><rect x="97.7449%" y="549" width="1.1461%" height="15" fill="rgb(228,185,30)" fg:x="84259" fg:w="988"/><text x="97.9949%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (6,186 samples, 7.18%)</title><rect x="91.7161%" y="581" width="7.1761%" height="15" fill="rgb(246,134,8)" fg:x="79062" fg:w="6186"/><text x="91.9661%" y="591.50">cpu_bench_..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (18 samples, 0.02%)</title><rect x="98.9014%" y="517" width="0.0209%" height="15" fill="rgb(214,143,50)" fg:x="85256" fg:w="18"/><text x="99.1514%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (13 samples, 0.02%)</title><rect x="98.9072%" y="501" width="0.0151%" height="15" fill="rgb(228,75,8)" fg:x="85261" fg:w="13"/><text x="99.1572%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (13 samples, 0.02%)</title><rect x="98.9072%" y="485" width="0.0151%" height="15" fill="rgb(207,175,4)" fg:x="85261" fg:w="13"/><text x="99.1572%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (26 samples, 0.03%)</title><rect x="98.8945%" y="549" width="0.0302%" height="15" fill="rgb(205,108,24)" fg:x="85250" fg:w="26"/><text x="99.1445%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="98.9014%" y="533" width="0.0232%" height="15" fill="rgb(244,120,49)" fg:x="85256" fg:w="20"/><text x="99.1514%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (31 samples, 0.04%)</title><rect x="98.8921%" y="581" width="0.0360%" height="15" fill="rgb(223,47,38)" fg:x="85248" fg:w="31"/><text x="99.1421%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (29 samples, 0.03%)</title><rect x="98.8945%" y="565" width="0.0336%" height="15" fill="rgb(229,179,11)" fg:x="85250" fg:w="29"/><text x="99.1445%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`DYLD-STUB$$exp (23 samples, 0.03%)</title><rect x="98.9281%" y="405" width="0.0267%" height="15" fill="rgb(231,122,1)" fg:x="85279" fg:w="23"/><text x="99.1781%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (27 samples, 0.03%)</title><rect x="99.0511%" y="341" width="0.0313%" height="15" fill="rgb(245,119,9)" fg:x="85385" fg:w="27"/><text x="99.3011%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (19 samples, 0.02%)</title><rect x="99.0604%" y="325" width="0.0220%" height="15" fill="rgb(241,163,25)" fg:x="85393" fg:w="19"/><text x="99.3104%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (30 samples, 0.03%)</title><rect x="99.0488%" y="357" width="0.0348%" height="15" fill="rgb(217,214,3)" fg:x="85383" fg:w="30"/><text x="99.2988%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.04%)</title><rect x="99.0476%" y="373" width="0.0406%" height="15" fill="rgb(240,86,28)" fg:x="85382" fg:w="35"/><text x="99.2976%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (54 samples, 0.06%)</title><rect x="99.0476%" y="389" width="0.0626%" height="15" fill="rgb(215,47,9)" fg:x="85382" fg:w="54"/><text x="99.2976%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (19 samples, 0.02%)</title><rect x="99.0882%" y="373" width="0.0220%" height="15" fill="rgb(252,25,45)" fg:x="85417" fg:w="19"/><text x="99.3382%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`oorandom::Rand64::rand_range (9 samples, 0.01%)</title><rect x="99.0998%" y="357" width="0.0104%" height="15" fill="rgb(251,164,9)" fg:x="85427" fg:w="9"/><text x="99.3498%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (374 samples, 0.43%)</title><rect x="98.9548%" y="405" width="0.4339%" height="15" fill="rgb(233,194,0)" fg:x="85302" fg:w="374"/><text x="99.2048%" y="415.50"></text></g><g><title>libsystem_m.dylib`exp (240 samples, 0.28%)</title><rect x="99.1102%" y="389" width="0.2784%" height="15" fill="rgb(249,111,24)" fg:x="85436" fg:w="240"/><text x="99.3602%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (26 samples, 0.03%)</title><rect x="99.4084%" y="149" width="0.0302%" height="15" fill="rgb(250,223,3)" fg:x="85693" fg:w="26"/><text x="99.6584%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (14 samples, 0.02%)</title><rect x="99.4223%" y="133" width="0.0162%" height="15" fill="rgb(236,178,37)" fg:x="85705" fg:w="14"/><text x="99.6723%" y="143.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (29 samples, 0.03%)</title><rect x="99.4061%" y="165" width="0.0336%" height="15" fill="rgb(241,158,50)" fg:x="85691" fg:w="29"/><text x="99.6561%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (32 samples, 0.04%)</title><rect x="99.4061%" y="197" width="0.0371%" height="15" fill="rgb(213,121,41)" fg:x="85691" fg:w="32"/><text x="99.6561%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (32 samples, 0.04%)</title><rect x="99.4061%" y="181" width="0.0371%" height="15" fill="rgb(240,92,3)" fg:x="85691" fg:w="32"/><text x="99.6561%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (39 samples, 0.05%)</title><rect x="99.4037%" y="229" width="0.0452%" height="15" fill="rgb(205,123,3)" fg:x="85689" fg:w="39"/><text x="99.6537%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.04%)</title><rect x="99.4049%" y="213" width="0.0441%" height="15" fill="rgb(205,97,47)" fg:x="85690" fg:w="38"/><text x="99.6549%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (46 samples, 0.05%)</title><rect x="99.4014%" y="261" width="0.0534%" height="15" fill="rgb(247,152,14)" fg:x="85687" fg:w="46"/><text x="99.6514%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.05%)</title><rect x="99.4014%" y="245" width="0.0534%" height="15" fill="rgb(248,195,53)" fg:x="85687" fg:w="46"/><text x="99.6514%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (62 samples, 0.07%)</title><rect x="99.3979%" y="309" width="0.0719%" height="15" fill="rgb(226,201,16)" fg:x="85684" fg:w="62"/><text x="99.6479%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (62 samples, 0.07%)</title><rect x="99.3979%" y="293" width="0.0719%" height="15" fill="rgb(205,98,0)" fg:x="85684" fg:w="62"/><text x="99.6479%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (61 samples, 0.07%)</title><rect x="99.3991%" y="277" width="0.0708%" height="15" fill="rgb(214,191,48)" fg:x="85685" fg:w="61"/><text x="99.6491%" y="287.50"></text></g><g><title>libsystem_m.dylib`exp (13 samples, 0.02%)</title><rect x="99.4548%" y="261" width="0.0151%" height="15" fill="rgb(237,112,39)" fg:x="85733" fg:w="13"/><text x="99.7048%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (71 samples, 0.08%)</title><rect x="99.3979%" y="341" width="0.0824%" height="15" fill="rgb(247,203,27)" fg:x="85684" fg:w="71"/><text x="99.6479%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (71 samples, 0.08%)</title><rect x="99.3979%" y="325" width="0.0824%" height="15" fill="rgb(235,124,28)" fg:x="85684" fg:w="71"/><text x="99.6479%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.01%)</title><rect x="99.4699%" y="309" width="0.0104%" height="15" fill="rgb(208,207,46)" fg:x="85746" fg:w="9"/><text x="99.7199%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.01%)</title><rect x="99.4699%" y="293" width="0.0104%" height="15" fill="rgb(234,176,4)" fg:x="85746" fg:w="9"/><text x="99.7199%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="99.4699%" y="277" width="0.0104%" height="15" fill="rgb(230,133,28)" fg:x="85746" fg:w="9"/><text x="99.7199%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="99.4699%" y="261" width="0.0104%" height="15" fill="rgb(211,137,40)" fg:x="85746" fg:w="9"/><text x="99.7199%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.4803%" y="213" width="0.0128%" height="15" fill="rgb(254,35,13)" fg:x="85755" fg:w="11"/><text x="99.7303%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (83 samples, 0.10%)</title><rect x="99.3979%" y="405" width="0.0963%" height="15" fill="rgb(225,49,51)" fg:x="85684" fg:w="83"/><text x="99.6479%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (83 samples, 0.10%)</title><rect x="99.3979%" y="389" width="0.0963%" height="15" fill="rgb(251,10,15)" fg:x="85684" fg:w="83"/><text x="99.6479%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (83 samples, 0.10%)</title><rect x="99.3979%" y="373" width="0.0963%" height="15" fill="rgb(228,207,15)" fg:x="85684" fg:w="83"/><text x="99.6479%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (83 samples, 0.10%)</title><rect x="99.3979%" y="357" width="0.0963%" height="15" fill="rgb(241,99,19)" fg:x="85684" fg:w="83"/><text x="99.6479%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (12 samples, 0.01%)</title><rect x="99.4803%" y="341" width="0.0139%" height="15" fill="rgb(207,104,49)" fg:x="85755" fg:w="12"/><text x="99.7303%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (12 samples, 0.01%)</title><rect x="99.4803%" y="325" width="0.0139%" height="15" fill="rgb(234,99,18)" fg:x="85755" fg:w="12"/><text x="99.7303%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="99.4803%" y="309" width="0.0139%" height="15" fill="rgb(213,191,49)" fg:x="85755" fg:w="12"/><text x="99.7303%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="99.4803%" y="293" width="0.0139%" height="15" fill="rgb(210,226,19)" fg:x="85755" fg:w="12"/><text x="99.7303%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="99.4803%" y="277" width="0.0139%" height="15" fill="rgb(229,97,18)" fg:x="85755" fg:w="12"/><text x="99.7303%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="99.4803%" y="261" width="0.0139%" height="15" fill="rgb(211,167,15)" fg:x="85755" fg:w="12"/><text x="99.7303%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="99.4803%" y="245" width="0.0139%" height="15" fill="rgb(210,169,34)" fg:x="85755" fg:w="12"/><text x="99.7303%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="99.4803%" y="229" width="0.0139%" height="15" fill="rgb(241,121,31)" fg:x="85755" fg:w="12"/><text x="99.7303%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (503 samples, 0.58%)</title><rect x="98.9281%" y="437" width="0.5835%" height="15" fill="rgb(232,40,11)" fg:x="85279" fg:w="503"/><text x="99.1781%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (503 samples, 0.58%)</title><rect x="98.9281%" y="421" width="0.5835%" height="15" fill="rgb(205,86,26)" fg:x="85279" fg:w="503"/><text x="99.1781%" y="431.50"></text></g><g><title>libsystem_m.dylib`exp (15 samples, 0.02%)</title><rect x="99.4942%" y="405" width="0.0174%" height="15" fill="rgb(231,126,28)" fg:x="85767" fg:w="15"/><text x="99.7442%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.01%)</title><rect x="99.5116%" y="437" width="0.0139%" height="15" fill="rgb(219,221,18)" fg:x="85782" fg:w="12"/><text x="99.7616%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="99.5116%" y="421" width="0.0139%" height="15" fill="rgb(211,40,0)" fg:x="85782" fg:w="12"/><text x="99.7616%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="99.5116%" y="405" width="0.0139%" height="15" fill="rgb(239,85,43)" fg:x="85782" fg:w="12"/><text x="99.7616%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (9 samples, 0.01%)</title><rect x="99.5627%" y="181" width="0.0104%" height="15" fill="rgb(231,55,21)" fg:x="85826" fg:w="9"/><text x="99.8127%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (12 samples, 0.01%)</title><rect x="99.5615%" y="197" width="0.0139%" height="15" fill="rgb(225,184,43)" fg:x="85825" fg:w="12"/><text x="99.8115%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.02%)</title><rect x="99.5615%" y="229" width="0.0151%" height="15" fill="rgb(251,158,41)" fg:x="85825" fg:w="13"/><text x="99.8115%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.02%)</title><rect x="99.5615%" y="213" width="0.0151%" height="15" fill="rgb(234,159,37)" fg:x="85825" fg:w="13"/><text x="99.8115%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (82 samples, 0.10%)</title><rect x="99.5429%" y="245" width="0.0951%" height="15" fill="rgb(216,204,22)" fg:x="85809" fg:w="82"/><text x="99.7929%" y="255.50"></text></g><g><title>libsystem_m.dylib`exp (53 samples, 0.06%)</title><rect x="99.5766%" y="229" width="0.0615%" height="15" fill="rgb(214,17,3)" fg:x="85838" fg:w="53"/><text x="99.8266%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (90 samples, 0.10%)</title><rect x="99.5348%" y="261" width="0.1044%" height="15" fill="rgb(212,111,17)" fg:x="85802" fg:w="90"/><text x="99.7848%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (98 samples, 0.11%)</title><rect x="99.5325%" y="277" width="0.1137%" height="15" fill="rgb(221,157,24)" fg:x="85800" fg:w="98"/><text x="99.7825%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (99 samples, 0.11%)</title><rect x="99.5325%" y="293" width="0.1148%" height="15" fill="rgb(252,16,13)" fg:x="85800" fg:w="99"/><text x="99.7825%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (107 samples, 0.12%)</title><rect x="99.5313%" y="309" width="0.1241%" height="15" fill="rgb(221,62,2)" fg:x="85799" fg:w="107"/><text x="99.7813%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (116 samples, 0.13%)</title><rect x="99.5267%" y="341" width="0.1346%" height="15" fill="rgb(247,87,22)" fg:x="85795" fg:w="116"/><text x="99.7767%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (114 samples, 0.13%)</title><rect x="99.5290%" y="325" width="0.1322%" height="15" fill="rgb(215,73,9)" fg:x="85797" fg:w="114"/><text x="99.7790%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11 samples, 0.01%)</title><rect x="99.6613%" y="341" width="0.0128%" height="15" fill="rgb(207,175,33)" fg:x="85911" fg:w="11"/><text x="99.9113%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.6613%" y="325" width="0.0128%" height="15" fill="rgb(243,129,54)" fg:x="85911" fg:w="11"/><text x="99.9113%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="99.6624%" y="309" width="0.0116%" height="15" fill="rgb(227,119,45)" fg:x="85912" fg:w="10"/><text x="99.9124%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="99.6740%" y="213" width="0.0116%" height="15" fill="rgb(205,109,36)" fg:x="85922" fg:w="10"/><text x="99.9240%" y="223.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="99.6740%" y="229" width="0.0139%" height="15" fill="rgb(205,6,39)" fg:x="85922" fg:w="12"/><text x="99.9240%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="99.6740%" y="277" width="0.0151%" height="15" fill="rgb(221,32,16)" fg:x="85922" fg:w="13"/><text x="99.9240%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (13 samples, 0.02%)</title><rect x="99.6740%" y="261" width="0.0151%" height="15" fill="rgb(228,144,50)" fg:x="85922" fg:w="13"/><text x="99.9240%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="99.6740%" y="245" width="0.0151%" height="15" fill="rgb(229,201,53)" fg:x="85922" fg:w="13"/><text x="99.9240%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (17 samples, 0.02%)</title><rect x="99.6740%" y="293" width="0.0197%" height="15" fill="rgb(249,153,27)" fg:x="85922" fg:w="17"/><text x="99.9240%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (145 samples, 0.17%)</title><rect x="99.5267%" y="357" width="0.1682%" height="15" fill="rgb(227,106,25)" fg:x="85795" fg:w="145"/><text x="99.7767%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.02%)</title><rect x="99.6740%" y="341" width="0.0209%" height="15" fill="rgb(230,65,29)" fg:x="85922" fg:w="18"/><text x="99.9240%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.02%)</title><rect x="99.6740%" y="325" width="0.0209%" height="15" fill="rgb(221,57,46)" fg:x="85922" fg:w="18"/><text x="99.9240%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="99.6740%" y="309" width="0.0209%" height="15" fill="rgb(229,161,17)" fg:x="85922" fg:w="18"/><text x="99.9240%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (146 samples, 0.17%)</title><rect x="99.5267%" y="373" width="0.1694%" height="15" fill="rgb(222,213,11)" fg:x="85795" fg:w="146"/><text x="99.7767%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (16 samples, 0.02%)</title><rect x="99.6961%" y="373" width="0.0186%" height="15" fill="rgb(235,35,13)" fg:x="85941" fg:w="16"/><text x="99.9461%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="99.6961%" y="357" width="0.0186%" height="15" fill="rgb(233,158,34)" fg:x="85941" fg:w="16"/><text x="99.9461%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (16 samples, 0.02%)</title><rect x="99.6961%" y="341" width="0.0186%" height="15" fill="rgb(215,151,48)" fg:x="85941" fg:w="16"/><text x="99.9461%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11 samples, 0.01%)</title><rect x="99.7019%" y="325" width="0.0128%" height="15" fill="rgb(229,84,14)" fg:x="85946" fg:w="11"/><text x="99.9519%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.7019%" y="309" width="0.0128%" height="15" fill="rgb(229,68,14)" fg:x="85946" fg:w="11"/><text x="99.9519%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="99.7019%" y="293" width="0.0128%" height="15" fill="rgb(243,106,26)" fg:x="85946" fg:w="11"/><text x="99.9519%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (24 samples, 0.03%)</title><rect x="99.7204%" y="117" width="0.0278%" height="15" fill="rgb(206,45,38)" fg:x="85962" fg:w="24"/><text x="99.9704%" y="127.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::slice::quicksort::recurse (11 samples, 0.01%)</title><rect x="99.7355%" y="101" width="0.0128%" height="15" fill="rgb(226,6,15)" fg:x="85975" fg:w="11"/><text x="99.9855%" y="111.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`criterion::analysis::estimates::stats (27 samples, 0.03%)</title><rect x="99.7181%" y="133" width="0.0313%" height="15" fill="rgb(232,22,54)" fg:x="85960" fg:w="27"/><text x="99.9681%" y="143.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (29 samples, 0.03%)</title><rect x="99.7181%" y="197" width="0.0336%" height="15" fill="rgb(229,222,32)" fg:x="85960" fg:w="29"/><text x="99.9681%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.03%)</title><rect x="99.7181%" y="181" width="0.0336%" height="15" fill="rgb(228,62,29)" fg:x="85960" fg:w="29"/><text x="99.9681%" y="191.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (29 samples, 0.03%)</title><rect x="99.7181%" y="165" width="0.0336%" height="15" fill="rgb(251,103,34)" fg:x="85960" fg:w="29"/><text x="99.9681%" y="175.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (29 samples, 0.03%)</title><rect x="99.7181%" y="149" width="0.0336%" height="15" fill="rgb(233,12,30)" fg:x="85960" fg:w="29"/><text x="99.9681%" y="159.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (41 samples, 0.05%)</title><rect x="99.7158%" y="229" width="0.0476%" height="15" fill="rgb(238,52,0)" fg:x="85958" fg:w="41"/><text x="99.9658%" y="239.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.05%)</title><rect x="99.7169%" y="213" width="0.0464%" height="15" fill="rgb(223,98,5)" fg:x="85959" fg:w="40"/><text x="99.9669%" y="223.50"></text></g><g><title>libsystem_m.dylib`exp (10 samples, 0.01%)</title><rect x="99.7517%" y="197" width="0.0116%" height="15" fill="rgb(228,75,37)" fg:x="85989" fg:w="10"/><text x="100.0017%" y="207.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (44 samples, 0.05%)</title><rect x="99.7146%" y="261" width="0.0510%" height="15" fill="rgb(205,115,49)" fg:x="85957" fg:w="44"/><text x="99.9646%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.05%)</title><rect x="99.7146%" y="245" width="0.0510%" height="15" fill="rgb(250,154,43)" fg:x="85957" fg:w="44"/><text x="99.9646%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.05%)</title><rect x="99.7146%" y="309" width="0.0534%" height="15" fill="rgb(226,43,29)" fg:x="85957" fg:w="46"/><text x="99.9646%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (46 samples, 0.05%)</title><rect x="99.7146%" y="293" width="0.0534%" height="15" fill="rgb(249,228,39)" fg:x="85957" fg:w="46"/><text x="99.9646%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.05%)</title><rect x="99.7146%" y="277" width="0.0534%" height="15" fill="rgb(216,79,43)" fg:x="85957" fg:w="46"/><text x="99.9646%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (729 samples, 0.85%)</title><rect x="98.9281%" y="469" width="0.8457%" height="15" fill="rgb(228,95,12)" fg:x="85279" fg:w="729"/><text x="99.1781%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (729 samples, 0.85%)</title><rect x="98.9281%" y="453" width="0.8457%" height="15" fill="rgb(249,221,15)" fg:x="85279" fg:w="729"/><text x="99.1781%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (214 samples, 0.25%)</title><rect x="99.5255%" y="437" width="0.2483%" height="15" fill="rgb(233,34,13)" fg:x="85794" fg:w="214"/><text x="99.7755%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (214 samples, 0.25%)</title><rect x="99.5255%" y="421" width="0.2483%" height="15" fill="rgb(214,103,39)" fg:x="85794" fg:w="214"/><text x="99.7755%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (214 samples, 0.25%)</title><rect x="99.5255%" y="405" width="0.2483%" height="15" fill="rgb(251,126,39)" fg:x="85794" fg:w="214"/><text x="99.7755%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (213 samples, 0.25%)</title><rect x="99.5267%" y="389" width="0.2471%" height="15" fill="rgb(214,216,36)" fg:x="85795" fg:w="213"/><text x="99.7767%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (51 samples, 0.06%)</title><rect x="99.7146%" y="373" width="0.0592%" height="15" fill="rgb(220,221,8)" fg:x="85957" fg:w="51"/><text x="99.9646%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (51 samples, 0.06%)</title><rect x="99.7146%" y="357" width="0.0592%" height="15" fill="rgb(240,216,3)" fg:x="85957" fg:w="51"/><text x="99.9646%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (51 samples, 0.06%)</title><rect x="99.7146%" y="341" width="0.0592%" height="15" fill="rgb(232,218,17)" fg:x="85957" fg:w="51"/><text x="99.9646%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (51 samples, 0.06%)</title><rect x="99.7146%" y="325" width="0.0592%" height="15" fill="rgb(229,163,45)" fg:x="85957" fg:w="51"/><text x="99.9646%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (20 samples, 0.02%)</title><rect x="99.7738%" y="469" width="0.0232%" height="15" fill="rgb(231,110,42)" fg:x="86008" fg:w="20"/><text x="100.0238%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.02%)</title><rect x="99.7738%" y="453" width="0.0232%" height="15" fill="rgb(208,170,48)" fg:x="86008" fg:w="20"/><text x="100.0238%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (20 samples, 0.02%)</title><rect x="99.7738%" y="437" width="0.0232%" height="15" fill="rgb(239,116,25)" fg:x="86008" fg:w="20"/><text x="100.0238%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.01%)</title><rect x="99.7831%" y="421" width="0.0139%" height="15" fill="rgb(219,200,50)" fg:x="86016" fg:w="12"/><text x="100.0331%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.01%)</title><rect x="99.7831%" y="405" width="0.0139%" height="15" fill="rgb(245,200,0)" fg:x="86016" fg:w="12"/><text x="100.0331%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (12 samples, 0.01%)</title><rect x="99.7831%" y="389" width="0.0139%" height="15" fill="rgb(245,119,33)" fg:x="86016" fg:w="12"/><text x="100.0331%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.01%)</title><rect x="99.8051%" y="261" width="0.0116%" height="15" fill="rgb(231,125,12)" fg:x="86035" fg:w="10"/><text x="100.0551%" y="271.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::impls::_&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (10 samples, 0.01%)</title><rect x="99.8051%" y="245" width="0.0116%" height="15" fill="rgb(216,96,41)" fg:x="86035" fg:w="10"/><text x="100.0551%" y="255.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="99.8040%" y="277" width="0.0162%" height="15" fill="rgb(248,43,45)" fg:x="86034" fg:w="14"/><text x="100.0540%" y="287.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (17 samples, 0.02%)</title><rect x="99.8028%" y="293" width="0.0197%" height="15" fill="rgb(217,222,7)" fg:x="86033" fg:w="17"/><text x="100.0528%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (31 samples, 0.04%)</title><rect x="99.7993%" y="325" width="0.0360%" height="15" fill="rgb(233,28,6)" fg:x="86030" fg:w="31"/><text x="100.0493%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.04%)</title><rect x="99.7993%" y="309" width="0.0360%" height="15" fill="rgb(231,218,15)" fg:x="86030" fg:w="31"/><text x="100.0493%" y="319.50"></text></g><g><title>libsystem_m.dylib`exp (11 samples, 0.01%)</title><rect x="99.8225%" y="293" width="0.0128%" height="15" fill="rgb(226,171,48)" fg:x="86050" fg:w="11"/><text x="100.0725%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (37 samples, 0.04%)</title><rect x="99.7982%" y="357" width="0.0429%" height="15" fill="rgb(235,201,9)" fg:x="86029" fg:w="37"/><text x="100.0482%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.04%)</title><rect x="99.7982%" y="341" width="0.0429%" height="15" fill="rgb(217,80,15)" fg:x="86029" fg:w="37"/><text x="100.0482%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (42 samples, 0.05%)</title><rect x="99.7982%" y="373" width="0.0487%" height="15" fill="rgb(219,152,8)" fg:x="86029" fg:w="42"/><text x="100.0482%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (43 samples, 0.05%)</title><rect x="99.7982%" y="389" width="0.0499%" height="15" fill="rgb(243,107,38)" fg:x="86029" fg:w="43"/><text x="100.0482%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.05%)</title><rect x="99.7982%" y="405" width="0.0510%" height="15" fill="rgb(231,17,5)" fg:x="86029" fg:w="44"/><text x="100.0482%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="99.8492%" y="293" width="0.0104%" height="15" fill="rgb(209,25,54)" fg:x="86073" fg:w="9"/><text x="100.0992%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="99.8492%" y="341" width="0.0116%" height="15" fill="rgb(219,0,2)" fg:x="86073" fg:w="10"/><text x="100.0992%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (10 samples, 0.01%)</title><rect x="99.8492%" y="325" width="0.0116%" height="15" fill="rgb(246,9,5)" fg:x="86073" fg:w="10"/><text x="100.0992%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="99.8492%" y="309" width="0.0116%" height="15" fill="rgb(226,159,4)" fg:x="86073" fg:w="10"/><text x="100.0992%" y="319.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.01%)</title><rect x="99.8492%" y="405" width="0.0128%" height="15" fill="rgb(219,175,34)" fg:x="86073" fg:w="11"/><text x="100.0992%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11 samples, 0.01%)</title><rect x="99.8492%" y="389" width="0.0128%" height="15" fill="rgb(236,10,46)" fg:x="86073" fg:w="11"/><text x="100.0992%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.8492%" y="373" width="0.0128%" height="15" fill="rgb(240,211,16)" fg:x="86073" fg:w="11"/><text x="100.0992%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (11 samples, 0.01%)</title><rect x="99.8492%" y="357" width="0.0128%" height="15" fill="rgb(205,3,43)" fg:x="86073" fg:w="11"/><text x="100.0992%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (806 samples, 0.94%)</title><rect x="98.9281%" y="501" width="0.9350%" height="15" fill="rgb(245,7,22)" fg:x="85279" fg:w="806"/><text x="99.1781%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (806 samples, 0.94%)</title><rect x="98.9281%" y="485" width="0.9350%" height="15" fill="rgb(239,132,32)" fg:x="85279" fg:w="806"/><text x="99.1781%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (57 samples, 0.07%)</title><rect x="99.7970%" y="469" width="0.0661%" height="15" fill="rgb(228,202,34)" fg:x="86028" fg:w="57"/><text x="100.0470%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (57 samples, 0.07%)</title><rect x="99.7970%" y="453" width="0.0661%" height="15" fill="rgb(254,200,22)" fg:x="86028" fg:w="57"/><text x="100.0470%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (57 samples, 0.07%)</title><rect x="99.7970%" y="437" width="0.0661%" height="15" fill="rgb(219,10,39)" fg:x="86028" fg:w="57"/><text x="100.0470%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (57 samples, 0.07%)</title><rect x="99.7970%" y="421" width="0.0661%" height="15" fill="rgb(226,210,39)" fg:x="86028" fg:w="57"/><text x="100.0470%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (28 samples, 0.03%)</title><rect x="99.8678%" y="309" width="0.0325%" height="15" fill="rgb(208,219,16)" fg:x="86089" fg:w="28"/><text x="100.1178%" y="319.50"></text></g><g><title>libsystem_m.dylib`exp (14 samples, 0.02%)</title><rect x="99.8840%" y="293" width="0.0162%" height="15" fill="rgb(216,158,51)" fg:x="86103" fg:w="14"/><text x="100.1340%" y="303.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (35 samples, 0.04%)</title><rect x="99.8654%" y="389" width="0.0406%" height="15" fill="rgb(233,14,44)" fg:x="86087" fg:w="35"/><text x="100.1154%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.04%)</title><rect x="99.8654%" y="373" width="0.0406%" height="15" fill="rgb(237,97,39)" fg:x="86087" fg:w="35"/><text x="100.1154%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (35 samples, 0.04%)</title><rect x="99.8654%" y="357" width="0.0406%" height="15" fill="rgb(218,198,43)" fg:x="86087" fg:w="35"/><text x="100.1154%" y="367.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.04%)</title><rect x="99.8654%" y="341" width="0.0406%" height="15" fill="rgb(231,104,20)" fg:x="86087" fg:w="35"/><text x="100.1154%" y="351.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (35 samples, 0.04%)</title><rect x="99.8654%" y="325" width="0.0406%" height="15" fill="rgb(254,36,13)" fg:x="86087" fg:w="35"/><text x="100.1154%" y="335.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.04%)</title><rect x="99.8643%" y="405" width="0.0429%" height="15" fill="rgb(248,14,50)" fg:x="86086" fg:w="37"/><text x="100.1143%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.05%)</title><rect x="99.8643%" y="437" width="0.0510%" height="15" fill="rgb(217,107,29)" fg:x="86086" fg:w="44"/><text x="100.1143%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (44 samples, 0.05%)</title><rect x="99.8643%" y="421" width="0.0510%" height="15" fill="rgb(251,169,33)" fg:x="86086" fg:w="44"/><text x="100.1143%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (51 samples, 0.06%)</title><rect x="99.8631%" y="485" width="0.0592%" height="15" fill="rgb(217,108,32)" fg:x="86085" fg:w="51"/><text x="100.1131%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (51 samples, 0.06%)</title><rect x="99.8631%" y="469" width="0.0592%" height="15" fill="rgb(219,66,42)" fg:x="86085" fg:w="51"/><text x="100.1131%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (50 samples, 0.06%)</title><rect x="99.8643%" y="453" width="0.0580%" height="15" fill="rgb(206,180,7)" fg:x="86086" fg:w="50"/><text x="100.1143%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (858 samples, 1.00%)</title><rect x="98.9281%" y="533" width="0.9953%" height="15" fill="rgb(208,226,31)" fg:x="85279" fg:w="858"/><text x="99.1781%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (858 samples, 1.00%)</title><rect x="98.9281%" y="517" width="0.9953%" height="15" fill="rgb(218,26,49)" fg:x="85279" fg:w="858"/><text x="99.1781%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (52 samples, 0.06%)</title><rect x="99.8631%" y="501" width="0.0603%" height="15" fill="rgb(233,197,48)" fg:x="86085" fg:w="52"/><text x="100.1131%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (9 samples, 0.01%)</title><rect x="99.9258%" y="389" width="0.0104%" height="15" fill="rgb(252,181,51)" fg:x="86139" fg:w="9"/><text x="100.1758%" y="399.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="99.9258%" y="373" width="0.0104%" height="15" fill="rgb(253,90,19)" fg:x="86139" fg:w="9"/><text x="100.1758%" y="383.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.9258%" y="405" width="0.0128%" height="15" fill="rgb(215,171,30)" fg:x="86139" fg:w="11"/><text x="100.1758%" y="415.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (17 samples, 0.02%)</title><rect x="99.9258%" y="421" width="0.0197%" height="15" fill="rgb(214,222,9)" fg:x="86139" fg:w="17"/><text x="100.1758%" y="431.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.02%)</title><rect x="99.9234%" y="469" width="0.0244%" height="15" fill="rgb(223,3,22)" fg:x="86137" fg:w="21"/><text x="100.1734%" y="479.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (21 samples, 0.02%)</title><rect x="99.9234%" y="453" width="0.0244%" height="15" fill="rgb(225,196,46)" fg:x="86137" fg:w="21"/><text x="100.1734%" y="463.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.02%)</title><rect x="99.9234%" y="437" width="0.0244%" height="15" fill="rgb(209,110,37)" fg:x="86137" fg:w="21"/><text x="100.1734%" y="447.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (880 samples, 1.02%)</title><rect x="98.9281%" y="565" width="1.0208%" height="15" fill="rgb(249,89,12)" fg:x="85279" fg:w="880"/><text x="99.1781%" y="575.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (880 samples, 1.02%)</title><rect x="98.9281%" y="549" width="1.0208%" height="15" fill="rgb(226,27,33)" fg:x="85279" fg:w="880"/><text x="99.1781%" y="559.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (22 samples, 0.03%)</title><rect x="99.9234%" y="533" width="0.0255%" height="15" fill="rgb(213,82,22)" fg:x="86137" fg:w="22"/><text x="100.1734%" y="543.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (22 samples, 0.03%)</title><rect x="99.9234%" y="517" width="0.0255%" height="15" fill="rgb(248,140,0)" fg:x="86137" fg:w="22"/><text x="100.1734%" y="527.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="99.9234%" y="501" width="0.0255%" height="15" fill="rgb(228,106,3)" fg:x="86137" fg:w="22"/><text x="100.1734%" y="511.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (22 samples, 0.03%)</title><rect x="99.9234%" y="485" width="0.0255%" height="15" fill="rgb(209,23,37)" fg:x="86137" fg:w="22"/><text x="100.1734%" y="495.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::join::join_context::_{{closure}} (888 samples, 1.03%)</title><rect x="98.9281%" y="581" width="1.0301%" height="15" fill="rgb(241,93,50)" fg:x="85279" fg:w="888"/><text x="99.1781%" y="591.50"></text></g><g><title>cpu_bench_v0-42868c868297afde`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (7,107 samples, 8.24%)</title><rect x="91.7149%" y="597" width="8.2445%" height="15" fill="rgb(253,46,43)" fg:x="79061" fg:w="7107"/><text x="91.9649%" y="607.50">cpu_bench_v..</text></g><g><title>all (86,203 samples, 100%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(226,206,43)" fg:x="0" fg:w="86203"/><text x="0.2500%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (7,142 samples, 8.29%)</title><rect x="91.7149%" y="709" width="8.2851%" height="15" fill="rgb(217,54,7)" fg:x="79061" fg:w="7142"/><text x="91.9649%" y="719.50">libsystem_pt..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (7,142 samples, 8.29%)</title><rect x="91.7149%" y="693" width="8.2851%" height="15" fill="rgb(223,5,52)" fg:x="79061" fg:w="7142"/><text x="91.9649%" y="703.50">libsystem_pt..</text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys::unix::thread::Thread::new::thread_start (7,142 samples, 8.29%)</title><rect x="91.7149%" y="677" width="8.2851%" height="15" fill="rgb(206,52,46)" fg:x="79061" fg:w="7142"/><text x="91.9649%" y="687.50">cpu_bench_v0..</text></g><g><title>cpu_bench_v0-42868c868297afde`core::ops::function::FnOnce::call_once{{vtable.shim}} (7,142 samples, 8.29%)</title><rect x="91.7149%" y="661" width="8.2851%" height="15" fill="rgb(253,136,11)" fg:x="79061" fg:w="7142"/><text x="91.9649%" y="671.50">cpu_bench_v0..</text></g><g><title>cpu_bench_v0-42868c868297afde`std::sys_common::backtrace::__rust_begin_short_backtrace (7,142 samples, 8.29%)</title><rect x="91.7149%" y="645" width="8.2851%" height="15" fill="rgb(208,106,33)" fg:x="79061" fg:w="7142"/><text x="91.9649%" y="655.50">cpu_bench_v0..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::ThreadBuilder::run (7,142 samples, 8.29%)</title><rect x="91.7149%" y="629" width="8.2851%" height="15" fill="rgb(206,54,4)" fg:x="79061" fg:w="7142"/><text x="91.9649%" y="639.50">cpu_bench_v0..</text></g><g><title>cpu_bench_v0-42868c868297afde`rayon_core::registry::WorkerThread::wait_until_cold (7,142 samples, 8.29%)</title><rect x="91.7149%" y="613" width="8.2851%" height="15" fill="rgb(213,3,15)" fg:x="79061" fg:w="7142"/><text x="91.9649%" y="623.50">cpu_bench_v0..</text></g><g><title>libsystem_kernel.dylib`swtch_pri (29 samples, 0.03%)</title><rect x="99.9664%" y="597" width="0.0336%" height="15" fill="rgb(252,211,39)" fg:x="86174" fg:w="29"/><text x="100.2164%" y="607.50"></text></g></svg></svg>